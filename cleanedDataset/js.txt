<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>A function can be stored in a variable:</p>
<p id="demo"></p>

<script>
const x = function (a, b) {return a * b};
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_expression by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript setMonth()</h2>
<p>The setMonth() method sets the mont of a date object.</p>
<p>Note that months count from 0. December is month 11:</p>

<p id="demo"></p>

<script>
const d = new Date();
d.setMonth(11);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_setmonth by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p><a id="myAnchor" rel="nofollow" href="../index.html">W3Schools</a></p>

<p>Click the button to display the value of the rel attribute of the link above.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("myAnchor").rel;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_anchor_rel by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>The instanceof operator returns true when used on an array:</p>

<p id="demo"></p>

<script>
var fruits = ["Banana", "Orange", "Apple"];
document.getElementById("demo").innerHTML = fruits instanceof Array;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_instanceof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Creating an object:</p>

<p id="demo"></p>

<script>
const person = {
  firstName : "John",
  lastName  : "Doe",
  age     : 50,
  eyeColor  : "blue"
};

document.getElementById("demo").innerHTML = person.firstName + " " + person.lastName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_const by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>This example will return a correct result:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = myFunction(55);
function myFunction(a) {
  let power = 10;
  return a * power;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_return_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.log()</h2>

<p>How many times must we multiply Math.E to get 10?</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.log(10);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_log_ten_times by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function isKeyPressed(event) {
  var text = "The shift key was NOT pressed!";
  if (event.shiftKey == 1) {
    text = "The shift key was pressed!";
  }
  document.getElementById("demo").innerHTML = text;
}
</script>
</head>

<body onmousedown="isKeyPressed(event)">

<p>Click on this paragraph. An alert box will tell you if you pressed the shift key or not.</p>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_event_shiftkey by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>
<p>Using Map.keys():</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

let text = "";
for (const x of fruits.keys()) {
  text += x + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_keys by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object.defineProperty()</h2>

<p>This example uses the defineProperty() method to add a getter and a setter.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {firstName:"John", lastName:"Doe"};

// Define a getter
Object.defineProperty(person, "fullName", {
  get: function () {return this.firstName + " " + this.lastName;}
});

// Display full name
document.getElementById("demo").innerHTML = person.fullName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_es5_6 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Assign 5 to x, and display the value of the comparison (x == 5):</p>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = (x == "5");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison12 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>Future reserved keywords are not allowed in strict mode.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
let public = 1500;   // This will cause an error 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_names by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>An object method is a function definition stored as a property value.</p>
<p>If you access it without (), it will return the function definition:</p>

<p id="demo"></p>

<script>
const person = {
  firstName: "John",
  lastName: "Doe",
  id: 5566,
  fullName: function() {
    return this.firstName + " " + this.lastName;
  }
};

document.getElementById("demo").innerHTML = person.fullName;
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_function by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Iterables</h2>
<p>Iterate over a Set:</p>

<p id="demo"></p>

<script>
// Create a Set
const letters = new Set(["a","b","c"]);

// List all Elements
let text = "";
for (const x of letters) {
  text += x + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_iterate_set by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function insRow(id) {
  var x = document.getElementById(id).insertRow(0);
  var y = x.insertCell(0);
  var z = x.insertCell(1);
  y.innerHTML = z.innerHTML = "New";
}
</script>
</head>

<body>
<table id="myTable" style="border: 1px solid black">
  <tr>
    <td>Row1 cell1</td>
    <td>Row1 cell2</td>
  </tr>
  <tr>
    <td>Row2 cell1</td>
    <td>Row2 cell2</td>
  </tr>
  <tr>
    <td>Row3 cell1</td>
    <td>Row3 cell2</td>
  </tr>
</table>

<p>
<input type="button" onclick="insRow('myTable')" value="Insert row">
</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_table_insertrow by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<h3>The window.location object</h3>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"Page hostname is: " + window.location.hostname;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loc_host by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The Navigator Object</h2>

<p>The platform property returns the browser platform (operating system):</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"navigator.platform is " + navigator.platform;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_nav_platform by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The concat() method joins two or more strings:</p>

<p id="demo"></p>

<script>
let text1 = "Hello";
let text2 = "World!";
let text3 = text1.concat(" ",text2);
document.getElementById("demo").innerHTML = text3;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_concat by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML DOM</h2>

<p>Hello World!</p>

<p>Hello Norway!</p>

<p id="demo"></p>

<script>
const myNodelist = document.querySelectorAll("p");

document.getElementById("demo").innerHTML = "The innerHTML of the second paragraph is: " + myNodelist[1].innerHTML;

</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nodelist by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Creating a JavaScript Object:</p>

<p id="demo"></p>

<script>
const person = new Object();
person.firstName = "John";
person.lastName = "Doe";
person.age = 50;
person.eyeColor = "blue"; 

document.getElementById("demo").innerHTML =
person.firstName + " is " + person.age + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_create_new by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.reduceRight()</h2>

<p>This example finds the sum of all numbers in an array:</p>

<p id="demo"></p>

<script>
var numbers = [45, 4, 9, 16, 25];
var sum = numbers.reduceRight(myFunction);

document.getElementById("demo").innerHTML = "The sum is " + sum;

function myFunction(total, value) {
  return total + value;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_array_reduce_right by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>A number divided by a non-numeric string becomes NaN (Not a Number):</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 100 / "Apple";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_divide_string by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
  <head>
  <title>W3Schools Demo</title>
  </head>
<body>

<h2>Finding HTML Elements Using document.title</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"The title of this document is: " + document.title;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_title by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction(x) {
  x.style.background = "yellow";
}
</script>
</head>
<body>

Enter your name: <input type="text" onfocus="myFunction(this)">

<p>When the input field gets focus, a function is triggered which changes the background-color.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onfocus by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Assign 5 to x, and display the value of the comparison (x !== "5"):</p>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = (x !== "5");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison6 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Click the button to open a new window and add some content.</p>

<button onclick="myFunction()">Try it</button>

<script>
function myFunction() {
  var w = window.open();
  w.document.open();
  w.document.write("<h2>Hello World!</h2>");
  w.document.close();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_open2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Creating a JavaScript Object:</p>

<p id="demo"></p>

<script>
const person = {firstName:"John", lastName:"Doe", age:50,eyeColor:"blue"};

document.getElementById("demo").innerHTML =
person.firstName + " is " + person.age + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_create_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Access a JavaScript Object</h2>
<p id="demo"></p>

<script>
const myJSON = '{"name":"John", "age":30, "car":null}';
const myObj = JSON.parse(myJSON);
document.getElementById("demo").innerHTML = myObj.name;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_object_dot by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Enter names in the fields, then click "Submit" to submit the form:</p>

<form id="frm1" action="https://www.w3schools.com/action_page.php">
  First name: <input type="text" name="fname"><br>
  Last name: <input type="text" name="lname"><br><br>
  <input type="button" onclick="myFunction()" value="Submit">
</form>

<script>
function myFunction() {
  document.getElementById("frm1").submit();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_form_submit by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>Two digit years will be interpreted as 19xx:</p>

<p id="demo"></p>

<script>
const d = new Date(99, 11, 24);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_two by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Assign 5 to x, and display the value of the comparison (x &lt; 8).</p>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = (x < 8);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison9 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript const</h2>
<p id="demo"></p>

<script>

const cars = ["Saab", "Volvo", "BMW"];
document.getElementById("demo").innerHTML = cars;

</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_const_array_use by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>

<p id="demo"></p>

<script>
const d = new Date("03/25/2015");
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_string_7 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getMonth()</h2>
<p>The getMonth() method returns the month as a number.</p>
<p>You can use an array to display the name of the month:</p>

<p id="demo"></p>

<script>
const months = ["January","February","March","April","May","June","July","August","September","October","November","December"];

const d = new Date();
let month = months[d.getMonth()];
document.getElementById("demo").innerHTML = month;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_month by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Assign 5 to x, and display the value of the comparison (x === 5):</p>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = (x === 5);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>What Can JavaScript Do?</h2>

<p>JavaScript can show hidden HTML elements.</p>

<p id="demo" style="display:none">Hello JavaScript!</p>

<button type="button" onclick="document.getElementById('demo').style.display='block'">Click Me!</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_intro_show by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:31 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math</h2>

<p>Math.floor(Math.random() * 10) + 1) returns a random integer between 1 and 10 
(both included):</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
Math.floor(Math.random() * 10) + 1;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_random_1_10 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>Sum of all arguments:</p>
<p id="demo"></p>

<script>
function sumAll() {
  let sum = 0;
  for(let i = 0; i < arguments.length; i++) {
    sum += arguments[i];
  }
  return sum;
}
document.getElementById("demo").innerHTML = sumAll(1, 123, 500, 115, 44, 88);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_arguments_sum by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object.defineProperty()</h2>

<p>This example adds a new property to an object.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  language: "EN"
};

// Add a property
Object.defineProperty(person, "year", {value:"2008"})
document.getElementById("demo").innerHTML = person.year;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_es5_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The %= Operator</h2>

<p id="demo"></p>

<script>
var x = 10;
x %= 5;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_modequal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Template Literals</h2>

<p>Template literals allows variables in strings:</p>

<p id="demo"></p>

<p>Template literals are not supported in Internet Explorer.</p>

<script>
let header = "Templates Literals";
let tags = ["template literals", "javascript", "es6"];

let html = `<h2>${header}</h2><ul>`;

for (const x of tags) {
  html += `<li>${x}</li>`;
}

html += `</ul>`;
document.getElementById("demo").innerHTML = html;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_templates_html by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Search a string for "w3Schools", and display the position of the match:</p>

<p id="demo"></p>

<script>
let text = "Visit W3Schools!"; 
let n = text.search(/w3Schools/i);
document.getElementById("demo").innerHTML = n;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_string_search by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Get JSON Data from a PHP Server</h2>
<p>The JSON received from the PHP file:</p>

<p id="demo"></p>

<script>
const dbParam = JSON.stringify({"limit":10});

const xmlhttp = new XMLHttpRequest();
xmlhttp.onload = function() {
  document.getElementById("demo").innerHTML = this.responseText;
}
xmlhttp.open("GET.html", "json_demo_db52a0.json?x=" + dbParam);
xmlhttp.send();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_php_db by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:37 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Get JSON Data from a PHP Server</h2>
<p id="demo"></p>

<script>
const obj = { "limit":10 };
const dbParam = JSON.stringify(obj);
const xmlhttp = new XMLHttpRequest();
xmlhttp.onload = function() {
  myObj = JSON.parse(this.responseText);
  let text = ""
  for (let x in myObj) {
    text += myObj[x].name + "<br>";
  }
  document.getElementById("demo").innerHTML = text;
};
xmlhttp.open("GET.html", "json_demo_db52a0.json?x=" + dbParam);
xmlhttp.send();
</script>

<p>Try changing the "limit" property from 10 to 5.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_php_db_loop by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:37 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScropt const variables has block scope</h2>

<p id="demo"></p>

<script>
const  x = 10;
// Here x is 10

{  
const x = 2;
// Here x is 2
}

// Here x is 10
document.getElementById("demo").innerHTML = "x is " + x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_const by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting NaN to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = NaN;
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_nan by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Constructors</h2>

<p id="demo"></p>

<script>

// Constructor function for Person objects
function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
}

// Create 2 Person objects
const myFather = new Person("John", "Doe", 50, "blue");
const myMother = new Person("Sally", "Rally", 48, "green");

// Add a name method to first object
myFather.name = function() {
  return this.firstName + " " + this.lastName;
};

// Display full name
document.getElementById("demo").innerHTML =
"My father is " + myFather.name(); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_constructor3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Operators</h2>
<h3>The = Operator</h3>

<p id="demo"></p>

<script>
let x = 10;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_equal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"Screen width is " + screen.width;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_screen_width by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript ISO Dates</h2>
<p>Separate date and time with a capital T.</p>
<p>Indicate UTC time with a capital Z.</p>

<p id="demo"></p>

<script>
const d = new Date("2015-03-25T12:00:00Z");
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_string_iso4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The -= Operator</h2>

<p id="demo"></p>

<script>
var x = 10;
x -= 5;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_minequal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>For security reasons, eval() is not allowed to create variables in the scope from which it was called.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
eval ("var x = 2");
alert (x);      // This will cause an error 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_eval2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Global Variables</h2>

<p>In HTML, global variables defined with <b>var</b>, will become window variables.</p>

<p id="demo"></p>

<script>
var carName = "Volvo";

// code here can use window.carName
document.getElementById("demo").innerHTML = "I can display " + window.carName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_let_scope by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 18 Apr 2021 18:53:57 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparisons</h2>

<p>This returns false (as expected) because x is not equal to 10:</p>

<p id="demo"></p>

<script>
let x = 0;
document.getElementById("demo").innerHTML = Boolean(x == 10);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_equal_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Creating an Object Parsing JSON</h2>
<p id="demo"></p>

<script>
const myJSON = '{"name":"John", "age":30, "car":null}';
const myObj = JSON.parse(myJSON);
document.getElementById("demo").innerHTML = myObj.name;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_object_parse by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:01 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
let text;
const today = new Date();
const someday = new Date();
someday.setFullYear(2100, 0, 14);

if (someday > today) {
  text = "Today is before January 14, 2100.";
} else {
  text = "Today is after January 14, 2100.";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_compare by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>

<h2>Getting Parent HTML Element</h2>
<p id="01">Hello World!</p>
<p id="02">Hello Sweden!</p>

<p id="demo"></p>

<script>
$(document).ready(function() {
  $("#demo").text($("#02").parent().prop("nodeName")); 
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_getparent by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Creating an Object from a JSON String</h2>

<p id="demo"></p>

<script>
const txt = '{"name":"John", "age":30, "city":"New York"}'
const obj = JSON.parse(txt);
document.getElementById("demo").innerHTML = obj.name + ", " + obj.age;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_parse by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Properties</h2>

<p>Using a Number property on a variable, expression, or value, will return undefined:</p>

<p id="demo"></p>

<script>
let x = 6;
document.getElementById("demo").innerHTML = x.MAX_VALUE;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_max_undefined by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>You can use the global JavaScript function isNaN() to find out if a value is not a number:</p>

<p id="demo"></p>

<script>
let x = 100 / "Apple";
document.getElementById("demo").innerHTML = isNaN(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_isnan_true by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Date.parse()</h2>
<p>Date.parse() returns the number of milliseconds between the date and January 1, 1970:</p>

<p id="demo"></p>

<script>
const msec = Date.parse("March 21, 2012");
document.getElementById("demo").innerHTML = msec;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_parse by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form id="frm1" action="https://www.w3schools.com/action_page.php" target="_self">
  First name: <input type="text" name="fname" value="Donald"><br>
  Last name: <input type="text" name="lname" value="Duck"><br><br>
  <input type="submit" value="Submit">
</form>

<p>Click "Try it" to display the target of the form:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("frm1").target;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_form_target by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function message() {
  alert("This alert box was triggered by the onreset event handler");
}
</script>
</head>
<body>

<form onreset="message()">
  Enter your name: <input type="text" size="20">
  <input type="reset">
</form>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onreset by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The XMLHttpRequest Object</h2>
<h3>Start typing a name in the input field below:</h3>

<p>Suggestions: <span id="txtHint"></span></p> 
<p>First name: <input type="text" id="txt1" onkeyup="showHint(this.value)"></p>

<script>
function showHint(str) {
  if (str.length == 0) { 
    document.getElementById("txtHint").innerHTML = "";
    return;
  }
  const xhttp = new XMLHttpRequest();
  xhttp.onload = function() {
    document.getElementById("txtHint").innerHTML =
    this.responseText;
  }
  xhttp.open("GET.html", "gethint03d2-2.html?q="+str);
  xhttp.send();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_suggest_asp by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:00 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Assignments</h2>
<h3>The -= Operator</h3>

<p id="demo"></p>

<script>
let x = 10;
x -= 5;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_assign_minequal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>

<p>If you access an object method without (), it will return the function definition:</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName : "Doe",
  id     : 5566,
  fullName : function() {
    return this.firstName + " " + this.lastName;
  }
};

// Display data from the object:
document.getElementById("demo").innerHTML = person.fullName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_objects_function by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>Octal escape characters are not allowed.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
let x = "\010";   // This will cause an error 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_escape by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Setting Text Content</h2>

<p id="01">Hello World!</p>
<p id="02">Hello Sweden!</p>

<script>
const myElement = document.getElementById("01");
myElement.textContent = "Hello Sweden!";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_dom_settext by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Display the Boolean value of false:</p>

<p id="demo"></p>

<script>
let x = false;
document.getElementById("demo").innerHTML = Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_boolean_false by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Bitwise Right</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 5 >>> 1;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_bitwise_right by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Getters and Setters</h2>

<p>Getters and setters allow you to get and set properties via methods.</p>

<p>This example creates a setter and a getter for the language property.</p>

<p id="demo"></p>

<script>
// Create an object:
var person = {
  firstName: "John",
  lastName : "Doe",
  language : "NO",
  get lang() {
    return this.language;
  },
  set lang(value) {
    this.language = value;
  }
};
// Set an object property using a setter:
person.lang = "en";
// Display data from the object using a getter:
document.getElementById("demo").innerHTML = person.lang;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_setter by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Display the Boolean value of "":</p>

<p id="demo"></p>

<script>
let x = "";
document.getElementById("demo").innerHTML = Boolean("");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_boolean_empty by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
var w;
function openwindow() {
  w = window.open('','', 'width=100,height=100');
  w.focus();
}

function myFunction() {
  w.resizeTo(500, 500);
  w.focus();
}

</script>
</head>
<body>

<button onclick="openwindow()">Create window</button>
<button onclick="myFunction()">Resize window</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_window_resizeto by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Finding HTML Elements Using document.images</h2>

<img src="pic_htmltree.gif" width="486" height="266">
<img src="pic_navigate.gif" width="362" height="255">

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"Number of images: " + document.images.length;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_images by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>What Can JavaScript Do?</h2>

<p id="demo">JavaScript can change HTML content.</p>

<button type="button" onclick="document.getElementById('demo').innerHTML = 'Hello JavaScript!'">Click Me!</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_intro_inner_html_quotes by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Finding HTML Elements by Tag Name</h2>
<p>Hello World!</p>
<p>Hello Sweden!</p>
<p>Hello Japan!</p>

<p id="demo"></p>

<script>
const myElements = document.getElementsByTagName("p");
document.getElementById("demo").innerHTML = "The text in the first paragraph is: " + myElements[0].innerHTML;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_dom_getelementsbytagname by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<p>Undefined and null are equal in value but different in type:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
typeof undefined + "<br>" +
typeof null + "<br><br>" +
(null === undefined) + "<br>" +
(null == undefined);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_undefined_3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>My First Page</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = "Hello World!";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_method by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 2 < 12;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_20 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>JavaScript will try to convert strings to numbers when subtracting:</p>

<p id="demo"></p>

<script>
let x = "100";
let y = "10";
let z = x - y;   
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_string3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.min()</h2>

<p>Math.min() returns the lowest value in a list of arguments:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
Math.min(0, 150, 30, 20, -8, -200);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_min by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Access Nested JavaScript Objects</h2>
<p id="demo"></p>

<script>
const myObj = {
  "name":"John",
  "age":30,
  "cars": {
  "car1":"Ford",
  "car2":"BMW",
  "car3":"Fiat"
  }
}
document.getElementById("demo").innerHTML = myObj.cars.car2;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_object_nested by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>A variable without a value has the value of:</p>
<p id="demo"></p>

<script>
let carName;
document.getElementById("demo").innerHTML = carName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_undefined by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>Do a calculation and then display the result.</p>

<p id="demo"></p>

<script>
function myDisplayer(some) {
  document.getElementById("demo").innerHTML = some;
}

function myCalculator(num1, num2) {
  let sum = num1 + num2;
  return sum;
}

let result = myCalculator(5, 5);
myDisplayer(result);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_callback3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Getters and Setters</h2>

<p>Perfect for creating counters:</p>

<p id="demo"></p>

<script>
// Define an object
const obj = {counter:0};

// Define Setters and Getters
Object.defineProperty(obj, "reset", {
  get : function () {this.counter = 0;}
});
Object.defineProperty(obj, "increment", {
  get : function () {this.counter++;}
});
Object.defineProperty(obj, "decrement", {
  get : function () {this.counter--;}
});
Object.defineProperty(obj, "add", {
  set : function (value) {this.counter += value;}
});
Object.defineProperty(obj, "subtract", {
  set : function (value) {this.counter -= value;}
});

// Play with counter:
obj.reset;
obj.add = 5;
obj.subtract = 1;
obj.increment;
obj.decrement;
document.getElementById("demo").innerHTML = obj.counter;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_es5_5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting an object to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
const x = {};
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_object by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>

<p id="demo"></p>

<script>
// Create an object:
const car = {type:"Fiat", model:"500", color:"white"};

// Display some data from the object:
document.getElementById("demo").innerHTML = "The car type is " + car.type;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_objects_object by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>Inside functions, the "this" keyword is no longer the global object if not specified:</h3>

<script>
"use strict";
function myFunction() {
  alert(this);
}
myFunction();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_this by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>Deleting a function is not allowed.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
function x(p1, p2) {}; 
delete x;        // This will cause an error 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_delete_function by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<p>JavaScript evaluates expressions from left to right. Different sequences can produce different results:</p>

<p id="demo"></p>

<script>
let x = "Volvo" + 16 + 4;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_addstrings_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Search</h2>

<p>Perform a global, case-insensitive search for "ain":</p>

<p id="demo"></p>

<script>
let text = "The rain in SPAIN stays mainly in the plain"; 
document.getElementById("demo").innerHTML = text.match(/ain/gi);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_match_regexp2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>The NOT operator (!) returns true for false statements and false for true statements.</p>

<p id="demo"></p>

<script>
let x = 6;
let y = 3;

document.getElementById("demo").innerHTML = 
!(x === y) + "<br>" + 
!(x > y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_not by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript For Loop</h2>

<p id="demo"></p>

<script>
let text = "";

for (let i = 0; i < 5; i++) {
  text += "The number is " + i + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loop_for_ex by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Function bind()</h1>

<p>This example creates 2 objects (person and member).</p>
<p>The member object borrows the fullname method from person:</p> 

<p id="demo"></p>

<script>
const person = {
  firstName:"John",
  lastName: "Doe",
  fullName: function() {
    return this.firstName + " " + this.lastName;
  }
}

const member = {
  firstName:"Hege",
  lastName: "Nilsen",
}

let fullName = person.fullName.bind(member);

document.getElementById("demo").innerHTML = fullName();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_bind_borrow by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Declaring an Array Using const</h2>

<p id="demo"></p>

<script>
var cars = ["Saab", "Volvo", "BMW"];
// Here cars[0] is "Saab"
{  
  var cars = ["Toyota", "Volvo", "BMW"]; 
  // Here cars[0] is "Toyota"
}
// Here cars[0] is "Toyota"
document.getElementById("demo").innerHTML = cars[0];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_var by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getFullYear()</h2>
<p>The getFullYear() method returns the full year of a date:</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.getFullYear();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_getfullyear by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Global Methods</h2>

<p>The parseFloat() method converts strings to numbers:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
  parseFloat("10") + "<br>" +
  parseFloat("10.33") + "<br>" +
  parseFloat("10 6") + "<br>" +  
  parseFloat("10 years") + "<br>" +
  parseFloat("years 10");    
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_global_parsefloat by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>The best way to loop through an array is using a standard for loop:</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
let fLen = fruits.length;

let text = "<ul>";
for (let i = 0; i < fLen; i++) {
  text += "<li>" + fruits[i] + "</li>";
}
text += "</ul>";

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_loop by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.lastIndexOf()</h2>
<p id="demo"></p>

<script>
const fruits = ["Apple", "Orange", "Apple", "Mango"];
let position = fruits.lastIndexOf("Apple") + 1;

document.getElementById("demo").innerHTML = "Apple is found in position " + position;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_lastindexof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
<body>

<canvas id="myChart" style="width:100%;max-width:600px"></canvas>

<script>
var xValues = ["Italy", "France", "Spain", "USA", "Argentina"];
var yValues = [55, 49, 44, 24, 15];
var barColors = ["red", "green","blue","orange","brown"];

new Chart("myChart", {
  type: "horizontalBar",
  data: {
  labels: xValues,
  datasets: [{
    backgroundColor: barColors,
    data: yValues
  }]
},
  options: {
    legend: {display: false},
    title: {
      display: true,
      text: "World Wine Production 2018"
    },
    scales: {
      xAxes: [{ticks: {min: 10, max:60}}]
    }
  }
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_chartjs_bars_horizontal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:31:40 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img src="planets.gif" width="145" height="126" usemap="#planetmap">

<map name="planetmap">
  <area id="venus" shape="circle" coords="124,58,8" alt="Venus" href="venus.html">
</map>

<p>Click the button to return the shape of the "venus" area in the image-map.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("venus").shape;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_area_shape by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:04 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Modify an array value of an object.</p>
<p id="demo"></p>

<script>
let x = "";
const myObj = {
  "name":"John",
  "age":30,
  "cars":[ "Ford", "BMW", "Fiat" ]
};

myObj.cars[1] = "Mercedes";

for (let i in myObj.cars) {
  x += myObj.cars[i] + "<br>";
}

document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_array_modify by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<p>The value (and the data type) of a variable with no value is <b>undefined</b>.</p>

<p id="demo"></p>

<script>
let car;
document.getElementById("demo").innerHTML =
car + "<br>" + typeof car;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_undefined by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>A script tag with a src attribute is created and placed in the document.</p>
<p>The PHP file returns a call to a function with an object as a parameter.</p>
<p id="demo"></p>

<p>Try changing the table property from "customers" to "products".</p>

<script>
const obj = { table: "customers", limit: 10 };
let s = document.createElement("script");
s.src = "jsonp_demo_db52a0.json?x=" + JSON.stringify(obj);
document.body.appendChild(s);

function myFunc(myObj) {
  let txt = "";
  for (let x in myObj) {
    txt += myObj[x].name + "<br>";
  }
  document.getElementById("demo").innerHTML = txt;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_jsonp_php by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:40 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Extra large or extra small numbers can be written with scientific (exponential) notation:</p>

<p id="demo"></p>

<script>
let y = 123e5;
let z = 123e-5;

document.getElementById("demo").innerHTML =
y + "<br>" + z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_numbers_large by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Callbacks</h2>

<p>Do a calculation and then display the result.</p>

<p id="demo"></p>

<script>
function myDisplayer(something) {
  document.getElementById("demo").innerHTML = something;
}

function myCalculator(num1, num2, myCallback) {
  let sum = num1 + num2;
  myCallback(sum);
}

myCalculator(5, 5, myDisplayer);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_callback4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.random()</h2>

<p>Math.random() returns a random number between 0 (included) and 1 (excluded):</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.random();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_random by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>
You can break a code line within a text string with a backslash.
</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = "Hello \
Dolly!";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_break by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Global Methods</h2>

<p>The Number() method can convert a date to a number:</p>

<p id="demo"></p>

<script>
let x = new Date("1970-01-01");
document.getElementById("demo").innerHTML = Number(x); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_global_number_date_0 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Operators</h2>

<p>The assignment operator += can concatenate strings.</p>

<p id="demo"></p>

<script>
let text1 = "What a very ";
text1 += "nice day";
document.getElementById("demo").innerHTML = text1;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_concat4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>Using new Date(milliseconds), creates a new date object as January 1, 1970, 00:00:00 Universal Time (UTC) plus the milliseconds:</p>

<p id="demo"></p>

<script>
const d = new Date(0);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_zero by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The Navigator Object</h2>

<p>The appName property returns the application name of the browser:</p>

<p id="demo"></p>

<p>Strange enough, "Netscape" is the application name for IE11, Chrome, Firefox, and Safari.</p>

<script>
document.getElementById("demo").innerHTML = 
"navigator.appName is " + navigator.appName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_nav_appname by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img src="planets.gif" width="145" height="126" usemap="#planetmap">

<map name="planetmap">
  <area id="venus" shape="circle" coords="124,58,8" alt="Venus" href="venus.html" target="_self">
</map>

<p>Click the button to return the value of the target attribute for the "venus" area in the image-map.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("venus").target;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_area_target by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:05 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML DOM</h2>

<p>Finding HTML Elements by Class Name.</p>
<p class="intro">Hello World!</p>
<p class="intro">This example demonstrates the <b>getElementsByClassName</b> method.</p>

<p id="demo"></p>

<script>
const x = document.getElementsByClassName("intro");
document.getElementById("demo").innerHTML = 
'The first paragraph (index 0) with class="intro" is: ' + x[0].innerHTML;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_getelementsbyclassname by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Looping through arrays inside arrays.</p>
<p id="demo"></p>

<script>
let x = "";
const myObj = {
  "name":"John",
  "age":30,
  "cars": [
    {"name":"Ford", "models":["Fiesta", "Focus", "Mustang"]},
    {"name":"BMW", "models":["320", "X3", "X5"]},
    {"name":"Fiat", "models":["500", "Panda"] }
  ]
}

for (let i in myObj.cars) {
  x += "<h2>" + myObj.cars[i].name + "</h2>";
  for (let j in myObj.cars[i].models) {
    x += myObj.cars[i].models[j] + "<br>";
  }
}

document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_array_nested by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Variables</h2>

<p id="demo"></p>

<script>
// Create and display a variable:
let person = "John Doe";
document.getElementById("demo").innerHTML = person;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_variable by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Hoisting</h2>
<p>With <b>const</b>, you cannot use a variable before it is declared:</p>
<p id="demo"></p>

<script>

try {
  alert(carName);
  const carName = "Volvo";
}
catch (err) {
  document.getElementById("demo").innerHTML = err;
}

</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_const_hoisting by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>The typeof operator, when used on an array, returns object:</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = typeof fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_typeof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form id="frm1" action="https://www.w3schools.com/action_page.php">
<button id="btn1" name="subject" type="submit" value="HTML">HTML</button>
</form>

<p>Click the "Try it" button to display the name of the "HTML" button:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("btn1").name;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_button_name by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The window.print() Method</h2>

<p>Click the button to print the current page.</p>

<button onclick="window.print()">Print this page</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_output_print by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>
<p>The lowest number is <span id="demo"></span>.</p>

<script>
const points = [40, 100, 1, 5, 25, 10];
document.getElementById("demo").innerHTML = myArrayMin(points);

function myArrayMin(arr) {
  let len = arr.length;
  let min = Infinity;
  while (len--) {
    if (arr[len] < min) {
      min = arr[len];
    }
  }
  return min;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort_min by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript ISO Dates</h2>

<p id="demo"></p>

<script>
const d = new Date("2015");
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_string_iso3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>

<p>The lowest number is <span id="demo"></span>.</p>

<script>
const points = [40, 100, 1, 5, 25, 10];
document.getElementById("demo").innerHTML = myArrayMin(points);

function myArrayMin(arr) {
  return Math.min.apply(null, arr);
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort_math_min by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>If you re-declare a JavaScript variable, it will not lose its value.</p>

<p id="demo"></p>

<script>
var carName = "Volvo";
var carName;
document.getElementById("demo").innerHTML = carName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_redefine by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>If you use NaN in a mathematical operation, the result can be a concatenation:</p>

<p id="demo"></p>

<script>
let x = NaN;
let y = "5";
document.getElementById("demo").innerHTML = x + y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_nan_concat by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting false to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = false;
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_false by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Display object properties:</p>

<p id="demo"></p>

<script>
const person = {
  name: "John",
  age: 30,
  city: "New York"
};

let txt = "";
for (let x in person) {
  txt += person[x] + " ";
};

document.getElementById("demo").innerHTML = txt;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_display_properties_loop by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Search for an "e" in the next paragraph:</p>

<p id="p01">The best things in life are free!</p>

<p id="demo"></p>

<script>
let text = document.getElementById("p01").innerHTML;
const pattern = /e/;
document.getElementById("demo").innerHTML = pattern.test(text);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_test by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript addEventListener()</h2>

<p>This example uses the addEventListener() method to execute a function when a user clicks on a button.</p>

<button id="myBtn">Try it</button>

<script>
document.getElementById("myBtn").addEventListener("click", myFunction);

function myFunction() {
  alert ("Hello World!");
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_add2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>The JavaScript <i>this</i> Keyword</h1>
<p>In this example, <b>this</b> refers to the <b>person</b> object.</p>
<p>Because <b>fullName</b> is a method of the person object.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  id: 5566,
  fullName : function() {
    return this.firstName + " " + this.lastName;
  }
};

// Display data from the object:
document.getElementById("demo").innerHTML = person.fullName();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_this_method by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Assigning JavaScript Values</h2>

<p>In JavaScript the = operator is used to assign values to variables.</p>

<p id="demo"></p>

<script>
let x, y;
x = 5;
y = 6;
document.getElementById("demo").innerHTML = x + y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_syntax_assign by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>The JavaScript <i>this</i> Keyword</h1>

<p>In a function, by default, <b>this</b> refers to the global object.</p>

<p>Strict mode does not allow default binding, so <b>this</b> is:</p>
<p id="demo"></p>

<script>
"use strict";
document.getElementById("demo").innerHTML = myFunction();

function myFunction() {
  return this;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_this_strict by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.random()</h2>

<p>Every time you click the button, getRndInteger(min, max) returns a random number between 1 and 10 (both included):</p>

<button onclick="document.getElementById('demo').innerHTML = getRndInteger(1,10)">Click Me</button>

<p id="demo"></p>

<script>
function getRndInteger(min, max) {
  return Math.floor(Math.random() * (max - min + 1) ) + min;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_random_function2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript const</h2>

<p>Declaring a constant array does NOT make the elements unchangeable:</p>

<p id="demo"></p>

<script>
// Create an Array:
const cars = ["Saab", "Volvo", "BMW"];

// Change an element:
cars[0] = "Toyota";

// Add an element:
cars.push("Audi");

// Display the Array:
document.getElementById("demo").innerHTML = cars; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_const_array by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo">Click the button to change the layout of this paragraph</p>

<button onclick="myFunction()">Click Me!</button>

<script>
function myFunction() {
  let x = document.getElementById("demo");
  x.style.fontSize = "25px"; 
  x.style.color = "red"; 
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_default by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 07:24:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<body>
<canvas id="myChart" style="width:100%;max-width:700px"></canvas>

<script>
var xyValues = [
  {x:50, y:7},
  {x:60, y:8},
  {x:70, y:8},
  {x:80, y:9},
  {x:90, y:9},
  {x:100, y:9},
  {x:110, y:10},
  {x:120, y:11},
  {x:130, y:14},
  {x:140, y:14},
  {x:150, y:15}
];

new Chart("myChart", {
  type: "scatter",
  data: {
    datasets: [{
      pointRadius: 4,
      pointBackgroundColor: "rgb(0,0,255)",
      data: xyValues
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      xAxes: [{ticks: {min: 40, max:160}}],
      yAxes: [{ticks: {min: 6, max:16}}],
    }
  }
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_chartjs_scatter by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:31:40 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>This if statement returns false (maybe not as expected), because 0 is false:</p>

<p id="demo"></p>

<script>
let x = 0;
document.getElementById("demo").innerHTML = Boolean(x = 0);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_equal_3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Assign 5 to x, and display the value of the comparison (x &gt; 8).</p>
 
<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = (x > 8);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison8 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comments are NOT Executed</h2>

<p id="demo"></p>

<script>
let x;
x = 5;
// x = 6; I will not be executed
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_syntax_comments by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>If you use NaN in a mathematical operation, the result will also be NaN:</p>

<p id="demo"></p>

<script>
let x = NaN;
let y = 5;
document.getElementById("demo").innerHTML = x + y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_nan_math by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Objects</h2>
<p>Never create strings as objects.</p>
<p>Strings and objects cannot be safely compared.</p>

<p id="demo"></p>

<script>
let x = "John";        // x is a string
let y = new String("John");  // y is an object
document.getElementById("demo").innerHTML = (x === y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_best_object_string1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Sets</h2>
<p>The instanceof operator returns true:</p>

<p id="demo"></p>

<script>
// Create a new Set
const letters = new Set(["a","b","c"]);

// Display typeof
document.getElementById("demo").innerHTML = letters instanceof Set;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_set_instanceof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1 id="id01">My First Page</h1>
<p id="id02"></p>

<script>
document.getElementById("id02").innerHTML = document.getElementById("id01").childNodes[0].nodeValue;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nav_innerhtml3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript apply()</h2>
<p>This example returns the highest number in an array of numbers:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.max.apply(0, [1,2,3]); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_call_math_apply3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>




END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>

<p>You cannot add a new property to a constructor function.</p>

<p id="demo"></p>

<script>
function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
}

Person.nationality = "English";

const myFather = new Person("John", "Doe", 50, "blue");
const myMother = new Person("Sally", "Rally", 48, "green");

document.getElementById("demo").innerHTML =
"The nationality of my father is " + myFather.nationality; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_prototype3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<iframe id="myframe" src="demo_iframe.html">
<p>Your browser does not support iframes.</p>
</iframe>

<p>Click the button to change the background color of the document in the iframe.</p>

<p id="demo"></p>

<button onclick="myFunction()">Try it</button>

<script>
function myFunction() {
  var x = document.getElementById("myframe");
  x.style.backgroundColor = "red";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_iframe_contentdocument by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:06 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript addEventListener()</h2>

<p>This example uses the addEventListener() method to attach a click event to a button.</p>

<button id="myBtn">Try it</button>

<script>
document.getElementById("myBtn").addEventListener("click", function() {
  alert("Hello World!");
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_add by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Celcius to Fahrenhet</h2>

<p>Insert a number into one of the input fields below:</p>

<p><input id="c" onkeyup="convert('C')"> degrees Celsius</p>

<p><input id="f" onkeyup="convert('F')"> degrees Fahrenheit</p> 

<p>Note that the <b>Math.round()</b> method is used, so that the result will be returned as an integer.</p>

<script>
function convert(degree) {
  var x;
  if (degree == "C") {
    x = document.getElementById("c").value * 9 / 5 + 32;
    document.getElementById("f").value = Math.round(x);
  } else {
    x = (document.getElementById("f").value -32) * 5 / 9;
    document.getElementById("c").value = Math.round(x);
  }
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_celsius by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math</h2>

<p>Math.floor() used with Math.random() * 101 returns a random integer between 0 and 100 
(both included):</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
Math.floor(Math.random() * 101);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_random_0_100 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>

<p>JavaScript counts months from 0 to 11.</p>
<p>Specifying a month higher than 11, will not result in an error but add the overflow to the next year:</p>

<p id="demo"></p>

<script>
const d = new Date(2018, 15, 24, 10, 33, 30, 0);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_month_12 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Convert Binary to Decimal</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = bin2dec(101);
function bin2dec(bin){
  return parseInt(bin, 2).toString(10);
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_bitwise_convert_binary by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Math.pow()</h2>

<p id="demo"></p>

<script>
let x = 5;
let z = Math.pow(x, 2)
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_exponent2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>

<head>
<meta content="text/html; charset=iso-8859-2" http-equiv="Content-Type">
</head>

<body>

<h2>JavaScript defineProperty()</h2>

<p id="demo"></p>

<script>
// Create an Object:
var person = {
  firstName: "John",
  lastName : "Doe",
  language : "NO", 
};
// Change a Property:
Object.defineProperty(person, "language", {
  value: "EN",
  writable : true,
  enumerable : true,
  configurable : true
});
// Enumerate Properties
txt = "";
for (var x in person) {
  txt += person[x] + "<br>";
}
document.getElementById("demo").innerHTML = txt;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_defineproperty by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function changeContent(id, row, cell, content) {
  var x = document.getElementById(id).rows[row].cells;
  x[cell].innerHTML = content;
}
</script>
</head>
<body>

<table id="myTable" border="1">
  <tr>
    <td>Row1 cell1</td>
    <td>Row1 cell2</td>
  </tr>
  <tr>
    <td>Row2 cell1</td>
    <td>Row2 cell2</td>
  </tr>
  <tr>
    <td>Row3 cell1</td>
    <td>Row3 cell2</td>
  </tr>
</table>

<p>
<input type="button" onclick="changeContent('myTable', 0, 0, 'Hello')" value="Change content">
</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_table_cellcontent by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>You must use a "backslash" if you must break a statement in a string:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = "Hello \
World!";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_string_3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getHours()</h2>
<p>The getHours() method returns the hours of a date as a number (0-23):</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.getHours();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_gethours by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<p>Multiplication has precedence over addition.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 100 + 50 * 3;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arithmetic_precedence1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript async / await</h2>

<p id="demo"></p>

<script>
function myDisplayer(some) {
  document.getElementById("demo").innerHTML = some;
}

async function myFunction() {return "Hello";}

myFunction().then(
  function(value) {myDisplayer(value);}
);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_async1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript const</h2>

<p>You can NOT reassign a constant array:</p>

<p id="demo"></p>

<script>
try {
  const cars = ["Saab", "Volvo", "BMW"];
  cars = ["Toyota", "Volvo", "Audi"];
}
catch (err) {
  document.getElementById("demo").innerHTML = err;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_const_array_assign by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript const</h2>

<p>You can NOT reassign a constant object:</p>

<p id="demo"></p>

<script>
try {
  const car = {type:"Fiat", model:"500", color:"white"};
  car = {type:"Volvo", model:"EX60", color:"red"};
}
catch (err) {
  document.getElementById("demo").innerHTML = err;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_const_object_assign by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>You can use quotes inside a string, as long as they don't match the quotes surrounding the string:</p>

<p id="demo"></p>

<script>
let answer1 = "It's alright";
let answer2 = "He is called 'Johnny'";
let answer3 = 'He is called "Johnny"';

document.getElementById("demo").innerHTML =
answer1 + "<br>" + 
answer2 + "<br>" + 
answer3;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_string by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>External JavaScript</h2>

<p id="demo">A Paragraph.</p>

<button type="button" onclick="myFunction()">Try it</button>

<p>This example uses a file path to link to "myScript.js".</p>
<p>(myFunction is stored in "myScript.js")</p>

<script src="myScript.js"></script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_whereto_url_relative by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
</head>
<body>

<h2>Finding HTML Elements by Class Name</h2>

<p class="intro">Hello World!</p>
<p class="intro">Hello Sweden!</p>
<p class="intro">Hello Japan!</p>

<p id="demo"></p>

<script>
$(document).ready(function() {
  var myElements = $(".intro");
  $("#demo").text("The first paragraph with class='intro' is: " + myElements[0].innerHTML);
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_getelementsbyclassname by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Demo External JavaScript</h2>

<p id="demo">A Paragraph.</p>

<button type="button" onclick="myFunction()">Try it</button>

<p>This example links to "myScript.js".</p>
<p>(myFunction is stored in "myScript.js")</p>

<script src="myScript.js"></script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_whereto_external by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>In this example, x, y, and z are variables.</p>

<p id="demo"></p>

<script>
var x = 5;
var y = 6;
var z = x + y;
document.getElementById("demo").innerHTML =
"The value of z is: " + z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.forEach()</h2>
<p>Calls a function once for each array element.</p>

<p id="demo"></p>

<script>
const numbers = [45, 4, 9, 16, 25];

let txt = "";
numbers.forEach(myFunction);
document.getElementById("demo").innerHTML = txt;

function myFunction(value) {
  txt += value + "<br>"; 
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_foreach_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.random()</h2>

<p>Every time you click the button, getRndInteger(min, max) returns a random number between 0 
and 9 (both included):</p>

<button onclick="document.getElementById('demo').innerHTML = getRndInteger(0,10)">Click Me</button>

<p id="demo"></p>

<script>
function getRndInteger(min, max) {
  return Math.floor(Math.random() * (max - min)) + min;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_random_function by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>The result of adding "5" + 2 + 3 is:</p>
<p id="demo"></p>

<script>
let x = "5" + 2 + 3;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_add_string_number by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Demo JavaScript in Body</h2>

<p id="demo">A Paragraph.</p>

<button type="button" onclick="myFunction()">Try it</button>

<script>
function myFunction() {
  document.getElementById("demo").innerHTML = "Paragraph changed.";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_whereto_body by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:31 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Do a global search for any of the specified alternatives (red|green):</p>

<p id="demo"></p>

<script>
let text = "re, green, red, green, gren, gr, blue, yellow";
let result = text.match(/(red|green)/g);
document.getElementById("demo").innerHTML = result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_xy by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Geolocation</h2>

<p>Click the button to get your coordinates.</p>

<button onclick="getLocation()">Try It</button>

<p id="demo"></p>

<script>
const x = document.getElementById("demo");

function getLocation() {
  try {
    navigator.geolocation.getCurrentPosition(showPosition);
  } catch {
    x.innerHTML = err;
  }
}

function showPosition(position) {
  x.innerHTML = "Latitude: " + position.coords.latitude + 
  "<br>Longitude: " + position.coords.longitude;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_api_geo_coordinates by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getDate()</h2>
<p>The getDate() method returns the day of a date as a number (1-31):</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.getDate();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_getdate by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>Search a string for &quot;W3Schools&quot;, and display the position of the match:</p>

<p id="demo"></p>

<script>
let text = "Visit W3Schools!"; 
let n = text.search("W3Schools");
document.getElementById("demo").innerHTML = n;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_search by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The += Operator</h2>

<p id="demo"></p>

<script>
var x = 10;
x += 5;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_plusequal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparisons</h2>

<p>Input your age and click the button:</p>

<input id="age" value="18" />

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  let voteable;
  let age = Number(document.getElementById("age").value);
  if (isNaN(age)) {
    voteable = "Input is not a number";
  } else {
    voteable = (age < 18) ? "Too young" : "Old enough";
  }
  document.getElementById("demo").innerHTML = voteable + " to vote";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_12 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 2 < "12";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_21 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>

<body>

<h2>Finding HTML Elements by Tag Name</h2>

<p>Hello World!</p>
<p>Hello Sweden!</p>
<p>Hello Japan!</p>

<p id="demo"></p>

<script>
$(document).ready(function() {
  var myElements = $("p");
  $("#demo").text("The text in the first paragraph is: " + myElements[0].innerHTML);
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_getelementsbytagname by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Search</h2>

<p>Check if a string includes "world":</p>

<p id="demo"></p>

<p>The includes() method is not supported in Internet Explorer.</p>

<script>
let text = "Hello world, welcome to the universe.";
document.getElementById("demo").innerHTML = text.includes("world");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_includes by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Numbers can be written with or without decimals:</p>

<p id="demo"></p>

<script>
let x = 3.14;
let y = 3;
document.getElementById("demo").innerHTML = x + "<br>" + y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Alert</h2>

<button onclick="myFunction()">Try it</button>

<script>
function myFunction() {
  alert("I am an alert box!");
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_alert by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<base id="htmldom" target="_self" >
</head>
<body>

<p>Click the button to display the value of the target attribute of the base element.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("htmldom").target;
  document.getElementById("demo").innerHTML = "Base target for all links: " + x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_base_target by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:05 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.round()</h2>

<p>Math.round(x) returns the value of x rounded to its nearest integer:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.round(4.6);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_round_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Errors</h2>

<p>Some characters cannot be decoded with decodeURI():</p>

<p id="demo"></p>

<script>
try {
  decodeURI("%%%");
}
catch(err) {
  document.getElementById("demo").innerHTML = err.name;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_error_urierror by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Bitwise Left</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 5 << 1;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_bitwise_left by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>
<p>Using Map.set():</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

fruits.set("apples", 200);

document.getElementById("demo").innerHTML = fruits.get("apples");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_set by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>
<p>Using Map.forEach():</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

let text = "";
fruits.forEach (function(value, key) {
  text += key + ' = ' + value + "<br>"
})

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_foreach by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function getElements() {
  var x = document.getElementsByTagName("input");
  document.getElementById("demo").innerHTML = x.length;
}
</script>
</head>
<body>

<input type="text" size="20"><br>
<input type="text" size="20"><br>
<input type="text" size="20"><br>

<p>
<input type="button" onclick="getElements()" value="How many input elements?">
</p>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_getelementsbytagname by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<table id="myTable" style="padding:8px;border:1px solid black">
  <tr>
    <td>Jill</td>
    <td>Smith</td>
    <td>50</td>
  </tr>
  <tr>
    <td>Eve</td>
    <td>Jackson</td>
    <td>94</td>
  </tr>
  <tr>
    <td>John</td>
    <td>Doe</td>
    <td>80</td>
  </tr>
</table>

<p>
<input type="button" value="Delete one Row"
onclick="document.getElementById('myTable').deleteRow(0)">
</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_table_deleterow by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Iterables</h2>

<p id="demo"></p>

<script>
// Create an Object
myNumbers = {};

// Make it Iterable
myNumbers[Symbol.iterator] = function() {
  let n = 0;
  done = false;
  return {
    next() {
      n += 10;
      if (n == 100) {done = true}
      return {value:n, done:done};
    }
  };
}

let text = ""
for (const num of myNumbers) {
  text += num +"<br>"
}

document.getElementById("demo").innerHTML = text;
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_iterate_homemade2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The XMLHttpRequest Object</h2>
<button type="button" onclick="loadDoc()">Request data</button>
<p id="demo"></p>

<script>
function loadDoc() {
  const xhttp = new XMLHttpRequest();
  xhttp.onload = function() {
    document.getElementById("demo").innerHTML = this.responseText;
  }
  xhttp.open("GET.html", "demo_get.html");
  xhttp.send();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_get by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:56 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>Writing to a get-only property is not allowed.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
const obj = {get x() {return 0} };

obj.x = 3.14;   // This will cause an error
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_getonly by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting the string "000" to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = "000";
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_string_000 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<button onclick="window.location.replace('../index.html')">
Replace document</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loc_replace by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>The escape sequence \' inserts a single quote in a string.</p>

<p id="demo"></p>

<script>
let text = 'It\'s alright.';
document.getElementById("demo").innerHTML = text; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_escape_quotes1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Floating point arithmetic is not always 100% accurate.</p>

<p id="demo"></p>

<script>
let x = 0.2 + 0.1;
document.getElementById("demo").innerHTML = "0.2 + 0.1 = " + x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_inaccurate2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Do While Loop</h2>

<p id="demo"></p>

<script>
let text = ""
let i = 0;

do {
  text += "<br>The number is " + i;
  i++;
}
while (i < 10);  

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dowhile by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2> 
<h2>slice()</h2>
<p>When the slice() method is given two arguments, it selects array elements from the start argument, and up to (but not included) the end argument:</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
const citrus = fruits.slice(1,3);
document.getElementById("demo").innerHTML = fruits + "<br><br>" + citrus;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_slice by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript const</h2>

<p>Declaring a constant object does NOT make the objects properties unchangeable:</p>

<p id="demo"></p>

<script>
// Create an object:
const car = {type:"Fiat", model:"500", color:"white"};

// Change a property:
car.color = "red";

// Add a property:
car.owner = "Johnson";

// Display the property:
document.getElementById("demo").innerHTML = "Car owner is " + car.owner; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_const_object by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img src="planets.gif" width="145" height="126" usemap="#planetmap">

<map name="planetmap">
  <area id="venus" shape="circle" coords="124,58,8" alt="Venus" href="venus.html">
</map>

<p>Click the button to display the value of the href attribute for the "venus" area.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("venus").href;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_area_href by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:04 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>The global function (myFunction) returns the product of the arguments (a ,b):</p>

<p id="demo"></p>

<script>
function myFunction(a, b) {
  return a * b;
}
document.getElementById("demo").innerHTML = myFunction(10, 2); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_invoke_function by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Search for the characters "LO" in the <b>end</b> of a word in the phrase:</p>
<p>"HELLO, LOOK AT YOU!"</p>

<p>Found in position: <span id="demo"></span></p>

<script>
let text = "HELLO, LOOK AT YOU!"; 
let result = text.search(/LO\b/);
document.getElementById("demo").innerHTML = result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_b2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Properties</h2>

<p>POSITIVE_INFINITY is returned on overflow:</p>

<p id="demo"></p>

<script>
let x = 1 / 0;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_pos_infinity2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>
<p>Click the button (again and again) to sort the array in random order.</p>

<button onclick="myFunction()">Try it</button>
<p id="demo"></p>

<script>
const points = [40, 100, 1, 5, 25, 10];
document.getElementById("demo").innerHTML = points;  

function myFunction() {
  points.sort(function(){return 0.5 - Math.random()});
  document.getElementById("demo").innerHTML = points;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort_random by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Using eval()</h2>
<h3>For security reasons, eval() is not allowed to create variables in the scope from which it was called.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
eval ("let x = 2");
alert (x);      // This will cause an error 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_eval3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>

<p id="demo"></p>

<script>
const person = {
  firstName : "John",
  lastName  : "Doe",
  age     : 50,
  eyeColor  : "blue"
};

document.getElementById("demo").innerHTML =
person.firstName + " is " + person.age + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_object by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function openWin() {
  window.open("../index.html","_blank","toolbar=yes, location=yes, directories=no, status=no, menubar=yes, scrollbars=yes, resizable=no, copyhistory=yes, width=400, height=400");
}
</script>
</head>
<body>

<form>
  <input type="button" value="Open Window" onclick="openWin()">
</form>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_openallwindow by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>The toString() method can output numbers from base 2 to 36:</p>

<p id="demo"></p>

<script>
let myNumber = 32;
document.getElementById("demo").innerHTML =
"Decimal 32 = " + "<br><br>" + 

"Hexatrigesimal (base 36): " + myNumber.toString(36) + "<br>" +
"Duotrigesimal (base 32): " + myNumber.toString(32) + "<br>" +
"Hexadecimal (base 16): " + myNumber.toString(16) + "<br>" +
"Duodecimal (base 12): " + myNumber.toString(12) + "<br>" +
"Decimal (base 10): " + myNumber.toString(10) + "<br>" +
"Octal (base 8): " + myNumber.toString(8) + "<br>" +
"Binary (base 2): " + myNumber.toString(2);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_tostring by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.abs()</h2>

<p>Math.abs(x) returns the absolute (positive) value of x:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.abs(-4.7);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_abs by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>Try to replace "Microsoft" with "W3Schools" in the paragraph below:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo">Please visit Microsoft!</p>

<script>
function myFunction() {
  let text = document.getElementById("demo").innerHTML; 
  document.getElementById("demo").innerHTML =
  text.replace("MICROSOFT","W3Schools");
}
</script>

<p>The replace() method is case sensitive. MICROSOFT (with upper-case) will not be replaced.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace_case by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<iframe id="myframe" src="../default.html" name="iframe_a"></iframe>

<p>Click the button to return the name of the iframe.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("myframe").name;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_iframe_name by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:06 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Expressions</h2>

<p>Expressions compute to values.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 5 * 10;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_syntax_expressions by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTMLDOM</h2>
<p>Displaying document.documentElement</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = document.documentElement.innerHTML;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_document by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Debugger</h2>

<p id="demo"></p>

<p>With the debugger turned on, the code below should stop executing before it executes the third line.</p>

<script>
let x = 15 * 5;
debugger;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_debugger by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<p>JavaScript evaluates expressions from left to right. Different sequences can produce different results:</p>

<p id="demo"></p>

<script>
let x = 16 + 4 + "Volvo";
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_addstrings_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Iterables</h2>
<p>Iterate over an Array:</p>

<p id="demo"></p>

<script>
// Create aa Array
const letters = ["a","b","c"];

// List all Elements
let text = "";
for (const x of letters) {
  text += x + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_iterate_array by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Hoisting</h2>
<p id="demo"></p>

<script>

cars = ["Saab", "Volvo", "BMW"];
var cars;

document.getElementById("demo").innerHTML = cars[0];

</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_hoisting_var by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Methods</h2>

<p>The Object.entries() method returns an array of the key/value pairs in an object:</p>

<p id="demo"></p>

<script>
const person = {
  firstName : "John",
  lastName  : "Doe",
  age     : 50,
  eyeColor  : "blue"
};
document.getElementById("demo").innerHTML = Object.entries(person);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_entries by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.reduce()</h2>

<p>This example finds the sum of all numbers in an array:</p>

<p id="demo"></p>

<script>
var numbers = [45, 4, 9, 16, 25];
var sum = numbers.reduce(myFunction);

document.getElementById("demo").innerHTML = "The sum is " + sum;

function myFunction(total, value, index, array) {
  return total + value;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_array_reduce by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Sets</h2>
<p>forEach() calls a function for each element:</p>

<p id="demo"></p>

<script>
// Create a Set
const letters = new Set(["a","b","c"]);

// List all Elements
let text = "";
letters.forEach (function(value) {
  text += value + "<br>";
})

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_set_foreach by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Promise</h2>

<p id="demo"></p>

<script>
function myDisplayer(some) {
  document.getElementById("demo").innerHTML = some;
}

let myPromise = new Promise(function(myResolve, myReject) {
  let req = new XMLHttpRequest();
  req.open('GET.html', "mycar.html");
  req.onload = function() {
    if (req.status == 200) {
      myResolve(req.response);
    } else {
      myReject("File not Found");
    }
  };
  req.send();
});

myPromise.then(
  function(value) {myDisplayer(value);},
  function(error) {myDisplayer(error);}
);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_promise1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript "this"</h2>

<p>This example demonstrate that in Arrow Functions, the "this" keyword represents the object that owns the function, no matter who calls the function.</p>

<p>Click the button to execute the "hello" function again, and you will see that "this" still  represents the window object.</p>

<button id="btn">Click Me!</button>

<p id="demo"></p>

<script>
var hello;

hello = () => {
  document.getElementById("demo").innerHTML += this;
}

//The window object calls the function:
window.addEventListener("load", hello);

//A button object calls the function:
document.getElementById("btn").addEventListener("click", hello);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arrow_function7 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function confirmInput() {
  fname = document.forms[0].fname.value;
  alert("Hello " + fname + "! You will now be redirected to www.w3Schools.com");
}
</script>
</head>
<body>

<form onsubmit="confirmInput()" action="https://www.w3schools.com/">
  Enter your name: <input id="fname" type="text" size="20">
  <input type="submit">
</form>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onsubmit by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Class Inheritance</h2>

<p>Use the "extends" keyword to inherit all methods from another class.</p>
<p>Use the "super" method to call the parent's constructor function.</p>

<p id="demo"></p>

<script>
class Car {
  constructor(brand) {
    this.carname = brand;
  }
  present() {
    return 'I have a ' + this.carname;
  }
}

class Model extends Car {
  constructor(brand, mod) {
    super(brand);
    this.model = mod;
  }
  show() {
    return this.present() + ', it is a ' + this.model;
  }
}

let myCar = new Model("Ford", "Mustang");
document.getElementById("demo").innerHTML = myCar.show();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_classes_inherit by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function setCookie(cname,cvalue,exdays) {
  const d = new Date();
  d.setTime(d.getTime() + (exdays*24*60*60*1000));
  let expires = "expires=" + d.toUTCString();
  document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
}

function getCookie(cname) {
  let name = cname + "=";
  let decodedCookie = decodeURIComponent(document.cookie);
  let ca = decodedCookie.split(';');
  for(let i = 0; i < ca.length; i++) {
    let c = ca[i];
    while (c.charAt(0) == ' ') {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }
  }
  return "";
}

function checkCookie() {
  let user = getCookie("username");
  if (user != "") {
    alert("Welcome again " + user);
  } else {
     user = prompt("Please enter your name:","");
     if (user != "" && user != null) {
       setCookie("username", user, 30);
     }
  }
}
</script>
</head>

<body onload="checkCookie()"></body>


<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_cookie_username by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript For In Loop</h2>
<p>The for in statement loops through the properties of an object:</p>

<p id="demo"></p>

<script>
const person = {fname:"John", lname:"Doe", age:25}; 

let txt = "";
for (let x in person) {
  txt += person[x] + " ";
}

document.getElementById("demo").innerHTML = txt;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_for_in by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>The result of adding "John" + " " + "Doe" is:</p>
<p id="demo"></p>

<script>
let x = "John" + " " + "Doe";
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_add_strings by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction() {
  alert("You pressed a key inside the input field");
}
</script>
</head>
<body>

<p>A function is triggered when the user is pressing a key in the input field.</p>

<input type="text" onkeydown="myFunction()">

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onkeydown by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Modify object values using bracket notation:</p>

<p id="demo"></p>

<script>
let x = "";
let myObj = {
  "name":"John",
  "age":30,
  "cars": {
  "car1":"Ford",
  "car2":"BMW",
  "car3":"Fiat"
  }
}
myObj.cars["car2"] = "Mercedes";

for (let i in myObj.cars) {
  x += myObj.cars[i] + "<br>";
}

document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_object_modify_bracket by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2> 
<h2>shift()</h2>
<p>The shift() method removes the first element of an array (and "shifts" the other elements to the left):</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = fruits;
fruits.shift();
document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_shift by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<p>When adding a number and a string, JavaScript will treat the number as a string.</p>

<p id="demo"></p>

<script>
let x = 16 + "Volvo";
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_addstring by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Expressions</h2>

<p>Expressions compute to values.</p>

<p id="demo"></p>

<script>
var x;
x = 5;
document.getElementById("demo").innerHTML = x * 10;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_syntax_expressions_variables by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.log()</h2>

<p>Math.log() returns the natural logarithm of a number:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.log(3);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_log_3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting the number 1 to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = 1;
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_number_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>Access an Array by Index</h1>
<p id="demo"></p>

<script>
const myJSON = '["Ford", "BMW", "Fiat"]';
const myArray = JSON.parse(myJSON);
document.getElementById("demo").innerHTML = myArray[0];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_array_index by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:01 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>This example calls a function to convert from Fahrenheit to Celsius:</p>
<p id="demo"></p>

<script>
function toCelsius(f) {
  return (5/9) * (f-32);
}
document.getElementById("demo").innerHTML = toCelsius(77);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_farenheit_to_celsius by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction(x) {
  x.style.background = "yellow";
}
</script>
</head>
<body>

Enter your name: <input type="text" onfocus="myFunction(this)">

<p>When the input field gets focus, a function is triggered which changes the background-color.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_event_onfocus by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Class Gettter/Setter</h2>

<p>A demonstration of how to add getters and setters in a class, and how to use the getter to get the property value.</p>

<p id="demo"></p>

<script>
class Car {
  constructor(brand) {
    this.carname = brand;
  }
  get cnam() {
    return this.carname;
  }
  set cnam(x) {
    this.carname = x;
  }
}

let myCar = new Car("Ford");

document.getElementById("demo").innerHTML = myCar.cnam;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_classes_getters by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math</h2>

<p>Math.floor(Math.random() * 10) returns a random integer between 0 and 9 (both 
included):</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
Math.floor(Math.random() * 10);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_random_0_9 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Do a global search for a "1", followed by zero or one "0" characters:</p>

<p id="demo"></p>

<script>
let text = "1, 100 or 1000?";
let result = text.match(/10?/g);
document.getElementById("demo").innerHTML = result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_n3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = "2" < "12";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_26 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Request With a Callback Function</h2>
<p>The PHP file returns a call to the function you send as a callback.</p>
<p id="demo"></p>

<script>
let s = document.createElement("script");
s.src = "demo_jsonp21346.json?callback=myDisplayFunction";
document.body.appendChild(s);

function myDisplayFunction(myObj) {
  document.getElementById("demo").innerHTML = myObj.name;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_jsonp_callback by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:41 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Bitwise OR</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 5 | 1;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_bitwise_or by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>All programming languages, including JavaScript, have difficulties with precise floating point values:</p>

<p id="demo"></p>

<script>
let x = 0.1;
let y = 0.2;
let z = x + y;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_floats by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Finding HTML Elements Using document.forms</h2>

<form action="#">
First name: <input type="text" name="fname" value="Donald">
<input type="submit" value="Submit">
</form> 

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"Number of forms: " + document.forms.length;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_forms by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Maps</h2>
<p>Clearing a Map:</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

// Clear the Map
fruits.clear();

document.getElementById("demo").innerHTML = fruits.size;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_clear by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>Create an Array with three elements.</p>

<p id="demo"></p>

<script>
var points = new Array(40, 100, 1);
document.getElementById("demo").innerHTML = points;  
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_new_array_three by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>

<p id="demo"></p>

<script>
const d = new Date("JANUARY, 25, 2015");
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_string_6 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>It is a common mistake to forget that switch statements use strict comparison.</p>
<p>This will not work:</p>

<p id="demo"></p>

<script>
let x = 10;
switch(x) {
  case "10": document.getElementById("demo").innerHTML = "Hello";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_loose_4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Methods</h2>

<p>The isNan() method returns true if the argument is NaN. Otherwise it returns false.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
isNaN("Hello") + "<br>" + isNaN("10");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_isnan by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>A number divided by a numeric string becomes a number:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 100 / "10";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_divide_number by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Operators</h2>

<p>The + operator concatenates (adds) strings.</p>

<p id="demo"></p>

<script>
var txt1 = "What a very";
var txt2 = "nice day";
document.getElementById("demo").innerHTML = txt1 + " " + txt2;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_concat3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Confirm Box</h2>


<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var txt;
  if (confirm("Press a button!")) {
    txt = "You pressed OK!";
  } else {
    txt = "You pressed Cancel!";
  }
  document.getElementById("demo").innerHTML = txt;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_confirm by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Creating an Array from JSON</h2>
<p id="demo"></p>

<script>
const myJSON = '["Ford", "BMW", "Fiat"]';
const myArray = JSON.parse(myJSON);
document.getElementById("demo").innerHTML = myArray;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_array_parse by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:01 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Sets</h2>
<p>Set.values() returns a Set Iterator:</p>

<p id="demo"></p>

<script>
// Create a Set
const letters = new Set(["a","b","c"]);

// Display set.size
document.getElementById("demo").innerHTML = letters.values();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_set_values by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>You can declare many variables in one statement.</p>

<p id="demo"></p>

<script>
let person = "John Doe",
carName = "Volvo",
price = 200;
document.getElementById("demo").innerHTML = carName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_multiline by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>The escape sequence \" inserts a double quote in a string.</p>

<p id="demo"></p>

<script>
let text = "We are the so-called \"Vikings\" from the north.";
document.getElementById("demo").innerHTML = text; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_escape_quotes2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>

<body>

<h2>Click the Button.</h2>
<p>A script tag with a src attribute is created and placed in the document.</p>
<p>The PHP file returns a call to a function with the JSON object as a parameter.</p>

<button onclick="clickButton()">Click me!</button>

<p id="demo"></p>

<script>
function clickButton() {
  let s = document.createElement("script");
  s.src = "demo_jsonp.html";
  document.body.appendChild(s);
}

function myFunc(myObj) {
  document.getElementById("demo").innerHTML = myObj.name;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_jsonp_create by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:39 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img src="planets.gif" width="145" height="126" usemap="#planetmap">

<map name="planetmap">
  <area id="venus" shape="circle" coords="124,58,8" alt="Venus" href="venus.html">
</map>

<p>Click the button to display the pathname of the href attribute for the "venus" area in the image-map.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("venus").pathname;
  document.getElementById("demo").innerHTML=x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_area_pathname by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:04 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The charAt() method returns the character at a given position in a string:</p>

<p id="demo"></p>

<script>
var str = "HELLO WORLD";
document.getElementById("demo").innerHTML = str.charAt(0);
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_string_charat by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Operators</h2>

<p>The + operator concatenates (adds) strings.</p>

<p id="demo"></p>

<script>
var txt1 = "What a very";
var txt2 = "nice day";
document.getElementById("demo").innerHTML = txt1 + txt2;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_concat1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.PI</h2>

<p>Math.PI returns the ratio of a circle's circumference to its diameter:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.PI;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_pi by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comments</h2>

<h1 id="myH"></h1>

<p id="myP"></p>

<script>
/*
document.getElementById("myH").innerHTML = "Welcome to my Homepage";
document.getElementById("myP").innerHTML = "This is my first paragraph.";
*/
document.getElementById("myP").innerHTML = "The comment-block is not executed.";
</script>


</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comments4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Strings</h1>
<h2>The trim() Method</h2>

<p id="demo"></p>

<script>
let text1 = "     Hello World!     ";
let text2 = text1.trim();

document.getElementById("demo").innerHTML =
"Length text1 = " + text1.length + "<br>Length text2 = " + text2.length;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_trim by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Exponentiation Assignment (**=)</h2>

<p id="demo"></p>

<script>
let x = 5;
x **= 2;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_exponent3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Timing</h2>

<p>A script on this page starts this clock:</p>

<p id="demo"></p>

<button onclick="clearInterval(myVar)">Stop time</button>

<script>
let myVar = setInterval(myTimer ,1000);
function myTimer() {
  const d = new Date();
  document.getElementById("demo").innerHTML = d.toLocaleTimeString();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_setinterval3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<p>Objects can be emptied by setting the value to <b>undefined</b>.</p>

<p id="demo"></p>

<script>
let person = {firstName:"John", lastName:"Doe", age:50, eyeColor:"blue"};
person = undefined;
document.getElementById("demo").innerHTML = person;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_undefined_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"Screen pixel depth is " + screen.pixelDepth;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_screen_pixelDepth by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Scope</h2>

<p>In HTML, global variables defined with <b>var</b>, will become window variables.</p>

<p id="demo"></p>

<script>
var carName = "Volvo";

// code here can use window.carName
document.getElementById("demo").innerHTML = "I can display " + window.carName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_scope_window by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String.trim()</h2>

<p>IE 8 does not support String.trim(). To trim a string you can use a polyfill.</p>

<script>
if (!String.prototype.trim) {
  String.prototype.trim = function () {
    return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
  };
}
var str = "     Hello World!    ";
alert(str.trim());
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_trim_polyfill by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 18 Apr 2021 18:53:58 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<h3>Math.pow()</h3>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = Math.pow(x,2);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arithmetric_exponent2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function lighton() {
  document.getElementById('myimage').src = "bulbon.gif";
}
function lightoff() {
  document.getElementById('myimage').src = "bulboff.gif";
}
</script>
</head>

<body>

<img id="myimage" onmousedown="lighton()" onmouseup="lightoff()" src="bulboff.gif" width="100" height="180" />

<p>Click mouse and hold down!</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_event_onmousedown by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Hoisting</h2>
<p>With <b>let</b>, you cannot use a variable before it is declared.</p>
<p id="demo"></p>

<script>
try {
  carName = "Saab";
  let carName = "Volvo";
}
catch(err) {
  document.getElementById("demo").innerHTML = err;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_let_hoisting_let by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The JavaScript typeof Operator</h2>

<p>The typeof operator returns the type of a variable, object, function or expression.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
  typeof "john" + "<br>" +
  typeof 3.14 + "<br>" +
  typeof NaN + "<br>" +
  typeof false + "<br>" +
  typeof [1,2,3,4] + "<br>" +
  typeof {name:'john', age:34} + "<br>" +
  typeof new Date() + "<br>" +
  typeof function () {} + "<br>" +
  typeof myCar + "<br>" +
  typeof null;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_typeof_all by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>JavaScript array elements are accessed using numeric indexes (starting from 0).</p>

<p id="demo"></p>

<script>
const cars = ["Saab", "Volvo", "BMW"];
document.getElementById("demo").innerHTML = cars[0];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_element by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2> 
<h2>shift()</h2>
<p>The shift() method returns the element that was shifted out.</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = fruits.shift();
document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_shift_return by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Methods</h2>

<p>The toFixed() method rounds a number to a given number of digits.</p>
<p>For working with money, toFixed(2) is perfect.</p>

<p id="demo"></p>

<script>
let x = 9.656;
document.getElementById("demo").innerHTML =
  x.toFixed(0) + "<br>" +
  x.toFixed(2) + "<br>" +
  x.toFixed(4) + "<br>" +
  x.toFixed(6);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_tofixed by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>JSON.stringify will convert dates into strings:</p>

<p id="demo"></p>

<script>
var person = {
  name: "John",
  today: new Date()
};

document.getElementById("demo").innerHTML = JSON.stringify(person);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_display_stringify_date by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"Screen height is " + screen.height;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_screen_height by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Convert a string into a function.</h2>
<p id="demo"></p>

<script>
const text = '{"name":"John", "age":"function() {return 30;}", "city":"New York"}';
const obj = JSON.parse(text);
obj.age = eval("(" + obj.age + ")");
document.getElementById("demo").innerHTML = obj.name + ", " + obj.age(); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_parse_function by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Bitwise AND</h2>

<p id="demo">My First Paragraph.</p>

<script>
document.getElementById("demo").innerHTML = 5 & 1;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_bitwise_and by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript apply()</h2>
<p>This example returns the highest number in an array of numbers:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.max.apply(null, [1,2,3]); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_call_math_apply by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>




END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.log2()</h2>

<p>Math.log2() returns the base 2 logarithm of a number.</p>
<p>How many times must we multiply 2 to get 8?</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.log2(8);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_log2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Looping JavaScript Object Values</h2>
<p id="demo"></p>

<script>
const myJSON = '{"name":"John", "age":30, "car":null}';
const myObj = JSON.parse(myJSON);

let text = "";
for (const x in myObj) {
  text += myObj[x] + ", ";
}
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_object_loop_bracket by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>

<script>
var txt = "";
function message() {
  try {
    adddlert("Welcome guest!");
  }
  catch(err) {
    txt = "There was an error on this page.\n\n";
    txt += "Click OK to continue viewing this page,\n";
    txt += "or Cancel to return to the home page.\n\n";
    if(!confirm(txt)) {
      document.location.href = "../index.html";
    }
  }
}
</script>

<body>

<h2>JavaScript Error Handling</h2>

<input type="button" value="View message" onclick="message()" />

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_try_catch2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img id="myImg" src="compman.gif" width="107" height="98">

<p>Click the button to display the src attribute of the image.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("myImg").src;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_img_src by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Function bind()</h1>

<p>This example will try to display a person name after 3 seconds.</p>

<p id="demo"></p>

<script>
const person = {
  firstName:"John",
  lastName: "Doe",
  display: function() {
    let x = document.getElementById("demo");
    x.innerHTML = this.firstName + " " + this.lastName;
  }
}

setTimeout(person.display, 3000);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_bind by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Hide HTML Elements</h2>
<p id="01">Hello World!</p>
<p id="02">Hello Sweden!</p>
<p id="03">Hello Japan!</p>

<script>
document.getElementById("02").style.display = "none";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_style_hide by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>
<p>Sort the array in descending order:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const points = [40, 100, 1, 5, 25, 10];
document.getElementById("demo1").innerHTML = points;

points.sort(function(a, b){return b - a});
document.getElementById("demo2").innerHTML = points;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>My First Web Page</h2>
<p>My first paragraph.</p>

<script>
alert(5 + 6);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_output_alert2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.pow()</h2>

<p>Math.pow(x,y) returns the value of x to the power of y:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.pow(8,2);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_pow by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML DOM</h2>

<p>Finding HTML Elements by Tag Name.</p>
<p>This example demonstrates the <b>getElementsByTagName</b> method.</p>

<p id="demo"></p>

<script>
const element = document.getElementsByTagName("p");

document.getElementById("demo").innerHTML = 'The text in first paragraph (index 0) is: ' + element[0].innerHTML;

</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_getelementsbytagname2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>After a function has been stored in a variable,
the variable can be used as a function:</p>

<p id="demo"></p>

<script>
const x = function (a, b) {return a * b};
document.getElementById("demo").innerHTML = x(4, 3);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_expression_variable by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript if</h2>

<p>Display "Good day!" if the hour is less than 18:00:</p>

<p id="demo">Good Evening!</p>

<script>
if (new Date().getHours() < 18) {
  document.getElementById("demo").innerHTML = "Good day!";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ifthen by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>

<script>
function mymessage() {
  alert("This message was triggered from the onload event");
}
</script>
</head>

<body onload="mymessage()">
</body>


<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_event_onload by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>

var x = 'It\'s alright';
var y = "We are the so-called \"Vikings\" from the north.";

document.getElementById("demo").innerHTML = x + "<br>" + y; 

</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strings_escape by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Enter names in the fields below, then click "Reset" to reset the form.</p>

<form id="frm1">
  First name: <input type="text" name="fname"><br>
  Last name: <input type="text" name="lname"><br><br>
  <input type="button" onclick="myFunction()" value="Reset">
</form>

<script>
function myFunction() {
  document.getElementById("frm1").reset();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_form_reset by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript While Loop</h2>

<p id="demo"></p>

<script>
let text = "";
let i = 0;
while (i < 10) {
  text += "<br>The number is " + i;
  i++;
}
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_while by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript let</h2>

<p>Redeclaring a JavaScript variable with <b>var</b> is allowed anywhere in a program:</p>

<p id="demo"></p>

<script>
var x = 2;
// Now x is 2

var x = 3;
// Now x is 3

document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_let_redeclare_var by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Errors</h2>

<p>You cannot use the value of a non-existing variable:</p>

<p id="demo"></p>

<script>
let x = 5;
try {
  x = y + 1;
}
catch(err) {
  document.getElementById("demo").innerHTML = err.name;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_error_referenceerror by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p><a id="myAnchor" href="../index.html">W3Schools</a></p>

<p>Click the button to display the value of the id attribute of the link above.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("myAnchor").id;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_anchor_id by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1 id="myH"></h1>
<p id="myP"></p>

<script>
// Change heading:
document.getElementById("myH").innerHTML = "JavaScript Comments";
// Change paragraph:
document.getElementById("myP").innerHTML = "My first paragraph.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comments1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript For Loop</h2>

<p id="demo"></p>

<script>
const cars = ["BMW", "Volvo", "Saab", "Ford", "Fiat", "Audi"];

let text = "";
for (let i = 0; i < cars.length; i++) {
  text += cars[i] + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loop_for by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.round()</h2>

<p>Math.round(x) returns the value of x rounded to its nearest integer:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.round(4.5);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_round by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Click the button to display the domain name of the server that loaded this document.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  document.getElementById("demo").innerHTML = document.domain;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_domain by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The /= Operator</h2>

<p id="demo"></p>

<script>
var x = 10;
x /= 5;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_divequal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Properties</h2>

<p>The length property returns the length of a string:</p>

<p id="demo"></p>

<script>
let text = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
document.getElementById("demo").innerHTML = text.length;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_length by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Search for the characters "LO" in the <b>beginning</b> of a word in the phrase:</p>
<p>"HELLO, LOOK AT YOU!"</p>

<p>Found in position: <span id="demo"></span></p>

<script>
let text = "HELLO, LOOK AT YOU!"; 
let result = text.search(/\bLO/);
document.getElementById("demo").innerHTML = result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_b by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>

<p>Using an object constructor:</p>

<p id="demo"></p>

<script>
function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
}

const myFather = new Person("John", "Doe", 50, "blue");
const myMother = new Person("Sally", "Rally", 48, "green");

document.getElementById("demo").innerHTML =
"My father is " + myFather.age + ". My mother is " + myMother.age; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_prototype1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Redeclaring a Variable Using let</h2>

<p id="demo"></p>

<script>
let  x = 10;
// Here x is 10

{  
  let x = 2;
  // Here x is 2
}

// Here x is 10
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_let by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Do a global search for "is" in a string:</p>

<p id="demo"></p>

<script>
let text = "Is this all there is?";
let result = text.match(/is/g);
document.getElementById("demo").innerHTML = result; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_g by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Convert a JavaScript object into a JSON string, and send it to the server.</h2>

<script>
const myObj = { name: "John", age: 31, city: "New York" };
const myJSON = JSON.stringify(myObj);
window.location = "demo_json52a0.html?x=" + myJSON;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_send by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML Events</h2>
<h2 onclick="changeText(this)">Click on this text!</h2>

<script>
function changeText(id) {
  id.innerHTML = "Ooops!";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_event_onclick3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>In this example, myFunction is a function constructor:</p>

<p id="demo"></p>

<script>
function myFunction(arg1, arg2) {
  this.firstName = arg1;
  this.lastName  = arg2;
}

const myObj = new myFunction("John","Doe")
document.getElementById("demo").innerHTML = myObj.firstName; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_invoke_constructor by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.random()</h2>

<p>Math.random() returns a random number between 0 and 1:</p>

<p id="demo"></p>

<p>Tip: Click on "Run" several times.</p>

<script>
document.getElementById("demo").innerHTML = Math.random();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_random by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2> 
<p>JavaScript automatically converts an array to a comma separated string when a simple value is expected:</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_automatic by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function whichButton(event) {
  document.getElementById("demo").innerHTML = event.keyCode;
}
</script>
</head>

<body onkeyup="whichButton(event)">

<p><b>Note:</b> Make sure the right frame has focus when trying this example!</p>

<p>Click on this page, and press a key on your keyboard.</p>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_event_keycode by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The XMLHttpRequest Object</h2>
<p id="demo"></p>
 
<script>
const xhttp = new XMLHttpRequest();
xhttp.onload = function() {
  const xmlDoc = this.responseXML;
  const x = xmlDoc.getElementsByTagName("ARTIST");
  let txt = "";
  for (let i = 0; i < x.length; i++) {
    txt = txt + x[i].childNodes[0].nodeValue + "<br>";
  }
  document.getElementById("demo").innerHTML = txt;
}
xhttp.open("GET.html", "cd_catalog.xml");
xhttp.send();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_responsexml by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:00 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.sign()</h2>

<p>Math.sign(x) returns if x is negative, null or positive:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.sign(4);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_sign by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction() {
  var w = window.outerWidth;
  var h = window.outerHeight;
  var txt = "Window size: width=" + w + ", height=" + h;
  document.getElementById("demo").innerHTML = txt;
}
</script>
</head>

<body onresize="myFunction()">

<p>Try to resize the browser window.</p>

<p id="demo">&nbsp;</p>

<p>Note: this example will not work properly in IE8 and earlier. IE8 and earlier do not support the outerWidth/outerHeight propery of the window object.</p>

</body>


<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onresize by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo">Click the button to display the cookies associated with this document.</p>

<button onclick="myFunction()">Try it</button>

<script>
function myFunction() {
  document.getElementById("demo").innerHTML =
  "Cookies associated with this document: " + document.cookie;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_cookie by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>The JavaScript <i>this</i> Keyword</h1>

<p>In this example, <b>this</b> refers to the the window object:</p>
<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = myFunction();

function myFunction() {
  return this;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_this_function by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript typeof</h2>
<p>The typeof operator returns the type of a variable or an expression.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
typeof "" + "<br>" +
typeof "John" + "<br>" + 
typeof "John Doe";
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_typeof_string by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Methods</h2>

<p>The Object.values() method returns an array of values from an object:</p>

<p id="demo"></p>

<script>
const person = {
  firstName : "John",
  lastName  : "Doe",
  age     : 50,
  eyeColor  : "blue"
};
document.getElementById("demo").innerHTML = Object.values(person);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_values by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript switch</h2>

<p id="demo"></p>

<script>
let text;
switch (new Date().getDay()) {
  default:
    text = "Looking forward to the Weekend";
    break;
  case 6:
    text = "Today is Saturday";
    break;
  case 0:
    text = "Today is Sunday";
}
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_switch4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<p>When adding a string and a number, JavaScript will treat the number as a string.</p>

<p id="demo"></p>

<script>
let x = "Volvo" + 16;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_addstring2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Geolocation API</h2>
<p>Click the button to get your coordinates.</p>

<button onclick="getLocation()">Try It</button>

<p id="demo"></p>

<script>
const x = document.getElementById("demo");

function getLocation() {
  if (navigator.geolocation) {
    navigator.geolocation.watchPosition(showPosition);
  } else { 
    x.innerHTML = "Geolocation is not supported by this browser.";
  }
}
    
function showPosition(position) {
    x.innerHTML="Latitude: " + position.coords.latitude + 
    "<br>Longitude: " + position.coords.longitude;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_api_geolocation_watchposition by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:55 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript setFullYear()</h2>
<p>The setFullYear() method can optionally set month and day.</p>
<p>Please note that month counts from 0. December is month 11:</p>

<p id="demo"></p>

<script>
const d = new Date();
d.setFullYear(2020, 11, 3);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_setfullyear_options by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript For Loop</h2>

<p id="demo"></p>

<script>
const cars = ["BMW", "Volvo", "Saab", "Ford"];
let i, len, text;
for (i = 0, len = cars.length, text = ""; i < len; i++) {
  text += cars[i] + "<br>";
}
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loop_for_om1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Integers (numbers without a period or exponent notation) are accurate up to 15 digits:</p>

<p id="demo"></p>

<script>
let x = 999999999999999;
let y = 9999999999999999;
document.getElementById("demo").innerHTML = x + "<br>" + y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_inaccurate1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The substring() method extract a part of a string and returns the extracted parts in a new string:</p>

<p id="demo"></p>

<script>
let str = "Apple, Banana, Kiwi";
document.getElementById("demo").innerHTML = str.substring(7,13);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_substring by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getMonth()</h2>
<p>The getMonth() method returns the month of a date as a number from 0 to 11.</p>
<p>To get the correct month, you must add 1:</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.getMonth() + 1;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_getmonth by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>This example creates an object with 3 properties (firstName, lastName, fullName).</p>
<p>The fullName property is a method:</p> 

<p id="demo"></p>

<script>
const myObject = {
  firstName:"John",
  lastName: "Doe",
  fullName: function() {
    return this.firstName + " " + this.lastName;
  }
}
document.getElementById("demo").innerHTML = myObject.fullName();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_call_method by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<body>

<canvas id="myChart" style="width:100%;max-width:600px"></canvas>

<script>
var xValues = ["Italy", "France", "Spain", "USA", "Argentina"];
var yValues = [55, 49, 44, 24, 15];
var barColors = [
  "rgba(255,0,0,1.0)",
  "rgba(255,0,0,0.8)",
  "rgba(255,0,0,0.6)",
  "rgba(255,0,0,0.4)",
  "rgba(255,0,0,0.2)"
];

new Chart("myChart", {
  type: "bar",
  data: {
    labels: xValues,
    datasets: [{
      backgroundColor: barColors,
      data: yValues
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      yAxes: [{
        ticks: {
          beginAtZero: true
        }
      }],
    }
  }
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_chartjs_bars_colors by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:31:40 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Maps</h2>
<p>Deleting Map elements:</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

// Delete an Element
fruits.delete("apples");

document.getElementById("demo").innerHTML = fruits.size;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_delete by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p id="demo"></p>

<script>
let text = "John Doe";  // String written inside quotes
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The XMLHttpRequest Object</h2>
<button type="button" onclick="loadDoc()">Request data</button>

<p id="demo"></p>

<script>
function loadDoc() {
  const xhttp = new XMLHttpRequest();
  xhttp.onload = function() {
    document.getElementById("demo").innerHTML = this.responseText;
  }
  xhttp.open("GET.html", "demo_get2f409.html?fname=Henry&amp;lname=Ford");
  xhttp.send();
}
</script>
 
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_get2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:58 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript if .. else</h2>

<p>A time-based greeting:</p>

<p id="demo"></p>

<script>
const time = new Date().getHours();
let greeting;
if (time < 10) {
  greeting = "Good morning";
} else if (time < 20) {
  greeting = "Good day";
} else {
  greeting = "Good evening";
}
document.getElementById("demo").innerHTML = greeting;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_elseif by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Operators</h2>

<p>The + operator concatenates (adds) strings.</p>

<p id="demo"></p>

<script>
let text1 = "John";
let text2 = "Doe";
let text3 = text1 + " " + text2;
document.getElementById("demo").innerHTML = text3;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_concatenate by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Statements</h2>

<p>A <b>JavaScript program</b> is a list of <b>statements</b> to be executed by a computer.</p>

<p id="demo"></p>

<script>
var x, y, z;  // Declare 3 variables
x = 5;    // Assign the value 5 to x
y = 6;    // Assign the value 6 to y
z = x + y;  // Assign the sum of x and y to z

document.getElementById("demo").innerHTML =
"The value of z is " + z + ".";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_syntax_statements by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2>
<h2>splice()</h2>
<p>The splice() method adds new elements to an array:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = fruits;

fruits.splice(2, 0, "Lemon", "Kiwi");
document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_splice by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.floor()</h2>

<p>Math.floor(x) returns the value of x rounded <strong>down</strong> to its nearest integer:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.floor(4.7);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_floor by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<body>

<canvas id="myChart" style="width:100%;max-width:600px"></canvas>

<script>
var xValues = ["Italy", "France", "Spain", "USA", "Argentina"];
var yValues = [55, 49, 44, 24, 15];
var barColors = [
  "#b91d47",
  "#00aba9",
  "#2b5797",
  "#e8c3b9",
  "#1e7145"
];

new Chart("myChart", {
  type: "pie",
  data: {
    labels: xValues,
    datasets: [{
      backgroundColor: barColors,
      data: yValues
    }]
  },
  options: {
    title: {
      display: true,
      text: "World Wide Wine Production 2018"
    }
  }
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_chartjs_pie by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:31:40 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>Avoid using new Array().</p>

<p id="demo"></p>

<script>
var points = new Array(40);
document.getElementById("demo").innerHTML = points;  
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_new_error by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Getters and Setters</h2>

<p>Getters and setters allow you to get and set properties via methods.</p>

<p>This example uses a lang property to set the value of the language property.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  language: "NO",
  set lang(value) {
    this.language = value;
  }
};

// Set a property using set:
person.lang = "en";

// Display data from the object:
document.getElementById("demo").innerHTML = person.language;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_accessors_set by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>

<p id="demo"></p>

<script>
// Create Objects
const apples = {name: 'Apples'};
const bananas = {name: 'Bananas'};
const oranges = {name: 'Oranges'};

// Create a Map
const fruits = new Map();

// Add Elements to the Map
fruits.set(apples, 500);
fruits.set(bananas, 300);
fruits.set(oranges, 200);

document.getElementById("demo").innerHTML = fruits.get("apples");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_get_undefined by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Assign 5 to x, and display the value of the comparison (x == 8):</p>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = (x == 8);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The padStart() method pads a string with another string:</p>

<p id="demo"></p>

<script>
let numb = 5;
let text = numb.toString();
document.getElementById("demo").innerHTML = text.padStart(4,0);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Access nested objects:</p>

<p id="demo"></p>

<script>
const myObj = {
  name: "John",
  age: 30,
  cars: {
  car1: "Ford",
  car2: "BMW",
  car3: "Fiat"
  }
}
document.getElementById("demo").innerHTML = myObj.cars.car2;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_nested by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The padEnd() method pads a string with another string:</p>

<p id="demo"></p>

<script>
let text = "5";
document.getElementById("demo").innerHTML = text.padEnd(4,"x");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding6 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<h3>The window.location object</h3>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"Page path is: " + window.location.pathname;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loc_pathname by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Date()</h2>
<p>The toUTCString() method converts a date to a UTC string (a date display standard):</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.toUTCString();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_toutcstring by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Loops</h2>

<p>A loop with a <b>break</b> statement.</p>

<p id="demo"></p>

<script>
let text = "";
for (let i = 0; i < 10; i++) {
  if (i === 3) { break; }
  text += "The number is " + i + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_break by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Number Object Properties</h2>

<p>MAX_SAFE_INTEGER</p>

<p id="demo"></p>

<script>
let  x = Number.MAX_SAFE_INTEGER;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_max_safe by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_current by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Error Handling</h2>

<p>How to use <b>catch</b> to display an error.</p>

<p id="demo"></p>

<script>
try {
  adddlert("Welcome guest!");
}
catch(err) {
  document.getElementById("demo").innerHTML = err.message;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_try_catch by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Object</h2>
<p>This "home made" isArray() function returns true when used on an array:</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = isArray(fruits);

function isArray(myArray) {
  return myArray.constructor === Array;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_isarray by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Scope</h2>

<p>A GLOBAL variable can be accessed from any script or function.</p>

<p id="demo"></p>

<script>
let carName = "Volvo";
myFunction();

function myFunction() {
  document.getElementById("demo").innerHTML = "I can display " + carName;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_scope_global by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Assignments</h2>
<h3>The += Operator</h3>

<p id="demo"></p>

<script>
let x = 10;
x += 5;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_assign_plusequal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
let x1 = "";      // string 
let x2 = 0;       // number
let x3 = false;   // boolean
const x4 = {};    // Object object
const x5 = [];    // Array object
const x6 = /()/;  // RegExp object
const x7 = function(){};  // function

// Display the type of all
document.getElementById("demo").innerHTML =
"x1: " + typeof x1 + "<br>" +
"x2: " + typeof x2 + "<br>" +
"x3: " + typeof x3 + "<br>" +
"x4: " + typeof x4 + "<br>" +
"x5: " + typeof x5 + "<br>" +
"x6: " + typeof x6 + "<br>" +
"x7: " + typeof x7 + "<br>";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_constructor_builtin1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>
<p>The sort() method sorts an array alphabetically:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = fruits;

fruits.sort();
document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>JavaScript uses names to access object properties.</p>
<p id="demo"></p>

<script>
const person = {firstName:"John", lastName:"Doe", age:46};
document.getElementById("demo").innerHTML = person.firstName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_object by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Do a case-insensitive search for "w3schools" in a string:</p>

<p id="demo"></p>

<script>
let text = "Visit W3Schools";
let result = text.match(/w3schools/i);
document.getElementById("demo").innerHTML = result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_i by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2> 
<h2>slice()</h2>
<p>This example slices out a part of an array starting from array element 2 ("Lemon"):</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
const citrus = fruits.slice(2);
document.getElementById("demo").innerHTML = fruits + "<br><br>" + citrus;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_slice2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Assignments</h2>
<h3>The = Operator</h3>

<p id="demo"></p>

<script>
let x = 10;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_assign_equal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>
<p>Using Map.set():</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map();

// Set Map Values
fruits.set("apples", 500);
fruits.set("bananas", 300);
fruits.set("oranges", 200);

document.getElementById("demo").innerHTML = fruits.get("apples");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_set_new by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = "2" == "12";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_28 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>My First Web Page</h2>
<p>My first paragraph.</p>

<button type="button" onclick="document.write(5 + 6)">Try it</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_output_write_over by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Maps</h2>
<p>Using Map.size:</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

document.getElementById("demo").innerHTML = fruits.size;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_size by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Promise</h2>

<p>Wait 3 seconds (3000 milliseconds) for this page to change.</p>

<h1 id="demo"></h1>

<script>
const myPromise = new Promise(function(myResolve, myReject) {
  setTimeout(function(){ myResolve("I love You !!"); }, 3000);
});

myPromise.then(function(value) {
  document.getElementById("demo").innerHTML = value;
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_promise3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html> 
<head> 
<script> 
function myfunction(txt) { 
  document.getElementById("demo").innerHTML = txt
} 
</script> 
</head> 
<body> 

<p>When you click on one of the buttons, a function will be called. The function will display the argument that is passed to it.</p>

<form> 
  <input type="button" onclick="myfunction('Good Morning!')" value="In the Morning"> 
  <input type="button" onclick="myfunction('Good Evening!')" value="In the Evening"> 
</form> 

<p id="demo"></p>

</body> 

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_functionarg2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html> 


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The Navigator Object</h2>

<p>The userAgent property returns the user-agent header sent by the browser to the server:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
navigator.userAgent;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_nav_userAgent by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The JavaScript typeof Operator</h2>

<p>The typeof operator returns the type of a variable or expression:</p>

<p id="demo"></p>

<script>
let y = "John";
let x = + y;
document.getElementById("demo").innerHTML = typeof y + "<br>" + typeof x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_typeof4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>

<head>
<style>
table,th,td {
  border : 1px solid black;
  border-collapse: collapse;
}
th,td {
  padding: 5px;
}
</style>
</head>

<body>

<p>Click on a CD to display album information.</p>
<p id='showCD'></p>
<table id="demo"></table>

<script>
const xhttp = new XMLHttpRequest();
let cd;
xhttp.onload = function() {
 const xmlDoc = xhttp.responseXML; 
 cd = xmlDoc.getElementsByTagName("CD");
 loadCD();
}
xhttp.open("GET.html", "cd_catalog.xml");
xhttp.send();

function loadCD() {
  let table="<tr><th>Artist</th><th>Title</th></tr>";
  for (let i = 0; i < cd.length; i++) { 
    table += "<tr onclick='displayCD(" + i + ")'><td>";
    table += cd[i].getElementsByTagName("ARTIST")[0].childNodes[0].nodeValue;
    table += "</td><td>";
    table += cd[i].getElementsByTagName("TITLE")[0].childNodes[0].nodeValue;
    table += "</td></tr>";
  }
  document.getElementById("demo").innerHTML = table;
}

function displayCD(i) {
  document.getElementById("showCD").innerHTML =
  "Artist: " +
  cd[i].getElementsByTagName("ARTIST")[0].childNodes[0].nodeValue +
  "<br>Title: " +
  cd[i].getElementsByTagName("TITLE")[0].childNodes[0].nodeValue +
  "<br>Year: " + 
  cd[i].getElementsByTagName("YEAR")[0].childNodes[0].nodeValue;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_app by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:00 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>This example calls the fullName method of person, using it on person2:</p>

<p id="demo"></p>

<script>
const person = {
  fullName: function() {
    return this.firstName + " " + this.lastName;
  }
}
const person1 = {
  firstName:"John",
  lastName: "Doe"
}
const person2 = {
  firstName:"Mary",
  lastName: "Doe"
}
document.getElementById("demo").innerHTML = person.fullName.call(person2); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_call_call2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math</h2>

<p>Math.floor(Math.random() * 100)) returns a random integer between 0 and 99 
(both included):</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
Math.floor(Math.random() * 100);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_random_0_99 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>
<h3>The Fisher Yates Method</h3>
<p>Click the button (again and again) to sort the array in random order.</p>

<button onclick="myFunction()">Try it</button>
<p id="demo"></p>

<script>
const points = [40, 100, 1, 5, 25, 10];
document.getElementById("demo").innerHTML = points;  

function myFunction() {
  for (let i = points.length -1; i > 0; i--) {
    let j = Math.floor(Math.random() * i)
    let k = points[i]
    points[i] = points[j]
    points[j] = k
  }
  document.getElementById("demo").innerHTML = points;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort_random2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function show_coords(event) {
  document.getElementById("demo").innerHTML = "X= " + event.clientX + "<br>Y= " + event.clientY;
}
</script>
</head>

<body>

<p onmousedown="show_coords(event)">
Click this paragraph to display the x and y coordinates of the mouse pointer.</p>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_event_clientxy by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>What Can JavaScript Do?</h2>

<p id="demo">JavaScript can change HTML content.</p>

<button type="button" onclick='document.getElementById("demo").innerHTML = "Hello JavaScript!"'>Click Me!</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_intro_inner_html by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:31 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function writeText(txt) {
  document.getElementById("desc").innerHTML = txt;
}
</script>
</head>

<body>
<img src ="planets.gif" width ="145" height ="126" alt="Planets" usemap="#planetmap" />

<map name="planetmap">
<area shape ="rect" coords ="0,0,82,126"
onmouseover="writeText('The Sun and the gas giant planets like Jupiter are by far the largest objects in our Solar System.')"
href ="sun.html" target ="_blank" alt="Sun" />

<area shape ="circle" coords ="90,58,3"
onmouseover="writeText('The planet Mercury is very difficult to study from the Earth because it is always so close to the Sun.')"
href ="mercur.html" target ="_blank" alt="Mercury" />

<area shape ="circle" coords ="124,58,8"
onmouseover="writeText('Until the 1960s, Venus was often considered a twin sister to the Earth because Venus is the nearest planet to us, and because the two planets seem to share many characteristics.')"
href ="venus.html" target ="_blank" alt="Venus" />
</map> 

<p id="desc">Mouse over the sun and the planets and see the different descriptions.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_imagemap by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:10 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Display Objects</h2>
<p>JSON.stringify will not stringify functions.</p>
<p>You have to convert functions to strings first:</p>

<p id="demo"></p>

<script>
const person = {
  name: "John",
  age: function () {return 30;}
};
person.age = person.age.toString();

document.getElementById("demo").innerHTML = JSON.stringify(person);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_display_stringify_function_tostring by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript addEventListener()</h2>

<p>This example uses the addEventListener() method to add two click events to the same button.</p>

<button id="myBtn">Try it</button>

<script>
var x = document.getElementById("myBtn");
x.addEventListener("click", myFunction);
x.addEventListener("click", someOtherFunction);

function myFunction() {
  alert ("Hello World!");
}

function someOtherFunction() {
  alert ("This function was also executed!");
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_add_many by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>Convert string to lower case:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo">Hello World!</p>

<script>
function myFunction() {
  let text = document.getElementById("demo").innerHTML;
  document.getElementById("demo").innerHTML =
  text.toLowerCase();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_tolower by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaSript setTimeout()</h2>

<p id="demo">I will display when two, four, and six seconds have passed.</p>

<script>
setTimeout(myTimeout1, 2000) 
setTimeout(myTimeout2, 4000) 
setTimeout(myTimeout3, 6000) 

function myTimeout1() {
  document.getElementById("demo").innerHTML = "2 seconds";
}
function myTimeout2() {
  document.getElementById("demo").innerHTML = "4 seconds";
}
function myTimeout3() {
  document.getElementById("demo").innerHTML = "6 seconds";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_timing2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction() {
  document.getElementById("demo").innerHTML = "You selected some text";
}
</script>
</head>
<body>

Some text: <input type="text" value="Hello world!" onselect="myFunction()">

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onselect by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Statements</h2>

<p>Multiple statements on one line are allowed.</p>

<p id="demo1"></p>

<script>
let a, b, c;
a = 5; b = 6; c = a + b;
document.getElementById("demo1").innerHTML = c;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_statements_semicolon2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>This example calls a function which performs a calculation, and returns the result:</p>

<p id="demo"></p>

<script>
function myFunction(p1, p2) {
  return p1 * p2;
}
document.getElementById("demo").innerHTML = myFunction(4, 3);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_functions by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p id="demo"></p>

<script>
const person = {
  firstName: "John",
  lastName: "Doe",
  id: 5566,
};
person.name = function() {
  return (this.firstName + " " + this.lastName).toUpperCase();
};

document.getElementById("demo").innerHTML =
"My father is " + person.name(); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_method_toupper by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.map()</h2>

<p>Creates a new array by performing a function on each array element.</p>

<p id="demo"></p>

<script>
var numbers1 = [45, 4, 9, 16, 25];
var numbers2 = numbers1.map(myFunction);

document.getElementById("demo").innerHTML = numbers2;

function myFunction(value, index, array) {
  return value * 2;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_array_map by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<body>
<canvas id="myChart" style="width:100%;max-width:600px"></canvas>

<script>
var xValues = [50,60,70,80,90,100,110,120,130,140,150];
var yValues = [7,8,8,9,9,9,10,11,14,14,15];

new Chart("myChart", {
  type: "line",
  data: {
    labels: xValues,
    datasets: [{
      fill: false,
      lineTension: 0,
      backgroundColor: "rgba(0,0,255,1.0)",
      borderColor: "rgba(0,0,255,0.1)",
      data: yValues
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      yAxes: [{ticks: {min: 6, max:16}}],
    }
  }
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_chartjs_lines by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:31:40 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Convert Decimal to Binary</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = dec2bin(-5);
function dec2bin(dec){
  return (dec >>> 0).toString(2);
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_bitwise_convert by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<script>
function changeImage() {
  document.getElementById('myimage').src = "compman.gif";
}
</script>

<img id="myimage" onclick="changeImage()" src="compman_lowres.gif" width="107" height="98">

<p>Click the image to display a high resolution version.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_img_lowsrc by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Numbers can be written with, or without decimals:</p>

<p id="demo"></p>

<script>
let x1 = 34.00;
let x2 = 34;
let x3 = 3.14;

document.getElementById("demo").innerHTML =
x1 + "<br>" + x2 + "<br>" + x3;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_numbers by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Sets</h2>
<p>Set.keys() returns a Set Iterator:</p>

<p id="demo"></p>

<script>
// Create a Set
const letters = new Set(["a","b","c"]);

// Display set.size
document.getElementById("demo").innerHTML = letters.keys();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_set_keys by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Setting a default value to a function parameter.</p>
<p id="demo"></p>

<script>
function myFunction(x, y) {
  if (y === undefined) {
    y = 2;
  }  
  return x * y;
}
document.getElementById("demo").innerHTML = myFunction(4);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_undefined by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript setSeconds()</h2>
<p>The setSeconds() method sets the seconds of a date object (0-59):</p>

<p id="demo"></p>

<script>
const d = new Date();
d.setSeconds(30);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_setseconds by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"100 is " + Boolean(100) + "<br>" +
"3.14 is " + Boolean(3.14) + "<br>" +
"-15 is " + Boolean(-15) + "<br>" +
"Any (not empty) string is " + Boolean("Hello") + "<br>" +
"Even the string 'false' is " + Boolean('false') + "<br>" +
"Any expression (except zero) is " + Boolean(1 + 7 + 3.14);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_boolean by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p id="demo"></p>

<script>
const obj = /e/.exec("The best things in life are free!");
document.getElementById("demo").innerHTML =
"Found " + obj[0] + " in position " + obj.index + " in the text: " + obj.input;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_exec by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Modify a JavaScript Object</h2>
<p id="demo"></p>

<script>
const myObj = {name:"John", age:30, city:"New York"};
myObj["name"] = "Gilbert";
document.getElementById("demo").innerHTML = myObj.name;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_modify_object2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:01 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Booleans and Boolean objects cannot be safely compared:</p>

<p id="demo"></p>

<script>
let x = false;         // x is a Boolean
let y = new Boolean(false);  // y is an object
document.getElementById("demo").innerHTML = (x===y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_booleans_object2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The Navigator Object</h2>

<p>The javaEnabled() method returns true if Java is enabled:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"javaEnabled is " + navigator.javaEnabled();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_nav_javaenabled by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Statements</h2>

<p>JavaScript statements are separated by semicolons.</p>

<p id="demo1"></p>

<script>
let a, b, c;
a = 5;
b = 6;
c = a + b;
document.getElementById("demo1").innerHTML = c;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_statements_semicolon1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting an empty string to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = "";
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_string_empty by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Maps</h2>
<p>Using Map.has():</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

document.getElementById("demo").innerHTML = fruits.has("apples");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_has by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function scrollWindow() {
  window.scrollTo(0, 100);
}
</script>
</head>
<body>

<input type="button" onclick="scrollWindow()" value="Scroll" />

<h2>Reserved Words</h2>
<hr>
<p>You cannot use reserved words as variables, labels, or function names:</p>
<hr>
<br>
abstract<br><br>
arguments<br><br>
boolean<br><br>
break<br><br>
byte<br><br>
case<br><br>
catch<br><br>
char<br><br>
class<br><br>
const<br><br>
continue<br><br>
debugger<br><br>
default<br><br>
delete<br><br>
do<br><br>
double<br><br>
else<br><br>
enum<br><br>
eval<br><br>
export<br><br>
extends<br><br>
false<br><br>
final<br><br>
finally<br><br>
float<br><br>
for<br><br>
function<br><br>
goto<br><br>
if<br><br>
implements<br><br>
import<br><br>
in<br><br>
instanceof<br><br>
int<br><br>
interface<br><br>
let<br><br>
long<br><br>
native<br><br>
new<br><br>
null<br><br>
package<br><br>
private<br><br>
protected<br><br>
public<br><br>
return<br><br>
short<br><br>
static<br><br>
super<br><br>
switch<br><br>
synchronized<br><br>
this<br><br>
throw<br><br>
throws<br><br>
transient<br><br>
true<br><br>
try<br><br>
typeof<br><br>
var<br><br>
void<br><br>
volatile<br><br>
while<br><br>
with<br><br>
yield<br><br>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_window_scrollto by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The var Keyword Creates Variables</h2>

<p id="demo"></p>

<script>
var x, y;
x = 5 + 6;
y = x * 10;
document.getElementById("demo").innerHTML = y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_syntax_keywords by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math</h2>

<p>Math.floor(Math.random() * 11) returns a random integer between 0 and 10 (both included):</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
Math.floor(Math.random() * 11);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_random_0_10 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript const</h2>

<p id="demo"></p>

<script>
try {
  const PI = 3.141592653589793;
  PI = 3.14;
}
catch (err) {
  document.getElementById("demo").innerHTML = err;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_const_value by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Access a JavaScript Object</h2>
<p id="demo"></p>

<script>
const myJSON = '{"name":"John", "age":30, "car":null}';
const myObj = JSON.parse(myJSON);
document.getElementById("demo").innerHTML = myObj["name"];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_object_bracket by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The Navigator Object</h2>

<p>The onLine property returns true if the browser is online:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"navigator.onLine is " + navigator.onLine;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_nav_online by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
var x1 = new Object();   // A new Object object
var x2 = new String();   // A new String object
var x3 = new Number();   // A new Number object
var x4 = new Boolean();  // A new Boolean object
var x5 = new Array();  // A new Array object
var x6 = new RegExp();   // A new RegExp object
var x7 = new Function(); // A new Function object
var x8 = new Date();   // A new Date object

document.getElementById("demo").innerHTML =
"x1: " + typeof x1 + "<br>" +
"x2: " + typeof x2 + "<br>" +
"x3: " + typeof x3 + "<br>" +
"x4: " + typeof x4 + "<br>" +
"x5: " + typeof x5 + "<br>" +
"x6: " + typeof x6 + "<br>" +
"x7: " + typeof x7 + "<br>" +
"x8: " + typeof x8 + "<br>";
</script>

<p>There is no need to use String(), Number(), Boolean(), Array(), and RegExp()</p>
<p>Read the JavaScript tutorials.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_builtin by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.max()</h2>

<p>Math.max() returns the highest value in a list of arguments.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
Math.max(0, 150, 30, 20, -8, -200);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_max by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.log10()</h2>

<p>Math.log10() returns the base 10 logarithm of a number.</p>
<p>How many times must we multiply 10 to get 1000?</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.log10(1000);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_log10 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction() {
  alert("Page is loaded");
}
</script>
</head>

<body onload="myFunction()">
<h2>Hello World!</h2>
</body>


<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_body_onload by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:10 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>Deleting an udeletable property is not allowed.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
delete Object.prototype;   // This will cause an error 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_deleteprop by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form id="frm1" action="https://www.w3schools.com/action_page.php">
  First name: <input type="text" name="fname" value="Donald"><br>
  Last name: <input type="text" name="lname" value="Duck"><br><br>
  <input type="submit" value="Submit">
</form>

<p>Click "Try it" to display the value of the form's action attribute:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("frm1").action;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_form_action by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Numbers</h1>
<h2>The Number() Method</h2>

<p>The Number() metod converts a variable (or value) into a number:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
Number("3.14") + "<br>" +
Number(Math.PI) + "<br>" +
Number("    ") + "<br>" +
Number("") + "<br>" +
Number("99 88") + "<br>" +
Number("John") + "<br>";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>JavaScript array elements are accessed using numeric indexes (starting from 0).</p>

<p id="demo"></p>

<script>
const cars = ["Saab", "Volvo", "BMW"];
cars[0] = "Opel";
document.getElementById("demo").innerHTML = cars;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_element_change by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Methods</h2>

<p>Object.entries() makes it simple to use objects in loops:</p>

<p id="demo"></p>

<script>
const fruits = {Bananas:300, Oranges:200, Apples:500}; 

let text = "";
for (let [fruit, amount] of Object.entries(fruits)) {
  text += fruit + ": " + amount + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_entries_loop by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Never Create Strings as Objects</h2>
<p>Strings and objects cannot be safely compared.</p>

<p id="demo"></p>

<script>
let x = "John";        // x is a string
let y = new String("John");  // y is an object
document.getElementById("demo").innerHTML = (x===y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_object2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>This example will return undefined:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = myFunction(55);
function myFunction(a) {
  let
  power = 10;
  return
  a * power;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_return_4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Parsing a JSON Array.</h2>
<p>Data written as an JSON array will be parsed into a JavaScript array.</p>
<p id="demo"></p>

<script>
const text = '[ "Ford", "BMW", "Audi", "Fiat" ]';
const myArr = JSON.parse(text);
document.getElementById("demo").innerHTML = myArr[0];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_parse_array by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:01 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>Functions can be used in expressions.</p>
<p id="demo"></p>

<script>
function myFunction(a, b) {
  return a * b;
}
let x = myFunction(4, 3) * 2;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_value2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>In regular comparison, data type does not matter. This if statement returns true:</p>

<p id="demo"></p>

<script>
let x = 10;
let y = "10";
document.getElementById("demo").innerHTML = Boolean(x == y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_loose_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting the number 0 to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = 0;
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_number_0 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Properties</h2>
<p>Deleting object properties.</p>

<p id="demo"></p>

<script>
const person = {
  firstname: "John",
  lastname: "Doe",
  age: 50,
  eyecolor: "blue"
};

delete person["age"];

document.getElementById("demo").innerHTML =
person.firstname + " is " + person.age + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_properties5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form id="frm1" action="https://www.w3schools.com/action_page.php" method="get">
  First name: <input type="text" name="fname" value="Donald"><br>
  Last name: <input type="text" name="lname" value="Duck"><br><br>
  <input type="submit" value="Submit">
</form>

<p>Click "Try it" to display the value of the form method.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("frm1").method;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_form_method by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
var x; // Declare x
x = 5; // Assign 5 to x

elem = document.getElementById("demo"); // Find an element 
elem.innerHTML = x;           // Display x in the element
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_hoisting2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.round()</h2>

<p>Math.round(x) returns the value of x rounded to its nearest integer:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.round(4.4);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_round_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
<body>

<canvas id="myChart" style="width:100%;max-width:600px"></canvas>

<script>
var xValues = [];
var yValues = [];
generateData("Math.sin(x)", 0, 10, 0.5);

new Chart("myChart", {
  type: "line",
  data: {
    labels: xValues,
    datasets: [{
      fill: false,
      pointRadius: 2,
      borderColor: "rgba(0,0,255,0.5)",
      data: yValues
    }]
  },    
  options: {
    legend: {display: false},
    title: {
      display: true,
      text: "y = x * 2 + 7",
      fontSize: 16
    }
  }
});
function generateData(value, i1, i2, step = 1) {
  for (let x = i1; x <= i2; x += step) {
    yValues.push(eval(value));
    xValues.push(x);
  }
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_chartjs_function by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:31:40 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The slice() method extract a part of a string
and returns the extracted parts in a new string:</p>

<p id="demo"></p>

<script>
let str = "Apple, Banana, Kiwi";
document.getElementById("demo").innerHTML = str.slice(-12);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_slice_rest_negative by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Convert a JSON string into a JavaScript object.</h2>

<p id="demo"></p>

<script>
const myJSON = '{"name":"John", "age":31, "city":"New York"}';
const myObj = JSON.parse(myJSON);
document.getElementById("demo").innerHTML = myObj.name;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_receive by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2> 
<h2>push()</h2>
<p>The push() method appends a new element to an array:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = fruits;
fruits.push("Kiwi");
document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_push by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript async / await</h2>

<p id="demo"></p>

<script>
function myDisplayer(some) {
  document.getElementById("demo").innerHTML = some;
}

async function myFunction() {return "Hello";}

myFunction().then(
  function(value) {myDisplayer(value);},
  function(error) {myDisplayer(error);}
);</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_async by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrow Functions</h2>

<p>With arrow functions, you don't have to type the function keyword, the return keyword, and the curly brackets.</p>

<p>Arrow functions are not supported in IE11 or earlier.</p>

<p id="demo"></p>

<script>
const x = (x, y) =&gt; x * y;
document.getElementById("demo").innerHTML = x(5, 5);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_arrow by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<button onclick="document.getElementById('demo').innerHTML=Date()">The time is?</button>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_event_onclick1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript in Body</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = "My First JavaScript";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_whereto by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function getCellContent(id) {
  var x = document.getElementById(id).rows[0].cells;
  document.getElementById("demo").innerHTML = x[0].innerHTML;
}
</script>
</head>
<body>

<table id="myTable" style="border: 1px solid black">
  <tr>
    <td>cell 1</td>
    <td>cell 2</td>
  </tr>
  <tr>
    <td>cell 3</td>
    <td>cell 4</td>
  </tr>
</table>

<p>
<input type="button" onclick="getCellContent('myTable')" value="Display first cell">
</p>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_table_cells by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2>
<h2>slice()</h2>
<p>This example slices out a part of an array starting from array element 1 ("Orange"):</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
const citrus = fruits.slice(1);
document.getElementById("demo").innerHTML = fruits + "<br><br>" + citrus;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_slice1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Operators</h2>

<p>The + operator concatenates (adds) strings.</p>

<p id="demo"></p>

<script>
var txt1 = "What a very ";
var txt2 = "nice day";
document.getElementById("demo").innerHTML = txt1 + txt2;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_concat2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript let</h2>

<p>Redeclaring a variable with <b>let</b>, in another scope, or in another block, is allowed:</p>

<p id="demo"></p>

<script>
let x = 2;   // Allowed

{
  let x = 3;   // Allowed
}

{
  let x = 4;   // Allowed
}
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_let_redeclare by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<p>An empty string has both a legal value and a type:</p>

<p id="demo"></p>

<script>
let car = "";
document.getElementById("demo").innerHTML =
"The value is: " +
car + "<br>" +
"The type is: " + typeof car;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_empty by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>The OR operator (||) returns true if one or both expressions are true, otherwise it returns false.</p>

<p id="demo"></p>

<script>
let x = 6;
let y = 3;

document.getElementById("demo").innerHTML = 
(x == 5 || y == 5) + "<br>" + 
(x == 6 || y == 0) + "<br>" + 
(x == 0 || y == 3) + "<br>" + 
(x == 6 || y == 3);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_or by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>This example calls the fullName method of person, using it on person1:
</p>

<p id="demo"></p>

<script>
const person = {
  fullName: function() {
    return this.firstName + " " + this.lastName;
  }
}
const person1 = {
  firstName:"John",
  lastName: "Doe"
}
const person2 = {
  firstName:"Mary",
  lastName: "Doe"
}
document.getElementById("demo").innerHTML = person.fullName.call(person1); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_call_call by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript toDateString()</h2>
<p>The toDateString() method converts a date to a date string:</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.toDateString();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_todatestring by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML DOM</h2>

<p>Hello World!</p>

<p>Hello Norway!</p>

<p id="demo"></p>

<script>
const myCollection = document.getElementsByTagName("p");

document.getElementById("demo").innerHTML = "This document contains " + myCollection.length + " paragraphs.";

</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_htmlcollection_length by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Display the Boolean value of null:</p>

<p id="demo"></p>

<script>
let x = null;
document.getElementById("demo").innerHTML = Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_boolean_null by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>One digit years will be interpreted as 19xx:</p>

<p id="demo"></p>

<script>
const d = new Date(9, 11, 24);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_one by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Prompt</h2>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  let text;
  let person = prompt("Please enter your name:", "Harry Potter");
  if (person == null || person == "") {
    text = "User cancelled the prompt.";
  } else {
    text = "Hello " + person + "! How are you today?";
  }
  document.getElementById("demo").innerHTML = text;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_prompt by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2>
<h2>concat()</h2>
<p>The concat() method merges (concatenates) arrays:</p>

<p id="demo"></p>

<script>
const array1 = ["Cecilie", "Lone"];
const array2 = ["Emil", "Tobias", "Linus"];
const array3 = ["Robin", "Morgan"];

const myChildren = array1.concat(array2, array3); 

document.getElementById("demo").innerHTML = myChildren;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_concat2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p><a id="w3s" target="_self" href="../index.html">W3Schools</a></p>

<p>Click the button to display the value of the target attribute of the link above.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("w3s").target;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_anchor_target by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript switch</h2>

<p id="demo"></p>

<script>
let text;
switch (new Date().getDay()) {
  case 6:
    text = "Today is Saturday";
    break;
  case 0:
    text = "Today is Sunday";
    break;
  default:
    text = "Looking forward to the Weekend";
}
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_switch2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Date.now()</h2>

<p>Date.now() is new in ECMAScript 5 (2009):</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
document.getElementById("demo1").innerHTML = Date.now();
var d = new Date();
document.getElementById("demo2").innerHTML = d.getTime();
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_date_now by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>Array includes()</h1>

<p>Check if the fruit array contains "Mango":</p>

<p id="demo"></p>

<p><strong>Note:</strong> The includes method is not supported in Edge 13 (and earlier versions).</p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = fruits.includes("Mango");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_includes by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The Navigator Object</h2>

<p>The appVersion property returns version information about the browser:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = navigator.appVersion;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_nav_appversion by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Constructors</h2>

<p id="demo"></p>

<script>
const x1 = new String();   // A new String object
const x2 = new Number();   // A new Number object
const x3 = new Boolean();  // A new Boolean object
const x4 = new Object();   // A new Object object
const x5 = new Array();    // A new Array object
const x6 = new RegExp();   // A new RegExp object
const x7 = new Function(); // A new Function object
const x8 = new Date();     // A new Date object

// Display the type of all objects
document.getElementById("demo").innerHTML =
"x1: " + typeof x1 + "<br>" +
"x2: " + typeof x2 + "<br>" +
"x3: " + typeof x3 + "<br>" +
"x4: " + typeof x4 + "<br>" +
"x5: " + typeof x5 + "<br>" +
"x6: " + typeof x6 + "<br>" +
"x7: " + typeof x7 + "<br>" +
"x8: " + typeof x8 + "<br>";
</script>

<p>There is no need to use new String(), new Number(), new Boolean(), new Array(), and new RegExp()</p>

<p>Use literals instead like: myArray = []</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_constructor_builtin by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.filter()</h2>

<p>Creates a new array with all array elements that passes a test.</p>

<p id="demo"></p>

<script>
var numbers = [45, 4, 9, 16, 25];
var over18 = numbers.filter(myFunction);

document.getElementById("demo").innerHTML = over18;

function myFunction(value, index, array) {
  return value > 18;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_array_filter by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2> 
<h2>toString()</h2>
<p>The toString() method returns an array as a comma separated string:</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = fruits.toString();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_tostring by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTMLDOM</h2>
<p>Displaying document.documentElement</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = document.documentElement.innerHTML;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_element by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Number Object Properties</h2>

<p>MIN_SAFE_INTEGER</p>

<p id="demo"></p>

<script>
let  x = Number.MIN_SAFE_INTEGER;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_min_safe by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML DOM</h2>
<img id="image" src="smiley.gif" width="160" height="120">

<script>
document.getElementById("image").src = "landscape.jpg";
</script>

<p>The original image was smiley.gif, but the script changed it to landscape.jpg</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_image by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Constructors</h2>

<p id="demo"></p>

<script>

// Constructor function for Person objects
function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
}

// Create two Person objects
const myFather = new Person("John", "Doe", 50, "blue");
const myMother = new Person("Sally", "Rally", 48, "green");

// Display age
document.getElementById("demo").innerHTML =
"My father is " + myFather.age + ". My mother is " + myMother.age + "."; 

</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_constructor1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>My First JavaScript</h2>

<button type="button"
onclick="document.getElementById('demo').innerHTML = Date()">
Click me to display Date and Time.</button>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_myfirst by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 10:23:12 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript break</h2>

<p id="demo"></p>

<script>
const cars = ["BMW", "Volvo", "Saab", "Ford"];
let text = "";

list: {
  text += cars[0] + "<br>"; 
  text += cars[1] + "<br>"; 
  break list;
  text += cars[2] + "<br>"; 
  text += cars[3] + "<br>"; 
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_break_list by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Global Functions</h2>
<h2>parseInt()</h2>
<p>The global JavaScript function parseInt() converts strings to numbers:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
  parseInt("-10") + "<br>" +
  parseInt("-10.33") + "<br>" +
  parseInt("10") + "<br>" +
  parseInt("10.33") + "<br>" +
  parseInt("10 6") + "<br>" +  
  parseInt("10 years") + "<br>" +  
  parseInt("years 10");  
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_global_parseint by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2>
<h2>concat()</h2>
<p>The concat() method merges (concatenates) arrays:</p>

<p id="demo"></p>

<script>
const myGirls = ["Cecilie", "Lone"];
const myBoys = ["Emil", "Tobias", "Linus"];
const myChildren = myGirls.concat(myBoys);

document.getElementById("demo").innerHTML = myChildren;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_concat by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting the string "1" to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = 1;
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_string_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Constructors</h2>

<p>You cannot add a new property to a constructor function.</p>

<p id="demo"></p>

<script>

// Constructor function for Person objects
function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
}

// You can NOT add a new property to a constructor function
Person.nationality = "English";

// Create 2 Person objects
const myFather = new Person("John", "Doe", 50, "blue");
const myMother = new Person("Sally", "Rally", 48, "green");

// Display nationality
document.getElementById("demo").innerHTML =
"The nationality of my father is " + myFather.nationality; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_constructor4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Creating and using an object method.</p>
<p>A method is actually a function definition stored as a property value.</p>

<p id="demo"></p>

<script>
const person = {
  firstName: "John",
  lastName: "Doe",
  id: 5566,
  fullName: function() {
    return this.firstName + " " + this.lastName;
  }
};

document.getElementById("demo").innerHTML = person.fullName();
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_method by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>Replace "Microsoft" with "W3Schools" in the paragraph below:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo">Please visit Microsoft and Microsoft!</p>

<script>
function myFunction() {
  let text = document.getElementById("demo").innerHTML; 
  document.getElementById("demo").innerHTML =
  text.replace("Microsoft","W3Schools");
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace_first by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>

<p>There are two different ways to access an object property.</p>

<p>You can use person.property or person["property"].</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName : "Doe",
  id     :  5566
};

// Display some data from the object:
document.getElementById("demo").innerHTML =
person["firstName"] + " " + person["lastName"];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_objects_properties_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Using JavaScript Symbol()</h2>

<p id="demo"></p>

<script>
const person = {
  firstName: "John",
  lastName: "Doe",
  age: 50,
  eyeColor: "blue"
};

let id = Symbol('id');
person[id] = 140353;

document.getElementById("demo").innerHTML = person[id] + " " + person.id;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_symbol by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Do a global search for an "l", followed by zero or more "o" characters:</p>

<p id="demo"></p>

<script>
let text = "Hellooo World! Hello W3Schools!"; 
let result = text.match(/lo*/g);
document.getElementById("demo").innerHTML = result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_n2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting a text string to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = "twenty";
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_string_text by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1 onmouseover="style.color='red'" onmouseout="style.color='black'">Mouse over this text</h1>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onmouse by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript async / await</h2>

<p>Wait 3 seconds (3000 milliseconds) for this page to change.</p>

<h1 id="demo"></h1>

<script>
async function myDisplay() {
  let myPromise = new Promise(function(resolve) {
    setTimeout(function() {resolve("I love You !!");}, 3000);
  });
  document.getElementById("demo").innerHTML = await myPromise;
}

myDisplay();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_async4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>

<body>

<h2>JavaScript String Methods</h2>

<p>Replace "Microsoft" with "W3Schools" in the paragraph below:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo">Please visit Microsoft!</p>

<script>
function myFunction() {
  let text = document.getElementById("demo").innerHTML;
  document.getElementById("demo").innerHTML =
  text.replace(/microsoft/i, "W3Schools");
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_string_replace by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>
<p>Breaking a statement in the middle of a string will not work:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = "Hello 
World!";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_string_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function breakout() {
  if (window.top != window.self) {
    window.top.location = "tryjs_breakout.html";
  }
}
</script>
</head>
<body>

<input type="button" onclick="breakout()" value="Break out of frame!">

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_breakout by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:13 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript For In</h2>
<p>The for in statement can loops over array values:</p>

<p id="demo"></p>

<script>
const numbers = [45, 4, 9, 16, 25];

let txt = "";
for (let x in numbers) {
  txt += numbers[x] + "<br>"; 
}

document.getElementById("demo").innerHTML = txt;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_for_in by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Store and retrieve data from local storage.</h2>
<p id="demo"></p>

<script>
// Storing data:
const myObj = { name: "John", age: 31, city: "New York" };
const myJSON = JSON.stringify(myObj);
localStorage.setItem("testJSON", myJSON);

// Retrieving data:
let text = localStorage.getItem("testJSON");
let obj = JSON.parse(text);
document.getElementById("demo").innerHTML = obj.name;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_store by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:01 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>You can declare many variables in one statement.</p>

<p id="demo"></p>

<script>
let person = "John Doe", carName = "Volvo", price = 200;
document.getElementById("demo").innerHTML = carName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_multi by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>The startsWith() method.</p>

<p id="demo"></p>

<p>The startsWith() method is not supported in Internet Explorer.</p>

<script>
let text = "Hello world, welcome to the universe.";
document.getElementById("demo").innerHTML = text.startsWith("world", 6);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_startswith2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Date Object</h2>
<p>This "home made" isDate() function returns true when used on an date:</p>

<p id="demo"></p>

<script>
const myDate = new Date();
document.getElementById("demo").innerHTML = isDate(myDate);

function isDate(myDate) {
  return myDate.constructor.toString().indexOf("Date") > -1;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_isdate by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>Setting a default value to a function parameter.</p>
<p id="demo"></p>

<script>
function myFunction(x, y) {
  if (y === undefined) {
    y = 0;
  }  
  return x * y;
}
document.getElementById("demo").innerHTML = myFunction(4);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_best_parameter_default by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript is Case Sensitive</h2>

<p>Try to change lastName to lastname.</p>

<p id="demo"></p>

<script>
let lastname, lastName;
lastName = "Doe";
lastname = "Peterson";
document.getElementById("demo").innerHTML = lastName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_syntax_case by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Hoisting</h2>

<p>With <b>const</b>, you cannot use a variable before it is declared.</p>
<p>Try to remove the //.</p>

<p id="demo"></p>

<script>
carName = "Volvo";
//const carName;
document.getElementById("demo").innerHTML = carName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_let_hoisting_const by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>100000000000 milliseconds from Jan 1, 1970, is approximately Mar 3, 1973:</p>

<p id="demo"></p>

<script>
const d = new Date(100000000000);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_millisec by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Function Sequence</h2>

<p>JavaScript functions are executed in the sequence they are called.</p>

<p id="demo"></p>

<script>
function myDisplayer(some) {
  document.getElementById("demo").innerHTML = some;
}

function myFirst() {
  myDisplayer("Hello");
}

function mySecond() {
  myDisplayer("Goodbye");
}

mySecond();
myFirst();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_callback2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form id="myForm">
<select id="mySelect">
  <option>Apple</option>
  <option>Pear</option>
  <option>Banana</option>
  <option>Orange</option>
</select>
</form>

<p>The id of the form is:<p>
<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = document.getElementById("mySelect").form.id;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=try_dom_select_form by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function goBack() {
  window.history.back()
}
</script>
</head>
<body>

<button onclick="goBack()">Go Back</button>

<p>Clicking on the Back button here will not result in any action, because there is no previous URL in the history list.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_history_back by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:13 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Getters and Setters</h2>

<p>Getters and setters allow you to get and set properties via methods.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  language: "",
  set lang(lang) {
    this.language = lang.toUpperCase();
  }
};

// Set a property using set:
person.lang = "en";

// Display data from the object:
document.getElementById("demo").innerHTML = person.language;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_accessors_set2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comments</h2>

<h1 id="myH"></h1>

<p id="myP"></p>

<script>
//document.getElementById("myH").innerHTML = "My First Page";
document.getElementById("myP").innerHTML = "My first paragraph.";
</script>

<p>The line starting with // is not executed.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comments3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting undefined to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = undefined;
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_undefined by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<h3>The window.location object</h3>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"The page protocol is: " + window.location.protocol;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loc_protocol by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>myObject.fullName() will return John Doe:</p>

<p id="demo"></p>

<script>
const myObject = {
  firstName:"John",
  lastName: "Doe",
  fullName: function() {
    return this.firstName + " " + this.lastName;
  }
}
document.getElementById("demo").innerHTML = myObject.fullName(); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_invoke_method by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Booleans and Boolean objects cannot be safely compared.</p>

<p id="demo"></p>

<script>
const x = new Boolean(false);
const y = new Boolean(false);
document.getElementById("demo").innerHTML = (x==y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_booleans_object3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Access Array Values</h2>
<p id="demo"></p>

<script>
const myJSON = '{"name":"John", "age":30, "cars":["Ford", "BMW", "Fiat"]}';
const myObj = JSON.parse(myJSON);

document.getElementById("demo").innerHTML = myObj.cars[0];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_array_access by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Infinity is returned if you calculate a number outside the largest possible number:</p>

<p id="demo"></p>

<script>
let myNumber = 2; 
let txt = "";
while (myNumber != Infinity) {
   myNumber = myNumber * myNumber;
   txt = txt + myNumber + "<br>";
}
document.getElementById("demo").innerHTML = txt;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_infinity by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>

<h2>Get Text Content</h2>
<p id="01">Hello World!</p>
<p id="02">Hello Sweden!</p>
<p id="03">Hello Japan!</p>

<p id="demo"></p>

<script>
$(document).ready(function() {
  var myText = $("#02").text();
  $("#demo").text(myText); 
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_gettext by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="p1">
This is a text.
This is a text.
This is a text.
This is a text.
</p>

<input type="button" value="Hide text" onclick="document.getElementById('p1').style.visibility='hidden'">
<input type="button" value="Show text" onclick="document.getElementById('p1').style.visibility='visible'">

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_visibility by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object.defineProperty()</h2>

<p>This example changes a property value.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  language: "EN" 
};

// Change a property
Object.defineProperty(person, "language", {value:"NO"})
document.getElementById("demo").innerHTML = person.language;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_es5_3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The Navigator Object</h2>

<p>The userAgent property returns the user-agent header sent by the browser to the server:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
navigator.userAgent;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_nav_useragent by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:13 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Looping an Array</h2>
<p id="demo"></p>

<script>
const myJSON = '{"name":"John", "age":30, "cars":["Ford", "BMW", "Fiat"]}';
const myObj = JSON.parse(myJSON);

let text = "";
for (let i in myObj.cars) {
  text += myObj.cars[i] + ", ";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_array_loop_in by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Promise</h2>

<p id="demo"></p>

<script>
function myDisplayer(some) {
  document.getElementById("demo").innerHTML = some;
}

let myPromise = new Promise(function(myResolve, myReject) {
  let x = 0;

// some code (try to change x to 5)

  if (x == 0) {
    myResolve("OK");
  } else {
    myReject("Error");
  }
});

myPromise.then(
  function(value) {myDisplayer(value);},
  function(error) {myDisplayer(error);}
);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_promise2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Booleans and Boolean objects cannot be safely compared.</p>

<p id="demo"></p>

<script>
const x = new Boolean(false);
const y = new Boolean(false);
document.getElementById("demo").innerHTML = (x===y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_booleans_object4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<body>

<canvas id="myChart" style="width:100%;max-width:600px"></canvas>

<script>
var xValues = ["Italy", "France", "Spain", "USA", "Argentina"];
var yValues = [55, 49, 44, 24, 15];
var barColors = "red";

new Chart("myChart", {
  type: "bar",
  data: {
    labels: xValues,
    datasets: [{
      backgroundColor: barColors,
      data: yValues
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      yAxes: [{
        ticks: {
          beginAtZero: true
        }
      }],
    }
  }
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_chartjs_bars by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:31:40 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1 id="id01">Old Heading</h1>

<script>
const element = document.getElementById("id01");
element.innerHTML = "New Heading";
</script>

<p>JavaScript changed "Old Heading" to "New Heading".</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_innerhtml by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>If you add a numeric string and a number, the result will be a concatenated string:</p>

<p id="demo"></p>

<script>
let x = "10";
let y = 20;
document.getElementById("demo").innerHTML = "The result is: " + x + y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_add_strings5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 2 == "John";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_25 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Closures</h2>

<p>Counting with a local variable.</p>

<button type="button" onclick="myFunction()">Count!</button>

<p id="demo">0</p>

<script>
const add = (function () {
  let counter = 0;
  return function () {counter += 1; return counter;}
})();

function myFunction(){
  document.getElementById("demo").innerHTML = add();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_closures5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Properties</h2>
<p>Looping object property values:</p>

<p id="demo"></p>

<script>
const person = {
  fname:"John",
  lname:"Doe",
  age:25
}; 

let txt = "";
for (let x in person) {
  txt += person[x] + " ";
}

document.getElementById("demo").innerHTML = txt;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_properties_for_in by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Display the value of 10 &gt; 9:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 10 > 9;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_boolean_expression2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function preferedBrowser() {
  prefer = document.forms[0].browsers.value;
  alert("You prefer browsing internet with " + prefer);
}
</script>
</head>
<body>

<form>
Choose which browser you prefer:
  <select id="browsers" onchange="preferedBrowser()">
    <option value="Chrome">Chrome</option>
    <option value="Internet Explorer">Internet Explorer</option>
    <option value="Firefox">Firefox</option>
  </select>
</form>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_dropdown by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function openWin() {
  window.open("../index.html");
}
</script>
</head>
<body>

<form>
  <input type="button" value="Open Window" onclick="openWin()">
</form>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_openwindow by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Strings</h1>
<h2>The trimEnd() Method</h2>

<p id="demo"></p>

<script>
let text1 = "     Hello World!     ";
let text2 = text1.trimEnd();

document.getElementById("demo").innerHTML =
"Length text1 = " + text1.length + "<br>Length text2 = " + text2.length;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_trimend by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Template Literals</h2>

<p>With back-ticks, you can use both single and double quotes inside a string:</p>

<p id="demo"></p>

<p>Template literals are not supported in Internet Explorer.</p>

<script>
let text = `He's often called "Johnny"`;
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_templates_quotes by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img src="planets.gif" width="145" height="126" usemap="#planetmap">

<map name="planetmap">
  <area id="venus" shape="circle" coords="124,58,8" alt="Venus" href="venus.html">
</map>

<p>Click the button to display the port of the href attribute for the "venus" area in the image-map.</p>

<p><b>Note:</b> If the port part is not specified in the URL, or if the port number is 80 (which is default), some browsers will just display 0 or nothing.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("venus").port;
  document.getElementById("demo").innerHTML = "Port: " + x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_area_port by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:04 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>The result of adding 5 + 2 + 3 is:</p>
<p id="demo"></p>

<script>
let x = 5 + 2 + 3;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_add_numbers by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img src="planets.gif" width="145" height="126" usemap="#planetmap">

<map name="planetmap">
<area id="venus" shape="circle" coords="124,58,8" alt="Venus" href="venus.html">
</map>

<p>Click the button to display the protocol of the href attribute for the "venus" area.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("venus").protocol;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_area_protocol by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:04 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Date.parse()</h2>
<p>Date.parse(string) returns milliseconds.</p>
<p>You can use the return value to convert the string to a date object:</p>

<p id="demo"></p>

<script>
let msec = Date.parse("March 21, 2012");
const d = new Date(msec);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_convert by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>Using new Date(milliseconds), creates a new date object as January 1, 1970, 00:00:00 Universal Time (UTC) plus the milliseconds:</p>

<p id="demo"></p>

<script>
const d = new Date(86400000);
document.getElementById("demo").innerHTML = d;
</script>

<p>One day (24 hours) is 86,400,000 milliseconds.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_day by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript setFullYear()</h2>
<p>The setFullYear() method sets the year of a date object:</p>

<p id="demo"></p>

<script>
const d = new Date();
d.setFullYear(2020);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_setfullyear by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Properties</h2>

<p>MIN_VALUE returns the smallest number possible in JavaScript.</p>

<p id="demo"></p>

<script>
let x = Number.MIN_VALUE;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_min by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript setHours()</h2>
<p>The setHours() method sets the hours of a date object:</p>

<p id="demo"></p>

<script>
const d = new Date();
d.setHours(22);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_sethours by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object.keys()</h2>

<p>This example list the enumerable properties of an object.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  language: "EN"
}

// Change Property
Object.defineProperty(person, "language", {enumerable:false});

// Display Properties
document.getElementById("demo").innerHTML = Object.keys(person);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_es5_4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
var myWindow;
function openWin() {
  myWindow=window.open("", "", "width=400, height=200");
}

function moveWin() {
  myWindow.moveTo(300, 0);
  myWindow.focus();
}
</script>
</head>
<body>

<input type="button" value="Open myWindow" onclick="openWin()" />
<br><br>
<input type="button" value="Move myWindow" onclick="moveWin()" />

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_win_moveto by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>The safest way to break a code line in a string is using string addition.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = "Hello " +
"Dolly!";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_break_ok by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function openWin() {
  var myWindow = window.open("", "", "width=400, height=200");
  myWindow.opener.document.getElementById("demo").innerHTML = 
  "A new window has been opened.";
}
</script>
</head>
<body>

<button onclick="openWin()">Open myWindow</button>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_win_opener by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Modify object values:</p>

<p id="demo"></p>

<script>
let x = "";
let myObj = {
  "name":"John",
  "age":30,
  "cars": {
  "car1":"Ford",
  "car2":"BMW",
  "car3":"Fiat"
  }
}
myObj.cars.car2 = "Mercedes";

for (let i in myObj.cars) {
  x += myObj.cars[i] + "<br>";
}

document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_object_modify by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2> 
<h2>pop()</h2>
<p>The pop() method returns the value that was "popped out":</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = fruits.pop();
document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_pop_out by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript try catch</h2>

<p>Please input a number between 5 and 10:</p>

<input id="demo" type="text">
<button type="button" onclick="myFunction()">Test Input</button>
<p id="p01"></p>

<script>
function myFunction() {
  const message = document.getElementById("p01");
  message.innerHTML = "";
  let x = document.getElementById("demo").value;
  try { 
    if(x == "")  throw "empty";
    if(isNaN(x)) throw "not a number";
    x = Number(x);
    if(x < 5)  throw "too low";
    if(x > 10)   throw "too high";
  }
  catch(err) {
    message.innerHTML = "Input is " + err;
  }
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_throw_error by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>




END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Timing</h2>

<p>Click "Try it". Wait 3 seconds. The page will alert "Hello".</p>
<p>Click "Stop" to prevent the first function to execute.</p>
<p>(You must click "Stop" before the 3 seconds are up.)</p>

<button onclick="myVar = setTimeout(myFunction, 3000)">Try it</button>

<button onclick="clearTimeout(myVar)">Stop it</button>

<script>
function myFunction() {
  alert("Hello");
}
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_settimeout2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Function Closures</h2>
<p>Counting with a local variable.</p>

<p id="demo">0</p>

<script>
document.getElementById("demo").innerHTML = add();
function add() {
  let counter = 0;
  function plus() {counter += 1;}
  plus();  
  return counter; 
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_closures4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>The JavaScript <i>this</i> Keyword</h1>

<p>In this example, <b>this</b> refers to the <b>person object</b>.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName  : "John",
  lastName   : "Doe",
  id     : 5566,
  myFunction : function() {
    return this;
  }
};

// Display data from the object:
document.getElementById("demo").innerHTML = person.myFunction();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_this_object by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>

<p>There are two different ways to access an object property.</p>

<p>You can use person.property or person["property"].</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName : "Doe",
  id     :  5566
};

// Display some data from the object:
document.getElementById("demo").innerHTML =
person.firstName + " " + person.lastName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_objects_properties_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Sets</h2>
<p>Add variables to a Set:</p>

<p id="demo"></p>

<script>
// Create a Set
const letters = new Set();

// Create Variables
const a = "a";
const b = "b";
const c = "c";

// Add the Variables to the Set
letters.add(a);
letters.add(b);
letters.add(c);

// Display set.size
document.getElementById("demo").innerHTML = letters.size;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_set_create by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript ISO Dates</h2>

<p id="demo"></p>

<script>
const d = new Date("2015-03-25");
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_string_iso1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript ISO Dates</h2>
<p>Modify the time relative to UTC by adding +HH:MM or subtraction -HH:MM to the time.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
new Date("2015-03-25T12:00:00-06:00");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_string_iso5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>

<p id="demo">Change the style of an HTML element.</p>

<script>
$(document).ready(function() {
  $("#demo").css("font-size","35px");
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_css by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://d3js.org/d3.v4.js"></script>
<body>
<h2>D3.js Scatter-Plot</h2>

<svg id="myPlot" style="width:500px;height:500px"></svg>

<script>
// Set Dimensions
const xSize = 500; 
const ySize = 500;
const margin = 40;
const xMax = xSize - margin*2;
const yMax = ySize - margin*2;

// Create Random Points
const numPoints = 100;
const data = [];
for (let i = 0; i < numPoints; i++) {
  data.push([Math.random() * xMax, Math.random() * yMax]);
}

// Append SVG Object to the Page
const svg = d3.select("#myPlot")
  .append("svg")
  .append("g")
  .attr("transform","translate(" + margin + "," + margin + ")");

// X Axis
const x = d3.scaleLinear()
  .domain([0, 500])
  .range([0, xMax]);

svg.append("g")
  .attr("transform", "translate(0," + yMax + ")")
  .call(d3.axisBottom(x));

// Y Axis
const y = d3.scaleLinear()
  .domain([0, 500])
  .range([ yMax, 0]);

svg.append("g")
  .call(d3.axisLeft(y));

// Dots
svg.append('g')
  .selectAll("dot")
  .data(data).enter()
  .append("circle")
  .attr("cx", function (d) { return d[0] } )
  .attr("cy", function (d) { return d[1] } )
  .attr("r", 3)
  .style("fill", "Red");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_d3js_scatterplot by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>100000000000 milliseconds from Jan 1, 1970, is approximately Oct 31, 1966:</p>

<p id="demo"></p>

<script>
const d = new Date(-100000000000);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_millisec_minus by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.sin()</h2>

<p>Math.sin(x) returns the sin of x (given in radians):</p>
<p>Angle in radians = (angle in degrees) * PI / 180.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"The sine value of 90 degrees is " + Math.sin(90 * Math.PI / 180);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_sin by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.findIndex()</h2>
<p id="demo"></p>

<script>
const numbers = [4, 9, 16, 25, 29];

document.getElementById("demo").innerHTML = "First number over 18 has index " + numbers.findIndex(myFunction);

function myFunction(value, index, array) {
  return value > 18;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_find_index by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Getters and Setters</h2>

<p>Getters and setters allow you to get and set object properties via methods.</p>

<p>This example uses a lang property to get the value of the language property:</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  language: "en",
  get lang() {
    return this.language;
  }
};

// Display data from the object using a getter:
document.getElementById("demo").innerHTML = person.lang;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_accessors_get by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Properties</h2>
<p>Access a property with ["property"]:</p>

<p id="demo"></p>

<script>
const person = {
  firstname: "John",
  lastname: "Doe",
  age: 50,
  eyecolor: "blue"
};

document.getElementById("demo").innerHTML = person["firstname"] + " is " + person["age"] + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_properties2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>Strings are written with quotes. You can use single or double quotes:</p>

<p id="demo"></p>

<script>
let carName1 = "Volvo XC60";
let carName2 = 'Volvo XC60';

document.getElementById("demo").innerHTML =
carName1 + "<br>" + 
carName2; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_string_quotes by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Function Closures</h2>
<p>Counting with a global variable.</p>

<p id="demo"></p>

<script>
// Initiate counter
let counter = 0;

// Function to increment counter
function add() {
  counter += 1;
}

// Call add() 3 times
add();
add();
add();

// The counter should now be 3
document.getElementById("demo").innerHTML = "The counter is: " + counter;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_closures1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p><a id="myAnchor" type="text/html" href="../index.html">W3Schools</a></p>

<p>Click the button to return the value of the type attribute of the link above.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("myAnchor").type;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_anchor_type by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"Screen pixel depth is " + screen.pixelDepth;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_screen_pixeldepth by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Errors</h2>

<p>You cannot set the number of significant digits of a number to 500:</p>

<p id="demo">

<script>
let num = 1;
try {
  num.toPrecision(500);
}
catch(err) {
  document.getElementById("demo").innerHTML = err.name;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_error_rangeerror by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML Events</h2>
<button onclick="this.innerHTML=Date()">The time is?</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_event_onclick by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>External JavaScript</h2>

<p id="demo">A Paragraph.</p>

<button type="button" onclick="myFunction()">Click Me</button>

<p>This example uses a full web URL to link to "myScript.js".</p>
<p>(myFunction is stored in "myScript.js")</p>

<script src="myScript.js"></script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_whereto_url by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Finding HTML Elements Using document.scripts</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"Number of scripts: " + document.scripts.length;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_scripts by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2>
<h2>splice()</h2>

<p>The splice() method adds new elements to an array, and returns an array with the deleted elements (if any):</p>

<p id="demo1"></p>
<p id="demo2"></p>
<p id="demo3"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = "Original Array:<br> " + fruits;
let removed = fruits.splice(2, 2, "Lemon", "Kiwi"); 
document.getElementById("demo2").innerHTML = "New Array:<br>" + fruits;
document.getElementById("demo3").innerHTML = "Removed Items:<br> " + removed; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_splice_return by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function color(color) {
  document.forms[0].myInput.style.background = color;
}
</script>
</head>
<body>

<form>
Write a message:<br>
<input 
type="text" 
onkeydown="color('yellow')"
onkeyup="color('white')"
name="myInput">
</form>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onkeydownup by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript SetTimeout()</h2>

<p>Wait 3 seconds (3000 milliseconds) for this page to change.</p>

<h1 id="demo"></h1>

<script>
setTimeout(function() { myFunction("I love You !!!"); }, 3000);

function myFunction(value) {
  document.getElementById("demo").innerHTML = value;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_callback9 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>Finding the largest number.</p>
<p id="demo"></p>

<script>
function findMax() {
  let max = -Infinity;
  for(let i = 0; i < arguments.length; i++) {
    if (arguments[i] > max) {
      max = arguments[i];
    }
  }
  return max;
} 
document.getElementById("demo").innerHTML = findMax(4, 5, 6);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_arguments by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img id="myImg" src="compman_lowres.gif" width="107" height="98">
<br><br>
<button onclick="document.getElementById('myImg').src='compman.gif'">On</button>
<button onclick="document.getElementById('myImg').src='compman_lowres.gif'">Off</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_img_src_buttons by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>A function can access variables defined inside the function:</p>

<p id="demo"></p>

<script>
myFunction();

function myFunction() {
  let a = 4;
  document.getElementById("demo").innerHTML = a * a;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_scope2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Finding HTML Elements Using document.links</h2>

<p>
<a href="../html/default.html">HTML</a>
<br>
<a href="../css/default.html">CSS</a>
</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"Number of links: " + document.links.length;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_links by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript typeof</h2>
<p>The typeof operator returns the type of a variable or an expression.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
typeof 0 + "<br>" + 
typeof 314 + "<br>" +
typeof 3.14 + "<br>" +
typeof (3) + "<br>" +
typeof (3 + 4);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_typeof_number by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>
<p>Using String.split():</p>

<p id="demo"></p>

<script>
let text = "Hello";
const myArr = text.split("");

text = "";
for (let i = 0; i < myArr.length; i++) {
  text += myArr[i] + "<br>"
}
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_split_char by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Display object properties:</p>

<p id="demo"></p>

<script>
const person = {
  name: "John",
  age: 30,
  city: "New York"
};

document.getElementById("demo").innerHTML = person.name + ", " + person.age + ", " + person.city;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_display_properties_all by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>ECMAScript 5</h2>

<p>ECMAScript 5 allows reserwed words as propery names.</p>
<p id="demo"></p>

<script>
var obj = {name: "John", new: "yes"};
document.getElementById("demo").innerHTML = obj.new;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_property by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript apply()</h2>
<p>This example returns the highest number in an array of numbers:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.max.apply(Math, [1,2,3]); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_call_math_apply1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>




END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML DOM</h2>
<p>Changing the HTML style:</p>


<p id="p1">Hello World!</p>
<p id="p2">Hello World!</p>

<script>
document.getElementById("p2").style.color = "blue";
document.getElementById("p2").style.fontFamily = "Arial";
document.getElementById("p2").style.fontSize = "larger";
</script>


</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_change_style by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>Using an object without declaring it, is not allowed.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
x = {p1:10, p2:20};   // This will cause an error (x is not defined).
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_object by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Properties</h2>

<p>NEGATIVE_INFINITY</p>

<p id="demo"></p>

<script>
let x = -1 / 0;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_neg_infinity2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Properties</h2>

<p>POSITIVE_INFINITY</p>

<p id="demo"></p>

<script>
let x = Number.POSITIVE_INFINITY;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_pos_infinity by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The padEnd() method pads a string with another string:</p>

<p id="demo"></p>

<script>
let text = "5";
document.getElementById("demo").innerHTML = text.padEnd(4,"0");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>
<p>The highest number is <span id="demo"></span>.</p>

<script>
const points = [40, 100, 1, 5, 25, 10];
document.getElementById("demo").innerHTML = myArrayMax(points);

function myArrayMax(arr) {
  return Math.max.apply(null, arr);
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort_math_max by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Make a table based on the value of a drop down menu.</h2>

<select id="myselect" onchange="change_myselect(this.value)">
  <option value="">Choose an option:</option>
  <option value="customers">Customers</option>
  <option value="products">Products</option>
  <option value="suppliers">Suppliers</option>
</select>

<p id="demo"></p>

<script>
function change_myselect(sel) {
  const dbParam = JSON.stringify({table:sel,limit:20});
  const xmlhttp = new XMLHttpRequest();
  xmlhttp.onload = function() {
    myObj = JSON.parse(this.responseText);
    text = "<table border='1'>"
    for (x in myObj) {
      text += "<tr><td>" + myObj[x].name + "</td></tr>";
    }
    text += "</table>"    
    document.getElementById("demo").innerHTML = text;
  }
  xmlhttp.open("POST.html", "json_demo_html_table.json", true);
  xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
  xmlhttp.send("x=" + dbParam);
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_html_table_dynamic by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:38 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>The string "arguments" cannot be used as a variable.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
let arguments = 3.14;   // This will cause an error 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_arguments by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1 id="id01">My First Page</h1>
<p id="id02"></p>

<script>
document.getElementById("id02").innerHTML = document.getElementById("id01").nodeName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nav_nodename by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p id="demo"></p>

<script>
// x is a number
let x = 123;

// y is a Number object
let y = new Number(123);

document.getElementById("demo").innerHTML = typeof x + "<br>" + typeof y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_object by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>The underscore is treated as a letter in JavaScript names.</p>

<p id="demo"></p>

<script>
let _x = 2;
let _100 = 5;

document.getElementById("demo").innerHTML = _x + _100;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_underscore by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Sets</h2>
<p>Adding equal elements to a Set:</p>

<p id="demo"></p>

<script>
// Create a Set
const letters = new Set();

// Add values to the Set
letters.add("a");
letters.add("b");
letters.add("c");
letters.add("c");
letters.add("c");
letters.add("c");
letters.add("c");
letters.add("c");

// Display set.size
document.getElementById("demo").innerHTML = letters.size;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_set_add_equals by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p id="demo"></p>

<script>
const cars = new Array("Saab", "Volvo", "BMW");
document.getElementById("demo").innerHTML = cars;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_new by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTMLDOM</h2>
<p>Displaying document.body</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = document.body.innerHTML;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_body by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>Adding a number as a number produces a different result from adding a number as a string:</p>

<p id="demo"></p>

<script>
let x = 10;
let y = "5";
let z = x + y;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_add_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form id="form1">
<button id="btn1" type="button">HTML</button>
</form>

<p>Click the "Try it" button to display the id of the form the HTML button belongs to:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("btn1").form.id;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_button_form by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript For Of Loop</h2>
<p>The for of statement loops through the values of any iterable object:</p>

<p id="demo"></p>

<script>
const cars = ["BMW", "Volvo", "Mini"];

let text = "";
for (let x of cars) {
  text += x + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_for_of by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Display the value of Boolean(10 &gt; 9):</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Boolean(10 > 9);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_boolean_expression1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Methods</h2>

<p>Object.entries() makes it simple to convert Object to Map:</p>

<p id="demo"></p>

<script>
const fruits = {Bananas:300, Oranges:200, Apples:500}; 

const myMap = new Map(Object.entries(fruits));

document.getElementById("demo").innerHTML = myMap;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_entries_map by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The lastIndexOf() method accepts a second parameter as the starting position for the search.</p>
<p>Remember that the lastIndexOf() method searches backwards, so position 15 means start the search at position 15, and search to the beginning.</p>
<p>Position 15 is position 15 from the beginning.</p>

<p id="demo"></p>

<script>
let str = "Please locate where 'locate' occurs!";
document.getElementById("demo").innerHTML = str.lastIndexOf("locate", 15);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_lastindexof_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
let day;
switch (new Date().getDay()) {
  case 0:
    day = "Sunday";
    break;
  case 1:
    day = "Monday";
    break;
  case 2:
    day = "Tuesday";
    break;
  case 3:
    day = "Wednesday";
    break;
  case 4:
    day = "Thursday";
    break;
  case 5:
    day = "Friday";
    break;
  case  6:
    day = "Saturday";
    break;
  default:
     day = "unknown";
}
document.getElementById("demo").innerHTML = "Today is " + day;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_break_switch by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Sets</h2>
<p>Adding new elements to a Set:</p>

<p id="demo"></p>

<script>
// Create a new Set
const letters = new Set(["a","b","c"]);

// Add a new Element
letters.add("d");
letters.add("e");

// Display set.size
document.getElementById("demo").innerHTML = letters.size;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_set_add by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function coordinates(event) {
  document.getElementById("demo").innerHTML = "X = " + event.screenX + "<br>Y = " + event.screenY;
}
</script>
</head>
<body>

<p onmousedown="coordinates(event)">
Click this paragraph, to display the x and y coordinates of the cursor, relative to the screen.
</p>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_event_screenxy by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>The JavaScript <i>this</i> Keyword</h1>

<p>In this example, <b>this</b> refers to the window object:</p>

<p id="demo"></p>

<script>
let x = this;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_this by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction() {
  var x = document.getElementById("fname");
  x.value = x.value.toUpperCase();
}
</script>
</head>
<body>

Enter your name: <input type="text" id="fname" onchange="myFunction()">

<p>When you leave the input field, a function is triggered which transforms the input text to upper case.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_onchange by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 18 Apr 2021 18:54:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body onload="checkCookies()">

<h2>JavaScript HTML Events</h2>

<p id="demo"></p>

<script>
function checkCookies() {
  var text = "";
  if (navigator.cookieEnabled == true) {
    text = "Cookies are enabled.";
  } else {
    text = "Cookies are not enabled.";
  }
  document.getElementById("demo").innerHTML = text;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onload by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Display the Boolean value of undefined:</p>

<p id="demo"></p>

<script>
let x;
document.getElementById("demo").innerHTML = Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_boolean_undefined by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p><a id="myAnchor" href="../index.html">W3Schools</a></p>

<p>Click the button to display the value of the href attribute of the link above.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("myAnchor").href;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_anchor_href by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Finding HTML Elements by Class Name</h2>
<p class="intro">Hello World!</p>
<p class="intro">Hello Sweden!</p>
<p class="intro">Hello Japan!</p>

<p id="demo"></p>

<script>
const myElements = document.getElementsByClassName("intro");
document.getElementById("demo").innerHTML = "The first paragraph with class='intro' is: " + myElements[0].innerHTML;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_dom_getelementsbyclassname by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1 id="id01">My First Page</h1>
<p id="id02"></p>

<script>
document.getElementById("id02").innerHTML = document.getElementById("id01").firstChild.nodeValue;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nav_innerhtml2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
onerror = handleErr;
var txt = "";
function handleErr(msg, url, l) {
  txt = "There was an error on this page.\n\n";
  txt += "Error: " + msg + "\n";
  txt += "URL: " + url + "\n";
  txt += "Line: " + l + "\n\n";
  txt += "Click OK to continue.\n\n";
  alert(txt);
  return true;
}

function message() {
   adddlert("Welcome guest!");
}
</script>
</head>

<body>
<input type="button" value="View message" onclick="message()" />
</body>


<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_onerror by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>This example will return undefined:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = myFunction(55);
function myFunction(a) {
  let
  power = 10;
  return;
  a * power;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_return_5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Get Text Content</h2>
<p id="01">Hello World!</p>
<p id="02">Hello Sweden!</p>
<p id="03">Hello Japan!</p>

<p id="demo"></p>

<script>
const myText = document.getElementById("02").textContent;
document.getElementById("demo").innerHTML = myText; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_dom_gettext by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Geolocation API</h2>
<p>Click the button to get your coordinates.</p>

<button onclick="getLocation()">Try It</button>

<p id="demo"></p>

<script>
const x = document.getElementById("demo");

function getLocation() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(showPosition);
  } else { 
    x.innerHTML = "Geolocation is not supported by this browser.";
  }
}

function showPosition(position) {
  x.innerHTML = "Latitude: " + position.coords.latitude + 
  "<br>Longitude: " + position.coords.longitude;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_api_geolocation by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:55 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>

<h2>Finding HTML Elements by Query Selector</h2>

<p class="intro">Hello World!</p>
<p class="intro">Hello Sweden!</p>
<p class="intro">Hello Japan!</p>

<p id="demo"></p>

<script>
$(document).ready(function() {
  var myElements = $("p.intro");
  $("#demo").text("The first paragraph with class='intro' is: " + myElements[0].innerHTML);
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_queryselectorall by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
sessionStorage.setItem("name","John Doe");
document.getElementById("demo").innerHTML = sessionStorage.getItem("name");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_api_storage_example2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction() {
  document.getElementById("demo").innerHTML = "Hello World!";
}
</script>
</head>

<body>

<p>When you click "Try it", a function will be called.</p>
<p>The function will display a message.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript "this"</h2>

<p>This example demonstrate that in a regular function, the "this" keyword represents different objects depending on how the function was called.</p>

<p>Click the button to execute the "hello" function again, and you will see that this time "this" represents the button object.</p>

<button id="btn">Click Me!</button>

<p id="demo"></p>

<script>
var hello;

hello = function() {
  document.getElementById("demo").innerHTML += this;
}

//The window object calls the function:
window.addEventListener("load", hello);

//A button object calls the function:
document.getElementById("btn").addEventListener("click", hello);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arrow_function6 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrow Function</h2>

<p>This example shows the syntax of an Arrow Function, and how to use it.</p>

<p id="demo"></p>

<script>
var hello;

hello = () => {
  return "Hello World!";
}

document.getElementById("demo").innerHTML = hello();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arrow_function2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The XMLHttpRequest Object</h2>

<h2>Retrieve data from XML file</h2>

<p><b>Status:</b> <span id="A1"></span></p>
<p><b>Status text:</b> <span id="A2"></span></p>
<p><b>Response:</b> <span id="A3"></span></p>

<button onclick="loadDoc('note.xml')">Get XML data</button>

<script>
function loadDoc(url) {
  const xhttp = new XMLHttpRequest();
  xhttp.onload = function() {
    document.getElementById('A1').innerHTML = this.status;
    document.getElementById('A2').innerHTML = this.statusText;
    document.getElementById('A3').innerHTML = this.responseText;
  }
  xhttp.open("GET.html", url);
  xhttp.send();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_xml by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:01 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Statements</h2>

<p id="demo">You cannot break a code line with a \ backslash.</p>

<script>
document.getElementById("demo").innerHTML = \
"Hello Dolly.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strings_codebreak by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Numbers and Number objects cannot be safely compared:</p>

<p id="demo"></p>

<script>
// x is a number
let x = 500;

// y is an object
let y = new Number(500);
document.getElementById("demo").innerHTML = (x==y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_object1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Number Object Properties</h2>

<p>EPSILON</p>

<p id="demo"></p>

<script>
let x = Number.EPSILON;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_epsilon by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<h3>The * Operator</h3>

<p id="demo"></p>

<script>
let x = 5;
let y = 2;
let z = x * y;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_mult by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img id="myImage" onclick="changeImage()" src="pic_bulboff.gif" width="100" height="180">

<p>Click the light bulb to turn on/off the light.</p>

<script>
function changeImage() {
  var image = document.getElementById('myImage');
  if (image.src.match("bulbon")) {
    image.src = "pic_bulboff.gif";
  } else {
    image.src = "pic_bulbon.gif";
  }
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_lightbulb by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Numeric constants, preceded by 0x, are interpreted as hexadecimal:</p>

<p id="demo"></p>

<script>
let x = 0xFF;
document.getElementById("demo").innerHTML = "0xFF = " + x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_hex by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Global "use strict" declaration.</h2>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
myFunction();

function myFunction() {
  y = 3.14;   // This will cause an error (y is not defined)
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_global by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Operators</h2>

<p>JavaScript uses arithmetic operators to compute values (just like algebra).</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = (5 + 6) * 10;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_syntax_operators by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>If you use a named index when accessing an array, JavaScript will redefine the array to a standard object, and some array methods and properties will produce undefined or incorrect results.</p>

<p id="demo"></p>

<script>
const person = [];
person["firstName"] = "John";
person["lastName"] = "Doe";
person["age"] = 46; 
document.getElementById("demo").innerHTML =
person[0] + " " + person.length;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_associative_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Methods</h2>

<p>The toPrecision() method returns a string, with a number written with a specified length:</p>

<p id="demo"></p>

<script>
let x = 9.656;
document.getElementById("demo").innerHTML = 
  x.toPrecision() + "<br>" +
  x.toPrecision(2) + "<br>" +
  x.toPrecision(4) + "<br>" +
  x.toPrecision(6);  
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_toprecision by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<p>When many operations has the same precedence, they are computed from left to right.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 100 + 50 - 3;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arithmetic_precedence3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>
<p>JSON.stringify can stringify arrays:</p>

<p id="demo"></p>

<script>
const arr = ["John", "Peter", "Sally", "Jane"];
document.getElementById("demo").innerHTML = JSON.stringify(arr);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_display_stringify by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>The arguments.length property returns the number of arguments received by the function:</p>

<p id="demo"></p>

<script>
function myFunction(a, b) {
  return arguments.length;
}
document.getElementById("demo").innerHTML = myFunction(4, 3);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_length by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Statements</h2>

<p>In HTML, JavaScript statements are executed by the browser.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = "Hello Dolly.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_statement by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getMinutes()</h2>
<p>The getMinutes() method returns the minutes of a date as a number (0-59):</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.getMinutes();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_getMinutes by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML Events</h2>
<h2 onclick="this.innerHTML='Ooops!'">Click on this text!</h2>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_event_onclick2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Hoisting</h2>

<p>With <b>var</b>, you can use a variable before it is declared:</p>

<p id="demo"></p>

<script>
carName = "Volvo";
document.getElementById("demo").innerHTML = carName;
var carName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_let_hoisting_var by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Creating an object:</p>

<p id="demo"></p>

<script>
let person = {
  firstName : "John",
  lastName  : "Doe",
  age     : 50,
  eyeColor  : "blue"
};

document.getElementById("demo").innerHTML = person.firstName + " " + person.lastName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_object by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Assign 5 to x, and display the value of the comparison (x !== 8):</p>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = (x !== 8);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison13 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Geolocation API</h2>
<p>Click the button to get your coordinates.</p>

<button onclick="getLocation()">Try It</button>

<p id="demo"></p>

<script>
const x = document.getElementById("demo");

function getLocation() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(showPosition, showError);
  } else { 
    x.innerHTML = "Geolocation is not supported by this browser.";
  }
}

function showPosition(position) {
  x.innerHTML = "Latitude: " + position.coords.latitude + 
  "<br>Longitude: " + position.coords.longitude;
}

function showError(error) {
  switch(error.code) {
    case error.PERMISSION_DENIED:
      x.innerHTML = "User denied the request for Geolocation."
      break;
    case error.POSITION_UNAVAILABLE:
      x.innerHTML = "Location information is unavailable."
      break;
    case error.TIMEOUT:
      x.innerHTML = "The request to get user location timed out."
      break;
    case error.UNKNOWN_ERROR:
      x.innerHTML = "An unknown error occurred."
      break;
  }
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_api_geolocation_error by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:55 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With &quot;use strict&quot;:</h2>
<h3>Deleting a variable (or object) is not allowed.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
let x = 3.14;
delete x;     // This will cause an error 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_delete by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Function Sequence</h2>

<p>JavaScript functions are executed in the sequence they are called.</p>

<p id="demo"></p>

<script>
function myDisplayer(some) {
  document.getElementById("demo").innerHTML = some;
}

function myFirst() {
  myDisplayer("Hello");
}

function mySecond() {
  myDisplayer("Goodbye");
}

myFirst();
mySecond();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_callback1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The XMLHttpRequest Object</h2>
<button type="button" onclick="loadDoc()">Request data</button>

<p id="demo"></p>

<script>
function loadDoc() {
  const xhttp = new XMLHttpRequest();
  xhttp.onload = function() {
    document.getElementById("demo").innerHTML = this.responseText;
  }
  xhttp.open("GET.html", "demo_geta18a.html?t=" + Math.random());
  xhttp.send();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_get_unique by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:57 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>
<p>Map instanceof:</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

document.getElementById("demo").innerHTML = fruits instanceof Map;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_instanceof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1 id="id01">My First Page</h1>
<p id="id02"></p>

<script>
document.getElementById("id02").innerHTML = document.getElementById("id01").nodeType;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nav_nodetype by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String.trim()</h2>

<p>IE 8 does not support String.trim(). To trim a string you can use a regular expression instead.</p>

<script>
var str = "     Hello World!     ";
alert(str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ''));
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_trim_regexp by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 18 Apr 2021 18:53:58 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting the string "0" to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = "0";
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_string_0 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>
<p>The highest number is <span id="demo"></span>.</p>

<script>
const points = [40, 100, 1, 5, 25, 10];
document.getElementById("demo").innerHTML = myArrayMax(points);

function myArrayMax(arr) {
  let len = arr.length;
  let max = -Infinity;
  while (len--) {
    if (arr[len] > max) {
      max = arr[len];
    }
  }
  return max;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort_max by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>The dollar sign is treated as a letter in JavaScript names.</p>

<p id="demo"></p>

<script>
let $$$ = 2;
let $myMoney = 5;
document.getElementById("demo").innerHTML = $$$ + $myMoney;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_dollar by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<h3>The window.location object</h3>

<input type="button" value="Load new document" onclick="newDoc()">

<script>
function newDoc() {
  window.location.assign("../index.html")
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loc_assign by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Converting an empty array to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
var x = [];
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_array_empty by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>In HTML the value of <b>this</b>, in a global function, is the window object.</p>

<p id="demo"></p>

<script>
let x = myFunction();
function myFunction() {
  return this;
}
document.getElementById("demo").innerHTML = x; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_invoke_function_3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>This returns true (maybe not as expected), because 10 is true:</p>

<p id="demo"></p>

<script>
let x = 0;
document.getElementById("demo").innerHTML = Boolean(x = 10);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_equal_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting Infinity to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = Infinity;
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_infinity by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction() {
  alert("You pressed a key inside the input field");
}
</script>
</head>
<body>

<p>A function is triggered when the user is pressing a key in the input field.</p>

<input type="text" onkeypress="myFunction()">

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onkeypress by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>If you add two numeric strings, the result will be a concatenated string:</p>

<p id="demo"></p>

<script>
let x = "10";
let y = "20";
let z = x + y;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_add_strings1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript typeof</h2>
<p>The typeof operator returns object for both objects, arrays, and null.</p>
<p>The typeof operator does not return object for functions.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
typeof {name:'john', age:34} + "<br>" +
typeof [1,2,3,4] + "<br>" +
typeof null + "<br>" +
typeof function myFunc(){};
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_typeof_complex by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Do a global search for digits in a string:</p>

<p id="demo"></p>

<script>
let text = "Give 100%!"; 
let result = text.match(/\d/g);
document.getElementById("demo").innerHTML = result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_d by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Constructors</h2>

<p id="demo"></p>

<script>
// Constructor function for Person objects
function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
}

// Create 2 Person objects
const myFather = new Person("John", "Doe", 50, "blue");
const myMother = new Person("Sally", "Rally", 48, "green");

// Add nationality to first object
myFather.nationality = "English";

// Display nationality 
document.getElementById("demo").innerHTML =
"My father is " + myFather.nationality; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_constructor2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Modify a JavaScript Object</h2>
<p id="demo"></p>

<script>
const myObj = {name:"John", age:30, city:"New York" };
myObj.name = "Gilbert";
document.getElementById("demo").innerHTML = myObj.name;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_modify_object by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:01 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getDay()</h2>
<p>The getDay() method returns the weekday as a number.</p>
<p>You can use an array to display the name of the weekday:</p>

<p id="demo"></p>

<script>
const days = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];

const d = new Date();
let day = days[d.getDay()];
document.getElementById("demo").innerHTML = day;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_weekday by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>The AND operator (&&) returns true if both expressions are true, otherwise it returns false.</p>

<p id="demo"></p>

<script>
let x = 6;
let y = 3;

document.getElementById("demo").innerHTML = 
(x < 10 && y > 1) + "<br>" + 
(x < 10 && y < 1);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_and by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Assignments</h2>
<h3>The *= Operator</h3>

<p id="demo"></p>

<script>
let x = 10;
x *= 5;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_assign_multequal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript switch</h2>

<p id="demo"></p>

<script>
let text;
switch (new Date().getDay()) {
  case 4:
  case 5:
    text = "Soon it is Weekend";
    break;
  case 0:
  case 6:
    text = "It is Weekend";
    break;
  default:
    text = "Looking forward to the Weekend";
}
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_switch3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Getters and Setters</h2>

<p>Getters and setters allow you to get and set properties via methods.</p>

<p>This example creates a getter for a property called fullName.</p>

<p id="demo"></p>

<script>
// Create an object:
var person = {
  firstName: "John",
  lastName : "Doe",
  get fullName() {
    return this.firstName + " " + this.lastName;
  }
};
// Display data from the object using a getter:
document.getElementById("demo").innerHTML = person.fullName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_setter1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2> 
<h2>join()</h2> 
<p>The join() method joins array elements into a string.</p>
<p>It this example we have used " * " as a separator between the elements:</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = fruits.join(" * ");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_join by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Function bind()</h1>

<p>In this example, the person object has a display method:</p>

<p id="demo"></p>

<script>
const person = {
  firstName:"John",
  lastName: "Doe",
  display: function() {
    let x = document.getElementById("demo");
    x.innerHTML = this.firstName + " " + this.lastName;
  }
}

person.display();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_bind1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>5 numbers specify year, month, day, hour, and minute:</p>

<p id="demo"></p>

<script>
const d = new Date(2018, 11, 24, 10, 33);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_numbers5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
var x = 5; // Initialize x
var y = 7; // Initialize y

elem = document.getElementById("demo"); // Find an element 
elem.innerHTML = x + " " + y;       // Display x and y

</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_hoisting4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Classes are not hoisted</h2>

<p>You will get an error if you try to use a class before it is declared.</p>

<p id="demo"></p>

<script>
//You cannot use the class yet.
//myCar = new Car("Ford")
//This would raise an error.

class Car {
  constructor(brand) {
    this.carname = brand;
  }
}

//Now you can use the class:
let myCar = new Car("Ford")
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_classes_hoisting by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript apply()</h2>
<p>This example returns the highest number in an array of numbers:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.max.apply(" ", [1,2,3]); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_call_math_apply2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>




END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Strings</h1>
<h2>The trimStart() Method</h2>

<p id="demo"></p>

<script>
let text1 = "     Hello World!     ";
let text2 = text1.trimStart();

document.getElementById("demo").innerHTML =
"Length text1 = " + text1.length + "<br>Length text2 = " + text2.length;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_trimstart by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<a name="html">HTML Tutorial</a><br>
<a name="css">CSS Tutorial</a><br>
<a name="xml">XML Tutorial</a><br>

<p>Click the button to display the innerHTML of the first anchor in the document.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  document.getElementById("demo").innerHTML =
  document.anchors[0].innerHTML;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_anchors2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Display properties in JSON format:</p>

<p id="demo"></p>

<script>
const person = {
  name: "John",
  age: 30,
  city: "New York"
};

document.getElementById("demo").innerHTML = JSON.stringify(person);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_display_stringify by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrow Function</h2>

<p>This example shows an Arrow Function with a parameter.</p>

<p id="demo"></p>

<script>
var hello;

hello = (val) => "Hello " + val;

document.getElementById("demo").innerHTML = hello("Universe!");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arrow_function4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The XMLHttpRequest Object</h2>

<p>The getResponseHeader() function is used to return specific header information from a resource, like length, server-type, content-type, last-modified, etc:</p>

<p>Last modified: <span id="demo"></span></p>

<script>
const xhttp=new XMLHttpRequest();
xhttp.onload = function() {
  document.getElementById("demo").innerHTML =
  this.getResponseHeader("Last-Modified");
}
xhttp.open("GET.html", "ajax_info.txt");
xhttp.send();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_lastmodified by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:00 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<button onClick="myTimer = setInterval(myCounter, 1000)">Start counter!</button>

<p id="demo">Click on the button above and I will count forever.</p>

<button onClick="clearInterval(myTimer)">Stop counter!</button>

<script>
var c = 0;
function myCounter() {
  document.getElementById("demo").innerHTML = ++c;
}
</script> 

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_timing_stop by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:13 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Assign 5 to x, and display the value of the comparison (x == 5):</p>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = (x == 5);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Converting an array with one numeric element to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
var x = [20];
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_array_one_number by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>Adding elements with high indexes can create undefined "holes" in an array.</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple"];
fruits[6] = "Lemon";

let fLen = fruits.length;
let text = "";
for (i = 0; i < fLen; i++) {
  text += fruits[i] + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_holes by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Constructors</h2>

<p id="demo"></p>

<script>

// Constructor function for Person objects
function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
  this.name = function() {
    return this.firstName + " " + this.lastName
  };
}

// Create a Person object
const myFather = new Person("John", "Doe", 50, "blue");

// Display full name
document.getElementById("demo").innerHTML =
"My father is " + myFather.name(); 

</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_constructor6 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>Using a variable without declaring it, is not allowed.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
x = 3.14;  // This will cause an error (x is not defined).
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_variable by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The lastIndexOf() method returns the position of the last occurrence of a specified text:</p>

<p id="demo"></p>

<script>
let str = "Please locate where 'locate' occurs!";
document.getElementById("demo").innerHTML = str.lastIndexOf("locate");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_lastindexof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2>
<h2>concat()</h2>
<p>The concat() method can merge string values to arrays:</p>

<p id="demo"></p>

<script>
const myArray = ["Emil", "Tobias", "Linus"];
const myChildren = myArray.concat("Peter"); 
document.getElementById("demo").innerHTML = myChildren;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_concat3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Display the number of URLs in the history list:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  document.getElementById("demo").innerHTML = history.length;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_history_length by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:13 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p id="demo"></p>

<script>
// x is a string
let x = "John";

// y is an object
let y = new String("John");

document.getElementById("demo").innerHTML =
typeof x + "<br>" + typeof y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_object by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Use HTTP POST to Get JSON Data from a PHP Server</h2>

<p id="demo"></p>

<script>
const dbParam = JSON.stringify({"limit":10});
const xmlhttp = new XMLHttpRequest();
xmlhttp.onload = function() {
  myObj = JSON.parse(this.responseText);
  let text = "";
  for (let x in myObj) {
    text += myObj[x].name + "<br>";
  }
  document.getElementById("demo").innerHTML = text;
}
xmlhttp.open("POST.html", "json_demo_db_post.json");
xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
xmlhttp.send("x=" + dbParam);
</script>

<p>Try changing the "limit" property from 10 to 5.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_php_db_post by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:38 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<h3>The -- Operator</h3>

<p id="demo"></p>

<script>
let x = 5;
x--;
let z = x;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_decrement by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function getIndex() {
  document.getElementById("demo").innerHTML =
  document.getElementById("mySelect").selectedIndex;
}
</script>
</head>
<body>

<form>
Select your favorite fruit:
<select id="mySelect">
  <option>Apple</option>
  <option>Orange</option>
  <option>Pineapple</option>
  <option>Banana</option>
</select>
<br><br>
<input type="button" onclick="getIndex()" 
value="Display the index of the selected option">
</form>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=try_dom_option_index by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
<body>

<canvas id="myChart" style="width:100%;max-width:600px"></canvas>

<script>
var xValues = [];
var yValues = [];
generateData("x * 2 + 7", 0, 10, 0.5);

new Chart("myChart", {
  type: "line",
  data: {
    labels: xValues,
    datasets: [{
      fill: false,
      pointRadius: 1,
      borderColor: "rgba(255,0,0,0.5)",
      data: yValues
    }]
  },    
  options: {
    legend: {display: false},
    title: {
      display: true,
      text: "y = x * 2 + 7",
      fontSize: 16
    }
  }
});
function generateData(value, i1, i2, step = 1) {
  for (let x = i1; x <= i2; x += step) {
    yValues.push(eval(value));
    xValues.push(x);
  }
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_chartjs_linear by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:31:40 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Variables</h2>

<p>In this example, x, y, and z are variables.</p>

<p id="demo"></p>

<script>
let x = 5;
let y = 6;
let z = x + y;
document.getElementById("demo").innerHTML =
"The value of z is: " + z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_let by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>
<p>The length property returns the length of an array.</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = fruits.length;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_length by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>Strings are written with quotes.</p>
<p>Numbers are written without quotes.</p>

<p id="demo"></p>

<script>
const pi = 3.14;
let person = "John Doe";
let answer = 'Yes I am!';

document.getElementById("demo").innerHTML =
pi + "<br>" + person + "<br>" + answer;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_types by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function getElements() {
  var x = document.getElementsByName("x");
  document.getElementById("demo").innerHTML = x.length;
}
</script>
</head>
<body>

<p>
Cats: <input name="x" type="radio" value="Cats">
Dogs: <input name="x" type="radio" value="Dogs">
</p>

<p>
<input type="button" onclick="getElements()" value="How many elements named x?">
</p>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_getelementsbyname by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>
<a href="../html/default.html">HTML</a>
<br>
<a href="../css/default.html">CSS</a>
</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"The href of the first link is " + document.links[0].href;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_links2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Looping Object Properties</h2>
<p id="demo"></p>

<script>
const myJSON = '{"name":"John", "age":30, "car":null}';
const myObj = JSON.parse(myJSON);

let text = "";
for (const x in myObj) {
  text += x + ", ";
}
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_object_loop by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Input your age and click the button:</p>

<input id="age" value="18" />

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  let age = document.getElementById("age").value;
  let voteable = (age < 18) ? "Too young":"Old enough";
  document.getElementById("demo").innerHTML = voteable + " to vote.";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Creating an Object from a JSON Literal</h2>
<p id="demo"></p>

<script>
const myObj = {"name":"John", "age":30, "car":null};
document.getElementById("demo").innerHTML = myObj.name;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_object_literal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:01 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Methods</h2>

<p>The isInteger() method returns true if the argument is an integer.</p>
<p>Otherwise it returns false.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
Number.isInteger(10) + "<br>" + Number.isInteger(10.5);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_isinteger by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The JavaScript String() Method</h2>

<p>The String() method can convert a number to a string.</p>

<p id="demo"></p>

<script>
let x = 123;
document.getElementById("demo").innerHTML =
  String(x) + "<br>" +
  String(123) + "<br>" +
  String(100 + 23);
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_string by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1 id="id1">My Heading 1</h1>

<button type="button" 
onclick="document.getElementById('id1').style.color = 'red'">
Click Me!</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_color2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"Screen color depth is " + screen.colorDepth;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_screen_colordepth by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<p>A typical arithmetic operation takes two numbers and produces a new number.</p>

<p id="demo"></p>

<script>
let x = 100 + 50;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arithmetic_operation by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Statements</h2>

<p>A <b>JavaScript program</b> is a list of <b>statements</b> to be executed by a computer.</p>

<p id="demo"></p>

<script>
let x, y, z;  // Statement 1
x = 5;        // Statement 2
y = 6;        // Statement 3
z = x + y;    // Statement 4

document.getElementById("demo").innerHTML =
"The value of z is " + z + ".";  
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_statements by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Variables</h2>

<p>In this example, x is defined as a variable.
Then, x is assigned the value of 6:</p>

<p id="demo"></p>

<script>
let x;
x = 6;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_syntax_variables by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function goBack() {
  window.history.go(-2)
}
</script>
</head>
<body>

<button onclick="goBack()">Go 2 pages back</button>

<p>Clicking on the "Go 2 pages back" button here will not result in any action, because there is no previous URL in the history list.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_history_go by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:13 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Creating a JavaScript Object:</p>

<p id="demo"></p>

<script>
const person = {
  firstName: "John",
  lastName: "Doe",
  age: 50,
  eyeColor: "blue"
};

document.getElementById("demo").innerHTML =
person.firstName + " is " + person.age + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_create_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Get Parent HTML Element</h2>
<p id="01">Hello World!</p>
<p id="02">Hello Sweden!</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = document.getElementById("02").parentNode.nodeName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_dom_getparent by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>In this example, price1, price2, and total are variables.</p>

<p id="demo"></p>

<script>
const price1 = 5;
const price2 = 6;
let total = price1 + price2;
document.getElementById("demo").innerHTML =
"The total is: " + total;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_total by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>
<p>Sort the array in ascending order:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const points = [40, 100, 1, 5, 25, 10];
document.getElementById("demo1").innerHTML = points;  

points.sort(function(a, b){return a - b});
document.getElementById("demo2").innerHTML = points;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.reduce()</h2>
<p>This example finds the sum of all numbers in an array:</p>

<p id="demo"></p>

<script>
const numbers = [45, 4, 9, 16, 25];
let sum = numbers.reduce(myFunction);

document.getElementById("demo").innerHTML = "The sum is " + sum;

function myFunction(total, value) {
  return total + value;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_reduce_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript let</h2>

<p id="demo"></p>

<script>
let i = 5;
for (let i = 0; i < 10; i++) {
  // some statements
}
document.getElementById("demo").innerHTML = i;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_let_for_loop2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<p id="demo">Fetch a file to change this text.</p>
<script>

let file = "fetch_info.txt"

fetch (file)
.then(x => x.text())
.then(y => document.getElementById("demo").innerHTML = y);

</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_api_fetch by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:55 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form id="frm1" action="https://www.w3schools.com/action_page.php">
  First name: <input type="text" name="fname" value="Donald"><br>
  Last name: <input type="text" name="lname" value="Duck"><br><br>
  <input type="submit" value="Submit">
</form>

<p>Click "Try it" to display the number of elements the form:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("frm1").length;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_form_length by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function padding(id) {
  document.getElementById(id).style.padding = "15px";
}

</script>
</head>
<body>

<table id="myTable" style="border:1px solid black">
  <tr>
    <td>100</td>
    <td>200</td>
  </tr>
  <tr>
    <td>300</td>
    <td>400</td>
  </tr>
</table>

<p>
<input type="button" onclick="padding('myTable')" value="Change padding">
</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_table_padding by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The charAt() method returns the character at a given position in a string:</p>

<p id="demo"></p>

<script>
var text = "HELLO WORLD";
document.getElementById("demo").innerHTML = text.charAt(0);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_charat by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>If you add a number and a numeric string, the result will be a concatenated string:</p>

<p id="demo"></p>

<script>
let x = 10;
let y = "20";
let z = x + y;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_add_strings2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>2 numbers specify year and  month:</p>

<p id="demo"></p>

<script>
const d = new Date(2018, 11);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_numbers2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML DOM</h2>

<p>Hello World!</p>

<p>Hello Norway!</p>

<p>Click the button to change the color of all p elements.</p>

<button onclick="myFunction()">Try it</button>

<script>
function myFunction() {
  const myNodelist = document.querySelectorAll("p");
  for (let i = 0; i < myNodelist.length; i++) {
    myNodelist[i].style.color = "red";
  }
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nodelist_loop by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>

<h2>Show HTML Elements</h2>
<p id="01" style="display:none">Hello World!</p>
<p id="02" style="display:none">Hello Sweden!</p>
<p id="03" style="display:none">Hello Japan!</p>

<script>
$(document).ready(function() {
  $("#02").show();
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_show by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>

<h2>Setting Text Content</h2>
<p id="01">Hello World!</p>
<p id="02">Hello Sweden!</p>

<script>
$(document).ready(function() {
  var myElement = $("#01");
  myElement.text("Hello Sweden!");
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_settext by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The XMLHttpRequest Object</h2>

<p id="demo">Let AJAX change this text.</p>

<button type="button" onclick="loadDoc()">Change Content</button>

<script>
function loadDoc() {
  var xhttp;
  if (window.XMLHttpRequest) {
    // code for modern browsers
    xhttp = new XMLHttpRequest();
  } else {
    // code for IE6, IE5
    xhttp = new ActiveXObject("Microsoft.XMLHTTP");
  }
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
      document.getElementById("demo").innerHTML = this.responseText;
    }
  };
  xhttp.open("GET.html", "ajax_info.txt", true);
  xhttp.send();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_xmlhttprequest_ie by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 18 Apr 2021 18:54:53 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The slice() method extract a part of a string
and returns the extracted parts in a new string:</p>

<p id="demo"></p>

<script>
let str = "Apple, Banana, Kiwi";
document.getElementById("demo").innerHTML = str.slice(7,13); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_slice by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Access nested objects:</p>

<p id="demo"></p>

<script>
const myObj = {
  name: "John",
  age: 30,
  cars: {
  car1: "Ford",
  car2: "BMW",
  car3: "Fiat"
  }
}
document.getElementById("demo").innerHTML = myObj.cars["car2"];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_nested2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<base id="htmldom" >
</head>
<body>

<p>Click the button to display the value of the href attribute of the base element.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("htmldom").href;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_base_href by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:05 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>
<p>Using Map.get():</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

document.getElementById("demo").innerHTML = fruits.get("apples");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_get by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>Both indexOf(), and lastIndexOf() return -1 if the text is not found:</p>

<p id="demo"></p>

<script>
let str = "Please locate where 'locate' occurs!";
document.getElementById("demo").innerHTML = str.indexOf("John");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_indexof_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h1>JavaScript Modules</h1>

<p id="demo"></p>

<script type="module">
import { name, age } from "./person.js";

let text = "My name is " + name + ", I am " + age + ".";

document.getElementById("demo").innerHTML = text
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_modules1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img src="planets.gif" width="145" height="126" usemap="#planetmap">

<map name="planetmap">
  <area id="venus" shape="circle" coords="124,58,8" alt="Venus" href="venus8285.html?id=venus">
</map>

<p>Click the button to display the querystring part of the href attribute for the "venus" area.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("venus").search;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_area_search by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:05 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Never Create Strings as Objects</h2>
<p>JavaScript objects cannot be compared.</p>

<p id="demo"></p>

<script>
let x = new String("John");  // x is an object
let y = new String("John");  // y is an object
document.getElementById("demo").innerHTML = (x===y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_object4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Assignments</h2>
<h3>The %= Operator</h3>

<p id="demo"></p>

<script>
let x = 10;
x %= 5;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_assign_modequal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>In this example the fulllName method of person is <b>applied</b> on person1:</p>

<p id="demo"></p>

<script>
const person = {
  fullName: function(city, country) {
    return this.firstName + " " + this.lastName + "," + city + "," + country;
  }
}

const person1 = {
  firstName:"John",
  lastName: "Doe"
}

document.getElementById("demo").innerHTML = person.fullName.apply(person1, ["Oslo", "Norway"]); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_apply_arguments by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function selectMultiple() {
  document.getElementById("mySelect").multiple = true;
}
</script>
</head>
<body>

<form>
<select id="mySelect" size="4">
  <option>Apple</option>
  <option>Pear</option>
  <option>Banana</option>
  <option>Orange</option>
</select>
<input type="button" onclick="selectMultiple()" value="Select multiple">
</form>

<p>Before you click "Select multiple", you cannot select more than one option (by holding down the Shift or Ctrl key).</p>
<p>After you have clicked &quot;Select multiple", you can.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=try_dom_select_multiple by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Do a global search for the character "h" in a string:</p>

<p id="demo"></p>

<script>
let text = "Is this all there is?";
let result = text.match(/[h]/g);
document.getElementById("demo").innerHTML = result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_abc by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form id="frm1" action="https://www.w3schools.com/action_page.php">
<button id="btn1" name="subject" type="submit" value="fav_HTML">HTML</button>
<button id="btn2" name="subject" type="submit" value="fav_CSS">CSS</button>
</form>

<p>Click the "Try it" button to return the text on the "HTML" button:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("btn1").innerHTML;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_button_text by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>It is a common mistake to forget that switch statements use strict comparison.</p>
<p>This will work:</p>

<p id="demo"></p>

<script>
let x = 10;
switch(x) {
  case 10: document.getElementById("demo").innerHTML = "Hello";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_loose_3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML DOM</h2>

<p>Hello World!</p>

<p>Hello Norway!</p>

<p>Click the button to change the color of all p elements.</p>

<button onclick="myFunction()">Try it</button>

<script>
function myFunction() {
  const myCollection = document.getElementsByTagName("p");
  for (let i = 0; i < myCollection.length; i++) {
    myCollection[i].style.color = "red";
  }
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_htmlcollection_loop by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Bla, bla, bla</p>

<script>
document.write(Date());
</script>

<p>Bla, bla, bla</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_write by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The XMLHttpRequest Object</h2>
<h3>Start typing a name in the input field below:</h3>

<p>Suggestions: <span id="txtHint"></span></p> 
<p>First name: <input type="text" id="txt1" onkeyup="showHint(this.value)"></p>

<script>
function showHint(str) {
  if (str.length == 0) { 
    document.getElementById("txtHint").innerHTML = "";
    return;
  }
  const xhttp = new XMLHttpRequest();
  xhttp.onload = function() {
    document.getElementById("txtHint").innerHTML =
    this.responseText;
  }
  xhttp.open("GET.html", "gethint03d2.html?q="+str);
  xhttp.send();   
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_suggest_php by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:00 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Constructors</h2>

<p id="demo"></p>

<script>
// Constructor function for Person objects
function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
}

// Create a Person object
const myFather = new Person("John", "Doe", 50, "blue");

// Display age
document.getElementById("demo").innerHTML =
"My father is " + myFather.age + "."; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_constructor by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>

<p>The prototype property allows you to add new methods to objects constructors:</p>

<p id="demo"></p>

<script>
function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
}

Person.prototype.nationality = "English";

const myFather = new Person("John", "Doe", 50, "blue");
document.getElementById("demo").innerHTML =
"The nationality of my father is " + myFather.nationality; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_prototype5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2> 
<h2>unshift()</h2>
<p>The unshift() method returns the length of the new array:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = fruits.unshift("Lemon");
document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_unshift_return by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting null to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = null;
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_null by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>Creating an Array from a Literal</h2>
<p id="demo"></p>

<script>
const myArray = ["Ford", "BMW", "Fiat"];
document.getElementById("demo").innerHTML = myArray;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_array_literal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:01 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>The string "eval" cannot be used as a variable.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
let eval = 3.14;   // This will cause an error 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_eval by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Assign 5 to x, and display the value of the comparison (x === "5").</p>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = (x === "5");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JSON.stringify() converts date objects into strings.</h2>
<p id="demo"></p>

<script>
const obj = {name: "John", today: new Date(), city: "New York"};
const myJSON = JSON.stringify(obj);
document.getElementById("demo").innerHTML = myJSON;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_stringify_date by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Convert a string into a date object.</h2>
<p id="demo"></p>

<script>
const text = '{"name":"John", "birth":"1986-12-14", "city":"New York"}';
const obj = JSON.parse(text);
obj.birth = new Date(obj.birth);
document.getElementById("demo").innerHTML = obj.name + ", " + obj.birth; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_parse_date by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Methods</h2>

<p>The valueOf() method returns a number as a number:</p>

<p id="demo"></p>

<script>
let x = 123;

document.getElementById("demo").innerHTML = 
  x.valueOf() + "<br>" +
  (123).valueOf() + "<br>" +
  (100 + 23).valueOf();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_valueof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2>
<h2>pop()</h2>
<p>The pop() method removes the last element from an array.</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = fruits;
fruits.pop();
document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_pop by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math</h2>

<p>Math.floor(Math.random() * 100) + 1) returns a random integer between 1 and 
100 (both included):</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
Math.floor(Math.random() * 100) + 1;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_random_1_100 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2>
<p>The length property provides an easy way to append new elements to an array without using the push() method:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = fruits;
fruits[fruits.length] = "Kiwi";
document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_change_add by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Division by zero generates Infinity;</p>

<p id="demo"></p>

<script>
let x = 2/0;
let y = -2/0;
document.getElementById("demo").innerHTML = x + "<br>" + y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_infinity_zero by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Properties</h2>

<p>NEGATIVE_INFINITY</p>

<p id="demo"></p>

<script>
let x = Number.NEGATIVE_INFINITY;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_neg_infinity by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The ** Operator</h2>

<p id="demo"></p>

<script>
let x = 5;
let z = x ** 2;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_exponent1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Template Literals</h2>

<p>Template literals use back-ticks (``) to define a string:</p>

<p id="demo"></p>

<p>Template literals are not supported in Internet Explorer.</p>

<script>
let text = `Hello world!`;
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_templates by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function getOption() {
  var obj = document.getElementById("mySelect");
  document.getElementById("demo").innerHTML = 
  obj.options[obj.selectedIndex].text;
}
</script>
</head>
<body>

<form>
Select your favorite fruit:
<select id="mySelect">
  <option>Apple</option>
  <option>Orange</option>
  <option>Pineapple</option>
  <option>Banana</option>
</select>
<br><br>
<input type="button" onclick="getOption()" value="Click Me!">
</form>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=try_dom_select_option by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript let</h2>

<p id="demo"></p>

<script>
var i = 5;
for (var i = 0; i < 10; i++) {
  // some statements
}
document.getElementById("demo").innerHTML = i;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_let_for_loop1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The padEnd() method pads a string with another string:</p>

<p id="demo"></p>

<script>
let numb = 5;
let text = numb.toString();
document.getElementById("demo").innerHTML = text.padEnd(4,"x");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Navigator</h2>

<p>The appCodeName property returns the code name of the browser.</p>

<p>Do not rely on it! "Mozilla" is the application code name for Chrome, Firefox, IE, Safari, and Opera.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"navigator.appCodeName is " + navigator.appCodeName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_nav_appcodename by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The JavaScript constructor Property</h2>

<p>The constructor property returns the constructor function for a variable or an 
object.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
  "john".constructor + "<br>" +
  (3.14).constructor + "<br>" +
  false.constructor + "<br>" +
  [1,2,3,4].constructor + "<br>" +
  {name:'john', age:34}.constructor + "<br>" +
  new Date().constructor + "<br>" +
  function () {}.constructor;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_constructor_all by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Class Method</h2>

<p>How to define and use a Class method.</p>

<p id="demo"></p>

<script>
class Car {
  constructor(name, year) {
    this.name = name;
    this.year = year;

  }
  age() {
    let date = new Date();
    return date.getFullYear() - this.year;
  }
}

let myCar = new Car("Ford", 2014);
document.getElementById("demo").innerHTML =
"My car is " + myCar.age() + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_class_method by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function removeOption() {
  var x = document.getElementById("mySelect");
  x.remove(x.selectedIndex);
}
</script>
</head>
<body>

<form>
<select id="mySelect">
  <option>Apple</option>
  <option>Pear</option>
  <option>Banana</option>
  <option>Orange</option>
</select>
<input type="button" onclick="removeOption()" value="Remove the selected option">
</form>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=try_dom_select_remove by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Numbers and Number objects cannot be safely compared:</p>

<p id="demo"></p>

<script>
// x is a number
let x = 500;

// y is an object
let y = new Number(500);

document.getElementById("demo").innerHTML = (x===y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_object2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Converting an array with two numeric elements to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
var x = [10,20];
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_array_two_numbers by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo">Click the button to replace this document with new content.</p>

<button onclick="myFunction()">Try it</button>

<script>
function myFunction() {
  document.open("text/html","replace");
  document.write("<h2>Learning about the HTML DOM is fun!</h2>");
  document.close();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_open by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function loadImage() {
  alert("Image is loaded");
}
</script>
</head>
<body>

<img src="w3javascript.gif" onload="loadImage()" width="100" height="132">

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_img_onload by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:11 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Methods</h2>

<p>The toExponential() method returns a string, with the number rounded and written using exponential notation.</p>

<p>An optional parameter defines the number of digits behind the decimal point.</p>

<p id="demo"></p>

<script>
let x = 9.656;
document.getElementById("demo").innerHTML =
  x.toExponential() + "<br>" + 
  x.toExponential(2) + "<br>" + 
  x.toExponential(4) + "<br>" + 
  x.toExponential(6);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_toexponential by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form id="frm1" action="https://www.w3schools.com/action_page.php">
  First name: <input type="text" name="fname" value="Donald"><br>
  Last name: <input type="text" name="lname" value="Duck"><br><br>
  <input type="submit" value="Submit">
</form> 

<p>Click "Try it" to display the value of each element in the form.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("frm1");
  var text = "";
  var i;
  for (i = 0; i < x.length ;i++) {
    text += x.elements[i].value + "<br>";
  }
  document.getElementById("demo").innerHTML = text;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_form_elements by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction() {
  var x = document.getElementById("fname");
  x.value = x.value.toUpperCase();
}
</script>
</head>
<body>

<p>A function is triggered when the user releases a key in the input field. The function transforms the character to upper case.</p>
Enter your name: <input type="text" id="fname" onkeyup="myFunction()">

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onkeyup by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.reduce()</h2>
<p>This example finds the sum of all numbers in an array:</p>

<p id="demo"></p>

<script>
const numbers = [45, 4, 9, 16, 25];
let sum = numbers.reduce(myFunction, 100);

document.getElementById("demo").innerHTML = "The sum is " + sum;

function myFunction(total, value) {
  return total + value;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_reduce_initial by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>This &quot;home made&quot; isArray() function returns true when used on an array:</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple"];
document.getElementById("demo").innerHTML = isArray(fruits);

function isArray(myArray) {
  return myArray.constructor.toString().indexOf("Array") > -1;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_isarray by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.ceil()</h2>

<p>Math.ceil() rounds a number <strong>up</strong> to its nearest integer:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.ceil(4.4);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_ceil by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>Avoid using new Array().</p>

<p id="demo"></p>

<script>
var points = new Array(40);
document.getElementById("demo").innerHTML = points[0];  
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_new_error2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2> 
<h2>push()</h2>
<p>The push() method returns the new array length:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];

document.getElementById("demo1").innerHTML = fruits.push("Kiwi");
document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_push_length by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>
<p>Using Map.values():</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

let total = 0;
for (const x of fruits.values()) {
  total += x;
}

document.getElementById("demo").innerHTML = total;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_values1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<p>Variables can be emptied if you set the value to <b>undefined</b>.</p>

<p id="demo"></p>

<script>
let car = "Volvo";
car = undefined;

document.getElementById("demo").innerHTML = car + "<br>" + typeof car;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_undefined_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Functions can be invoked automatically without being called:</p>

<p id="demo"></p>

<script>
(function () {
  document.getElementById("demo").innerHTML = "Hello! I called myself";
})();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_expression_self by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getTime()</h2>
<p>The internal clock in JavaScript counts from midnight January 1, 1970.</p>
<p>The getTime() function returns the number of milliseconds since then:</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.getTime();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_gettime by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<script>
document.write(Date());
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date by HTTrack Website Copier/3.x [XR&CO'2014], Sun, 18 Apr 2021 18:54:03 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>

<h2>Get Text Content</h2>
<p id="01">Hello World!</p>
<p id="02">Hello Sweden!</p>
<p id="03">Hello Japan!</p>

<p id="demo"></p>

<script>
$(document).ready(function() {
  $("#02").hide();
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_hide by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Function</h2>

<p>This example shows the syntax of a function, without the use of arrow function syntax.</p>

<p id="demo"></p>

<script>
var hello;

hello = function() {
  return "Hello World!";
}

document.getElementById("demo").innerHTML = hello();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arrow_function1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Variables</h2>

<p id="demo"></p>

<script>
// Create and display a variable:
let car = "Fiat";
document.getElementById("demo").innerHTML = car;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_objects_variable by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p id="demo"></p>

<script>
const cars = [
  "Saab",
  "Volvo",
  "BMW"
];
document.getElementById("demo").innerHTML = cars;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_newlines by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>Array indexes are zero-based, which means the first item is [0].</p>

<p id="demo"></p>

<script>
const cars = ["Saab","Volvo","BMW"];

document.getElementById("demo").innerHTML = cars[0];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_array by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Operators</h2>

<p>In this example, y is incremented before it is assigned to x (pre-incremented).</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
var y = 5;
var x = ++y;
document.getElementById("demo1").innerHTML = y;
document.getElementById("demo2").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_incr by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
var x1 = {};
var x2 = "";
var x3 = 0;
var x4 = false;
var x5 = [];
var x6 = /()/;
var x7 = function(){};

document.getElementById("demo").innerHTML =
"x1: " + typeof x1 + "<br>" +
"x2: " + typeof x2 + "<br>" +
"x3: " + typeof x3 + "<br>" +
"x4: " + typeof x4 + "<br>" +
"x5: " + typeof x5 + "<br>" +
"x6: " + typeof x6 + "<br>" +
"x7: " + typeof x7 + "<br>";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_best by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<h3>The - Operator</h3>

<p id="demo"></p>

<script>
let x = 5;
let y = 2;
let z = x - y;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_sub by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>
<p>Objects as keys in a Map:</p>

<p id="demo"></p>

<script>
// Create Objects
const apples = {name: 'Apples'};
const bananas = {name: 'Bananas'};
const oranges = {name: 'Oranges'};

// Create a new Map
const fruits = new Map();

// Add the Objects to the Map
fruits.set(apples, 500);
fruits.set(bananas, 300);
fruits.set(oranges, 200);

// Display Object Type
document.getElementById("demo").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_create by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Maps</h2>
<p>Using Map.has():</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

// Delete an Element
fruits.delete("apples");

document.getElementById("demo").innerHTML = fruits.has("apples");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_has_deleted by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The padStart() method pads a string with another string:</p>

<p id="demo"></p>

<script>
let text = "5";
document.getElementById("demo").innerHTML = text.padStart(4,"0");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>

<p>Booleans can have two values: true or false:</p>

<p id="demo"></p>

<script>
let x = 5;
let y = 5;
let z = 6;

document.getElementById("demo").innerHTML =
(x == y) + "<br>" + (x == z);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_bolean by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
const cars = ["BMW", "Volvo", "Saab", "Ford"];

let i = 0;
let text = "";
for (;cars[i];) {
  text += cars[i] + "<br>";
  i++;
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loop_for_cars by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Performance</h2>

<p>If you expect to access a DOM element several times, access it once, and the use it as a local variable:</p>

<p id="demo"></p>

<script>
const obj = document.getElementById("demo");
obj.innerHTML = " Hello";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_element_reference by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript if .. else</h2>

<p>A time-based greeting:</p>

<p id="demo"></p>

<script>
const hour = new Date().getHours(); 
let greeting;

if (hour < 18) {
  greeting = "Good day";
} else {
  greeting = "Good evening";
}

document.getElementById("demo").innerHTML = greeting;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ifthenelse by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparisons</h2>

<p>Remove the comment (at the beginning of each line) to test each case:</p>

<p id="demo"></p>

<script>
let x;
//x = (0 == "");   // true
//x = (1 == "1");  // true
//x = (1 == true);   // true
//x = (0 === "");  // false
//x = (1 === "1");   // false
//x = (1 === true);  // false
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_best_comparison by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>The typeof operator returns the type of a variable or an expression.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
typeof "" + "<br>" +
typeof "John" + "<br>" + 
typeof "John Doe" + "<br>" +
typeof 0 + "<br>" +
typeof 314 + "<br>" +
typeof 3.14 + "<br>" +
typeof (3.14);
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_typeof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>"use strict" in a function will only cause errors in that function.</p>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
x = 3.14;    // This will not cause an error.
myFunction();

function myFunction() {
  "use strict";
  y = 3.14;  // This will cause an error (y is not defined).
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_local by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p><a id="myAnchor" hreflang="en-us" href="../index.html">W3Schools</a></p>

<p>Click the button to display the value of the hreflang attribute of the link above.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("myAnchor").hreflang;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_anchor_hreflang by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript toString()</h2>
<p>The toString() method converts a date to a string:</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.toString();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_tostring by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Callbacks</h2>

<p>Do a calculation and then display the result.</p>

<p id="demo"></p>

<script>
function myDisplayer(some) {
  document.getElementById("demo").innerHTML = some;
}

function myCalculator(num1, num2) {
  let sum = num1 + num2;
  myDisplayer(sum);
}

myCalculator(5, 5);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_callback8 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML DOM</h2>

<p>Finding HTML Elements by Query Selector</p>
<p class="intro">Hello World!.</p>
<p class="intro">This example demonstrates the <b>querySelectorAll</b> method.</p>

<p id="demo"></p>

<script>
const x = document.querySelectorAll("p.intro");
document.getElementById("demo").innerHTML = 
'The first paragraph (index 0) with class="intro" is: ' + x[0].innerHTML;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_queryselectorall by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>The JavaScript <i>this</i> Keyword</h1>

<button onclick="this.style.display='none'">Click to Remove Me!</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_this_event by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript try catch</h2>

<p>Please input a number between 5 and 10:</p>

<input id="demo" type="text">
<button type="button" onclick="myFunction()">Test Input</button>

<p id="p01"></p>

<script>
function myFunction() {
  const message = document.getElementById("p01");
  message.innerHTML = "";
  let x = document.getElementById("demo").value;
  try { 
    if(x == "")  throw "is empty";
    if(isNaN(x)) throw "is not a number";
    x = Number(x);
    if(x > 10)   throw "is too high";
    if(x < 5)  throw "is too low";
  }
  catch(err) {
    message.innerHTML = "Input " + err;
  }
  finally {
    document.getElementById("demo").value = "";
  }
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_finally_error by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>




END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>The JavaScript <i>this</i> Keyword</h1>
<p>In this example <strong>this</strong> refers to person2, even if it is a method of person1:</p>

<p id="demo"></p>

<script>
const person1 = {
  fullName: function() {
    return this.firstName + " " + this.lastName;
  }
}

const person2 = {
  firstName:"John",
  lastName: "Doe",
}

let x = person1.fullName.call(person2); 
document.getElementById("demo").innerHTML = x; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_this_call by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript can Change HTML</h2>

<p id="p1">Hello World!</p>

<script>
document.getElementById("p1").innerHTML = "New text!";
</script>

<p>The paragraph above was changed by a script.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_change_innerhtml by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>

<p id="demo"></p>

<script>
const d = new Date("25 Mar 2015");
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_string_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The <b>let</b> Keyword Creates Variables</h2>

<p id="demo"></p>

<script>
let x, y;
x = 5 + 6;
y = x * 10;
document.getElementById("demo").innerHTML = y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_syntax_let by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Finding HTML Elements by Id</h2>
<p id="id01">Hello World!</p>
<p id="id02">Hello Sweden!</p>
<p id="id03">Hello Japan!</p>

<p id="demo"></p>

<script>
const myElement = document.getElementById("id01");
document.getElementById("demo").innerHTML = "The text from the id01 paragraph is: " + myElement.innerHTML;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_dom_getelementbyid by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Data Types</h2>

<p>JavaScript has dynamic types. This means that the same variable can be used to hold different data types:</p>

<p id="demo"></p>

<script>
let x;         // Now x is undefined
x = 5;         // Now x is a Number
x = "John";    // Now x is a String

document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_dynamic by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML DOM</h2>

<p>Hello World!</p>

<p>Hello Norway!</p>

<p id="demo"></p>

<script>
const myCollection = document.getElementsByTagName("p");

document.getElementById("demo").innerHTML = "The innerHTML of the second paragraph is: " + myCollection[1].innerHTML;

</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_htmlcollection by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object.getOwnPropertyNames()</h2>

<p>This example list the properties of an object.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  language: "EN"
}

// Change Property
Object.defineProperty(person, "language", {enumerable:false});

// Display Properties
document.getElementById("demo").innerHTML = Object.getOwnPropertyNames(person);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_es5_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The XMLHttpRequest Object</h2>
<p>The getAllResponseHeaders() function returns all the header information of a resource, like length, server-type, content-type, last-modified, etc:</p>

<p id="demo"></p>

<script>
const xhttp = new XMLHttpRequest();
xhttp.onload = function() {
  document.getElementById("demo").innerHTML =
  this.getAllResponseHeaders();
}
xhttp.open("GET.html", "ajax_info.txt");
xhttp.send();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_header by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:00 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>One parameter will be interpreted as new Date(milliseconds).</p>

<p id="demo"></p>

<script>
const d = new Date(2018);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_numbers1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Make a drop down list based on JSON data.</h2>
<p id="demo"></p>

<script>
const dbParam = JSON.stringify({table:"customers",limit:20});
const xmlhttp = new XMLHttpRequest();
xmlhttp.onload = function() {
  const myObj = JSON.parse(this.responseText);
  let text = "<select>"
  for (let x in myObj) {
    text += "<option>" + myObj[x].name + "</option>";
  }
  text += "</select>"
  document.getElementById("demo").innerHTML = text;
}
xmlhttp.open("POST.html", "json_demo_html_table.json");
xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
xmlhttp.send("x=" + dbParam);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_html_select by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:38 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Function Rest Parameter</h2>

<p>The rest parameter (...) allows a function to treat an indefinite number of arguments as an array:</p>

<p id="demo"></p>

<script>
function sum(...args) {
  let sum = 0;
  for (let arg of args) sum += arg;
  return sum;
}

let x = sum(4, 9, 16, 25, 29, 100, 66, 77);

document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_rest by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Create a JSON string from a JavaScript array.</h2>
<p id="demo"></p>

<script>
const arr = ["John", "Peter", "Sally", "Jane"];
const myJSON = JSON.stringify(arr);
document.getElementById("demo").innerHTML = myJSON;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_stringify_array by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Getters and Setters</h2>

<p>Perfect for creating counters:</p>

<p id="demo"></p>

<script>
// Define an object
const obj = {counter : 0};

// Define Setters and Getters
Object.defineProperty(obj, "reset", {
  get : function () {this.counter = 0;}
});
Object.defineProperty(obj, "increment", {
  get : function () {this.counter++;}
});
Object.defineProperty(obj, "decrement", {
  get : function () {this.counter--;}
});
Object.defineProperty(obj, "add", {
  set : function (value) {this.counter += value;}
});
Object.defineProperty(obj, "subtract", {
  set : function (value) {this.counter -= value;}
});

// Play with counter:
obj.reset;
obj.add = 5;
obj.subtract = 1;
obj.increment;
obj.decrement;
document.getElementById("demo").innerHTML = obj.counter;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_accessors_set4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>Accessing a function without () will return the function definition instead of the function result:</p>
<p id="demo"></p>

<script>
function toCelsius(f) {
  return (5/9) * (f-32);
}
document.getElementById("demo").innerHTML = toCelsius;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_farenheit_to_celsius_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<script src="http://d3js.org/d3.v4.js"></script>
<body>
<h2>D3.js is Easy to Use</h2>
<p>The script below selects the body element and appends a paragraph with the text "Hello World!":</p> 

<script>
d3.select("body").append("p").text("Hello World!");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_d3js_element by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>ECMAScript 5 allows property acces on strings:</p>

<p id="demo"></p>

<script>
var str = "HELLO WORLD";
document.getElementById("demo").innerHTML = str[0];
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_string_prop by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>An object method is a function definition, stored as a property value.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  id: 5566,
  fullName: function() {
    return this.firstName + " " + this.lastName;
  }
};

// Display data from the object:
document.getElementById("demo").innerHTML = person.fullName();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_objects_method by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Scope</h2>

<p><b>carName</b> is undefined outside myFunction():</p>

<p id="demo1"></p>

<p id="demo2"></p>

<script>
myFunction();

function myFunction() {
  let carName = "Volvo";
  document.getElementById("demo1").innerHTML = typeof carName + " " + carName;
}

document.getElementById("demo2").innerHTML = typeof carName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_scope_local by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Iterables</h2>

<p id="demo"></p>

<script>
// Create an Object
myNumbers = {};

// Make it Iterable
myNumbers[Symbol.iterator] = function() {
  let n = 0;
  done = false;
  return {
    next() {
      n += 10;
      if (n == 100) {done = true}
      return {value:n, done:done};
    }
  };
}

// Create an Iterator
let iterator = myNumbers[Symbol.iterator]();

let text = ""
while (true) {
  const result = iterator.next();
  if (result.done) break;
  text += result.value +"<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_iterate_homemade3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Sets</h2>
<p>Create a Set from an Array:</p>

<p id="demo"></p>

<script>
// Create a Set
const letters = new Set(["a","b","c"]);

// Display set.size
document.getElementById("demo").innerHTML = letters.size;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_set_create_array by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Default Parameter Values</h2>

<p id="demo"></p>

<script>
function myFunction(x, y = 10) {
  // y is 10 if not passed or undefined
  return x + y;
}
document.getElementById("demo").innerHTML = myFunction(5);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_default by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>

<p id="demo"></p>

<script>
const d = new Date("Mar 25 2015");
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_string_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Class Static Methods</h2>

<p>A static method is created with the "static" keyword, and you can only call the method on the class itself.</p>

<p id="demo"></p>

<script>
class Car {
  constructor(name) {
    this.name = name;
  }
  static hello() {
    return "Hello!!";
  }
}

let myCar = new Car("Ford");

//You can call 'hello()' on the Car Class:
document.getElementById("demo").innerHTML = Car.hello();

// But NOT on  a Car Object:
// document.getElementById("demo").innerHTML = myCar.hello();
// this will raise an error.
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_class_static by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Declaring an Array Using const</h2>

<p id="demo"></p>

<script>
const cars = ["Saab", "Volvo", "BMW"];
// Here cars[0] is "Saab"
{  
  const cars = ["Toyota", "Volvo", "BMW"]; 
  // Here cars[0] is "Toyota"
}
// Here cars[0] is "Saab"
document.getElementById("demo").innerHTML = cars[0];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_const by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function writeMessage() {
  document.forms[0].mySecondInput.value = document.forms[0].myInput.value;
}
</script>
</head>
<body>

<p>The onkeyup event occurs when the a keyboard key is on its way UP.</p>

<form>
  Enter your name:
  <input type="text" name="myInput" onkeyup="writeMessage()" size="20">
  <input type="text" name="mySecondInput" size="20">
</form>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onkeyup2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Closures</h2>
<p>Counting with a local variable.</p>

<button type="button" onclick="myFunction()">Count!</button>

<p id="demo">0</p>

<script>
// Function to increment counter
function add() {
  let counter = 0;
  counter += 1;
  return counter;
}
// Trying to increment the counter
function myFunction(){
  document.getElementById("demo").innerHTML = add();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_closures3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>JavaScript objects cannot be compared:</p>

<p id="demo"></p>

<script>
// x is an object
let x = new Number(500);

// y is an object
let y = new Number(500);

document.getElementById("demo").innerHTML = (x==y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_object3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>Using new Date(), creates a new date object with the current date and time:</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Converting an array with one string element to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
var x = ["twenty"];
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_array_one_string by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
<body>

<canvas id="myChart" style="width:100%;max-width:600px"></canvas>

<script>
var xValues = ["Italy", "France", "Spain", "USA", "Argentina"];
var yValues = [55, 49, 44, 24, 15];
var barColors = ["red", "green","blue","orange","brown"];

new Chart("myChart", {
  type: "bar",
  data: {
    labels: xValues,
    datasets: [{
      backgroundColor: barColors,
      data: yValues
    }]
  },
  options: {
    legend: {display: false},
    title: {
      display: true,
      text: "World Wine Production 2018"
    }
  }
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_chartjs_bars_colors_more by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:31:40 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>My First Web Page</h2>
<p>My First Paragraph.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 5 + 6;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_output_dom by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Never Create Strings as Objects</h2>
<p>Strings and objects cannot be safely compared.</p>

<p id="demo"></p>

<script>
let x = "John";        // x is a string
let y = new String("John");  // y is an object
document.getElementById("demo").innerHTML = (x==y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_object1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>6 numbers specify year, month, day, hour, minute and second:</p>

<p id="demo"></p>

<script>
const d = new Date(2018, 11, 24, 10, 33, 30);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_numbers6 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Operators</h2>

<p>Adding a number and a string, returns a string.</p>

<p id="demo"></p>

<script>
let x = 5 + 5;
let y = "5" + 5;
let z = "Hello" + 5;
document.getElementById("demo").innerHTML =
x + "<br>" + y + "<br>" + z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_concat5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = "Date : " + Date();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_date by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<h3>The window.location object</h3>

<p id="demo"></p>

<p><b>Note: </b>If the port number is default (80 for http and 443 for https), most browsers will display 0 or nothing.</p>

<script>
document.getElementById("demo").innerHTML = 
"The URL port number of the current page is: " + window.location.port;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loc_port by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>The push method appends a new element to an array.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple"];
document.getElementById("demo").innerHTML = fruits;

function myFunction() {
  fruits.push("Lemon");
  document.getElementById("demo").innerHTML = fruits;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_add_push by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>

<h2>Finding HTML Elements by Id</h2>
<p id="id01">Hello World!</p>
<p id="id02">Hello Sweden!</p>
<p id="id03">Hello Japan!</p>

<p id="demo"></p>

<script>
$(document).ready(function() {
  var myElements = $("#id01");
  $("#demo").text("The text from the id01 paragraph is: " + myElements[0].innerHTML);
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_getelementbyid by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Infinity is a number:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = typeof Infinity;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_infinity_typeof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The XMLHttpRequest Object</h2>
<button type="button" onclick="loadDoc()">Request data</button>

<p id="demo"></p>
 
<script>
function loadDoc() {
  const xhttp = new XMLHttpRequest();
  xhttp.onload = function() {
    document.getElementById("demo").innerHTML = this.responseText;
  }
  xhttp.open("POST.html", "demo_post2.html");
  xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
  xhttp.send("fname=Henry&lname=Ford");
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_post2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:00 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.map()</h2>
<p>Creates a new array by performing a function on each array element.</p>

<p id="demo"></p>

<script>
const numbers1 = [45, 4, 9, 16, 25];
const numbers2 = numbers1.map(myFunction);

document.getElementById("demo").innerHTML = numbers2;

function myFunction(value) {
  return value * 2;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_map_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
const cars = ["BMW", "Volvo", "Saab", "Ford"];

let i = 0;
let text = "";
while (cars[i]) {
  text += cars[i] + "<br>";
  i++;
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loop_while_cars by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>JavaScript will try to convert strings to numbers when multiplying:</p>

<p id="demo"></p>

<script>
let x = "100";
let y = "10";
let z = x * y;   
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_string2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>Create an Array with two elements.</p>

<p id="demo"></p>

<script>
var points = new Array(40, 100);
document.getElementById("demo").innerHTML = points;  
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_new_array_two by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction() {
  document.getElementById("demo").innerHTML = "Hello World";
}
</script>
</head>
<body>

<p>Click the button to trigger a function.</p>

<button onclick="myFunction()">Click me</button>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onclick by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:10 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The Navigator Object</h2>

<p>The product property returns the product name of the browser.</p>

<p>Do not rely on it! Most browsers returns "Gecko" as product name!</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"navigator.product is " + navigator.product;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_nav_product by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1 id="myH"></h1>
<p id="myP"></p>

<script>
/*
The code below will change
the heading with id = "myH"
and the paragraph with id = "myP"
*/
document.getElementById("myH").innerHTML = "JavaScript Comments";
document.getElementById("myP").innerHTML = "My first paragraph.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comments2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript addEventListener()</h2>

<p>This example uses the addEventListener() method to attach a click event to a button.</p>

<button id="myBtn">Try it</button>

<p id="demo"></p>

<script>
document.getElementById("myBtn").addEventListener("click", displayDate);

function displayDate() {
  document.getElementById("demo").innerHTML = Date();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_displaydate by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h1>JavaScript Objects</h1>
<h2>The fromEntries() Method</h2>

<p>The number of pears are:</p>
<p id="demo"></p>

<script>
const fruits = [
["apples", 300],
["pears", 900],
["bananas", 500]
];

const myObj = Object.fromEntries(fruits);
document.getElementById("demo").innerHTML = myObj.pears;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_fromentries by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>Writing to a read-only property is not allowed.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
const obj = {};
Object.defineProperty(obj, "x", {value:0, writable:false});

obj.x = 3.14;   // This will cause an error
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_readonly by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Converting an array with two string element to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
var x = ["ten","twenty"];
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_array_two_strings by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form name="Form1"></form>
<form name="Form2"></form>
<form name="Form3"></form>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"The name of the first for is " + document.forms[0].name;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_forms2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>
<p>Line-breaks in a popup box.</p>

<button onclick="alert('Hello\nHow are you?')">Try it</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_alert2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
<body>
<canvas id="myChart" style="width:100%;max-width:600px"></canvas>

<script>
var xValues = [100,200,300,400,500,600,700,800,900,1000];

new Chart("myChart", {
  type: "line",
  data: {
    labels: xValues,
    datasets: [{ 
      data: [860,1140,1060,1060,1070,1110,1330,2210,7830,2478],
      borderColor: "red",
      fill: false
    }, { 
      data: [1600,1700,1700,1900,2000,2700,4000,5000,6000,7000],
      borderColor: "green",
      fill: false
    }, { 
      data: [300,700,2000,5000,6000,4000,2000,1000,200,100],
      borderColor: "blue",
      fill: false
    }]
  },
  options: {
    legend: {display: false}
  }
});
</script>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form id="frm1" name="form1" action="https://www.w3schools.com/action_page.php">
  First name: <input type="text" name="fname" value="Donald"><br>
  Last name: <input type="text" name="lname" value="Duck"><br><br>
  <input type="submit" value="Submit">
</form>

<p>Click "Try it" to display the name of the form:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("frm1").name;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_form_name by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Web Workers API</h2>
<p>Count numbers: <output id="result"></output></p>
<button onclick="startWorker()">Start Worker</button> 
<button onclick="stopWorker()">Stop Worker</button>

<script>
let w;

function startWorker() {
  if(typeof(w) == "undefined") {
    w = new Worker("demo_workers.js");
  }
  w.onmessage = function(event) {
    document.getElementById("result").innerHTML = event.data;
  };
}

function stopWorker() { 
  w.terminate();
  w = undefined;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_webworker by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.cbrt()</h2>

<p>Math.cbrt(x) returns the cube root of x:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.cbrt(8);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_cbrt by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getMinutes()</h2>
<p>The getMinutes() method returns the minutes of a date as a number (0-59):</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.getMinutes();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_getminutes by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
(5 + null) + "<br>"  +
("5" + null) + "<br>" +
("5" + 2) + "<br>" +
("5" - 2) + "<br>" +
("5" * "2") + "<br>" +
("5" / "2") + "<br>"
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_auto by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>For security reasons, eval() is not allowed to create variables in the scope from which it was called.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
eval ("x = 2");
alert (x);      // This will cause an error 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_eval4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>JavaScript objects are mutable.</p>
<p>Any changes to a copy of an object will also change the original object:</p>

<p id="demo"></p>

<script>
const person = {
  firstName: "John",
  lastName: "Doe",
  age:50,
  eyeColor: "blue"
};

const x = person;
x.age = 10;

document.getElementById("demo").innerHTML =
person.firstName + " is " + person.age + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_mutable by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The substr() method extract a part of a string
and returns the extracted parts in a new string:</p>

<p id="demo"></p>

<script>
let str = "Apple, Banana, Kiwi";
document.getElementById("demo").innerHTML = str.substr(7,6);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_substr by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = "2" > "12";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_27 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<p>A typical arithmetic operation takes two numbers (or expressions) and produces a new number.</p>

<p id="demo"></p>

<script>
let a = 3;
let x = (100 + 50) * a;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arithmetic_expressions by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The search() method returns the position of the first occurrence of a specified text in a string:</p>

<p id="demo"></p>

<script>
let str = "Please locate where 'locate' occurs!";
document.getElementById("demo").innerHTML = str.search("locate");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_search_locate by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p id="demo"></p>

<script>
const cars = ["Saab", "Volvo", "BMW"];
document.getElementById("demo").innerHTML = cars;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>My First Web Page</h2>
<p>My first paragraph.</p>

<script>
window.alert(5 + 6);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_output_alert by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Errors</h2>

<p>You cannot evaluate code that contains a syntax error:</p>

<p id="demo"></p>

<script>
try {
  eval("alert('Hello)");
}
catch(err) {
  document.getElementById("demo").innerHTML = err.name;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_error_syntaxerror by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Nested JavaScript Objects and Arrays.</h2>
<p id="demo"></p>

<script>
let x = "";
const myObj = {
  name: "John",
  age: 30,
  cars: [
    {name:"Ford", models:["Fiesta", "Focus", "Mustang"]},
    {name:"BMW", models:["320", "X3", "X5"]},
    {name:"Fiat", models:["500", "Panda"]}
  ]
}

for (let i in myObj.cars) {
  x += "<h2>" + myObj.cars[i].name + "</h2>";
  for (let j in myObj.cars[i].models) {
    x += myObj.cars[i].models[j] + "<br>";
  }
}

document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_nested by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript setDate()</h2>
<p>The setDate() method sets the day of a date object:</p>

<p id="demo"></p>

<script>
const d = new Date();
d.setDate(15);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_setdate by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.forEach()</h2>

<p>Calls a function once for each array element.</p>

<p id="demo"></p>

<script>
var txt = "";
var numbers = [45, 4, 9, 16, 25];
numbers.forEach(myFunction);
document.getElementById("demo").innerHTML = txt;

function myFunction(value) {
  txt = txt + value + "<br>"; 
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_array_foreach by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.map()</h2>
<p>Creates a new array by performing a function on each array element.</p>

<p id="demo"></p>

<script>
const numbers1 = [45, 4, 9, 16, 25];
const numbers2 = numbers1.map(myFunction);

document.getElementById("demo").innerHTML = numbers2;

function myFunction(value, index, array) {
  return value * 2;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_map by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getHours()</h2>
<p>The getHours() method returns the hours of a date as a number (0-23):</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.getHours();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_getHours by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML DOM</h2>
<p>Finding HTML Elements Using <b>document.forms</b>.</p>

<form id="frm1" action="https://www.w3schools.com/action_page.php">
  First name: <input type="text" name="fname" value="Donald"><br>
  Last name: <input type="text" name="lname" value="Duck"><br><br>
  <input type="submit" value="Submit">
</form> 

<p>These are the values of each element in the form:</p>

<p id="demo"></p>

<script>
const x = document.forms["frm1"];
let text = "";
for (let i = 0; i < x.length ;i++) {
  text += x.elements[i].value + "<br>";
}
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_form_elements by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"Available screen width is " + screen.availWidth;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_screen_availwidth by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function bigImg(x) {
  x.style.height = "64px";
  x.style.width = "64px";
}

function normalImg(x) {
  x.style.height = "32px";
  x.style.width = "32px";
}
</script>
</head>
<body>

<img onmouseover="bigImg(this)" onmouseout="normalImg(this)" border="0" src="smiley.gif" alt="Smiley" width="32" height="32">

<p>The function bigImg() is triggered when the user moves the mouse pointer over the image.</p>
<p>The function normalImg() is triggered when the mouse pointer is moved out of the image.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onmouseover by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript setDate()</h2>
<p>The setDate() method can be used to add days to a date.</p>

<p id="demo"></p>

<script>
const d = new Date();
d.setDate(d.getDate() + 50);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_ahead by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction() {
  alert("Thank you for visiting W3Schools!");
}
</script>
</head>
<body onunload="myFunction()">

<h2>Welcome to my Home Page</h2>
<p>Close this window or press F5 to reload the page.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onunload by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Operators</h2>

<p>In this example, y is decremented before it is assigned to x (pre-decremented).</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
var y = 5;
var x = --y;
document.getElementById("demo1").innerHTML = y;
document.getElementById("demo2").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_decr by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>Variables created without a declaration keyword (var, let, or const) are always global,
even if they are created inside a function.:</p>

<p id="demo"></p>

<script>
myFunction();
document.getElementById("demo").innerHTML = a * a;

function myFunction() {
  a = 4;
} 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_scope4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>

<body>

<h2>JavaScript String Methods</h2>

<p>Replace &quot;Microsoft&quot; with &quot;W3Schools&quot; in the paragraph below:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo">Please visit Microsoft!</p>

<script>
function myFunction() {
  let text = document.getElementById("demo").innerHTML;
  document.getElementById("demo").innerHTML =
  text.replace("Microsoft","W3Schools");
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTMLDOM</h2>
<p>Displaying document.body</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = document.body.innerHTML;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_body by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Finding HTML Elements Using document.anchors</h2>

<a name="html">HTML Tutorial</a><br>
<a name="css">CSS Tutorial</a><br>
<a name="xml">XML Tutorial</a><br>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"Number of anchors are: " + document.anchors.length;
</script>


</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_anchors by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getSeconds()</h2>
<p>The getSeconds() method returns the seconds of a date as a number (0-59):</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.getSeconds();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_getseconds by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getSeconds()</h2>
<p>The getSeconds() method returns the seconds of a date as a number (0-59):</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.getSeconds();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_getSeconds by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function whichElement(e) {
  var targ;
  if (!e) {
    var e = window.event;
  }
  if (e.target) {
    targ=e.target;
  } else if (e.srcElement) {
    targ=e.srcElement;
  }
  var tname;
  tname = targ.tagName;
  alert("You clicked on a " + tname + " element.");
}
</script>
</head>
<body onmousedown="whichElement(event)">

<p>Click somewhere in the document. An alert box will alert the name of the element you clicked on.</p>
<h3>This is a heading</h3>
<img border="0" src="smiley.gif" alt="Smiley" width="32" height="32">
<p>This is a paragraph.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_srcelement by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Breaking a JavaScript Statement</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"Hello World!";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_string_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>Global functions automatically become window methods. Invoking myFunction() is the same as invoking window.myFunction().</p>

<p id="demo"></p>

<script>
function myFunction(a, b) {
  return a * b;
}
document.getElementById("demo").innerHTML = window.myFunction(10, 2); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_invoke_function_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Show HTML Elements</h2>
<p id="01" style="display:none">Hello World!</p>
<p id="02" style="display:none">Hello Sweden!</p>
<p id="03" style="display:none">Hello Japan!</p>

<script>
document.getElementById("02").style.display = "";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_style_show by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h1>JavaScript Modules</h1>

<p id="demo"></p>

<script type="module">
import message from "./message.js";

document.getElementById("demo").innerHTML = message();

</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_modules2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort Reverse</h2>

<p>The reverse() method reverses the elements in an array.</p>
<p>By combining sort() and reverse() you can sort an array in descending order:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
// Create and display an array:
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = fruits;

// First sort the array
fruits.sort();

// Then reverse it:
fruits.reverse();

document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort_reverse by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo">Clock</p>

<button onclick="clearInterval(myTimer)">Stop</button>

<script>
var myTimer = setInterval(myClock, 1000);
function myClock() {
  document.getElementById("demo").innerHTML = new Date().toLocaleTimeString();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_setinterval by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:13 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML Events</h2>
<p>Click the button to display the date.</p>

<button onclick="displayDate()">The time is?</button>

<script>
function displayDate() {
  document.getElementById("demo").innerHTML = Date();
}
</script>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form id="frm1" action="https://www.w3schools.com/action_page.php" method="post">
  First name: <input type="text" name="fname" value="Donald"><br>
  Last name: <input type="text" name="lname" value="Duck"><br><br>
  <input type="submit" value="Submit">
</form>

<p>Click "Try it" to display the value of the enctype attribute of the form:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("frm1").enctype;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_form_enctype by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p id="demo"></p>

<script>
const person = [];
person[0] = "John";
person[1] = "Doe";
person[2] = 46; 
document.getElementById("demo").innerHTML =
person[0] + " " + person.length;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_associative_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>4 numbers specify year, month, day, and hour:</p>

<p id="demo"></p>

<script>
const d = new Date(2018, 11, 24, 10);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_numbers4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<button onClick="setInterval(myCounter, 1000)">Start counter!</button>

<p id="demo">Click on the button above and I will count forever.</p>

<script>
var c = 0;
function myCounter() {
  document.getElementById("demo").innerHTML = ++c;
}
</script> 

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_timing_infinite by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:13 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.some()</h2>
<p>The some() method checks if some array values pass a test.</p>

<p id="demo"></p>

<script>
const numbers = [45, 4, 9, 16, 25];
let someOver18 = numbers.some(myFunction);

document.getElementById("demo").innerHTML = "Some over 18 is " + someOver18;

function myFunction(value, index, array) {
  return value > 18;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_some by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<iframe id="myframe" src="../default.html"></iframe>

<p>Click the button to display the value of the src attribute in the iframe.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("myframe").src;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_iframe_src by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:06 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>Strings are written inside quotes. You can use single or double quotes:</p>

<p id="demo"></p>

<script>
let carName1 = "Volvo XC60"; // Double quotes
let carName2 = 'Volvo XC60'; // Single quotes

document.getElementById("demo").innerHTML =
carName1 + " " + carName2; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_quotes by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The slice() method extract a part of a string
and returns the extracted parts in a new string:</p>

<p id="demo"></p>

<script>
let str = "Apple, Banana, Kiwi";
document.getElementById("demo").innerHTML = str.slice(7);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_slice_rest by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Sets</h2>
<p>Add values to a Set:</p>

<p id="demo"></p>

<script>
// Create a Set
const letters = new Set();

// Add Values to the Set
letters.add("a");
letters.add("b");
letters.add("c");

// Display set.size
document.getElementById("demo").innerHTML = letters.size;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_set_create_values by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>
<p>Being able to use objects as keys is an important Map feature:</p>

<p id="demo"></p>

<script>
// Create Objects
const apples = {name: 'Apples'};
const bananas = {name: 'Bananas'};
const oranges = {name: 'Oranges'};

// Create a Map
const fruits = new Map();

// Add the Objects to the Map
fruits.set(apples, 500);
fruits.set(bananas, 300);
fruits.set(oranges, 200);

document.getElementById("demo").innerHTML = fruits.get(apples);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_create_objects by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Extra large or extra small numbers can be written with scientific (exponent) notation:</p>

<p id="demo"></p>

<script>
let x = 123e5;
let y = 123e-5;
document.getElementById("demo").innerHTML = x + "<br>" + y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Class Setter</h2>

<p>When using a setter to set a property value, you do not use parantheses.</p>

<p id="demo"></p>

<script>
class Car {
  constructor(brand) {
    this._carname = brand;
  }
  set carname(x) {
    this._carname = x;
  }
  get carname() {
    return this._carname;
  }
}

let myCar = new Car("Ford");
myCar.carname = "Volvo";
document.getElementById("demo").innerHTML = myCar.carname;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_classes_setter by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>A common mistake is to expect this result to be 102030:</p>

<p id="demo"></p>

<script>
let x = 10;
let y = 20;
let z = "30";
let result = x + y + z;
document.getElementById("demo").innerHTML = result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_add_strings4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>In this example the fulllName method of person is <b>applied</b> on person1:</p>

<p id="demo"></p>

<script>
const person = {
  fullName: function() {
    return this.firstName + " " + this.lastName;
  }
}

const person1 = {
  firstName:"John",
  lastName: "Doe"
}

document.getElementById("demo").innerHTML = person.fullName.apply(person1); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_apply by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Iterables</h2>
<p>Iterate over a Map:</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

// List all entries
let text = "";
for (const x of fruits) {
  text += x + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_iterate_map by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Click the button to perfom a global (/g) search for the letters "ain" (/ain) in a string, and display the matches.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var str = "The rain in SPAIN stays mainly in the plain"; 
  var res = str.match(/ain/g);
  document.getElementById("demo").innerHTML = res;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_match by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<canvas id="myCanvas" width="400" height="400" style="border:1px solid grey"></canvas>

<script>
const canvas = document.getElementById("myCanvas");
const ctx = canvas.getContext("2d");
ctx.fillStyle = "#FF0000";
canvas.height = canvas.width;
ctx.transform(1, 0, 0, -1, 0, canvas.height)

let xMax = canvas.height;
let yMax = canvas.width;
let slope = 1.2;
let intercept = 70;

const xArray = [50,60,70,80,90,100,110,120,130,140,150];
const yArray = [7,8,8,9,9,9,10,11,14,14,15];

// Plot Scatter
ctx.fillStyle = "red";
for (let i = 0; i < xArray.length-1; i++) {
  let x = xArray[i]*xMax/150;
  let y = yArray[i]*yMax/15;
  ctx.beginPath();
  ctx.ellipse(x, y, 3, 3, 0, 0, Math.PI * 2);
  ctx.fill();
}

// Plot Line
ctx.moveTo(0, intercept);
ctx.lineTo(xMax, f(xMax));
ctx.strokeStyle = "black";
ctx.stroke();

// Line Function<br>
function f(x) {
  return x * slope + intercept;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_canvas_combined by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img id="img1" src="pic_htmltree.gif">
<img id="img2" src="pic_navigate.gif">

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"The id of the first image is " + document.images[0].id;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_images2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>In this example, x, y, and z are undeclared variables.</p>

<p id="demo"></p>

<script>
x = 5;
y = 6;
z = x + y;
document.getElementById("demo").innerHTML =
"The value of z is: " + z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_undeclared by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Sign Preserving Bitwise Right.</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = -5 >> 1;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_bitwise_right_sign by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Display the Boolean value of 0:</p>

<p id="demo"></p>

<script>
let x = 0;
document.getElementById("demo").innerHTML = Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_boolean_zero by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
var x = 5;  // Initialize x

elem = document.getElementById("demo");      // Find an element 
elem.innerHTML = "x is " + x + " and y is " + y;  // Display x and y

var y = 7;  // Initialize y
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_hoisting3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>The value of <b>this</b>, in an object method, is the owner object.</p>

<p id="demo"></p>

<script>
const myObject = {
  firstName:"John",
  lastName: "Doe",
  fullName: function() {
    return this;
  }
}
document.getElementById("demo").innerHTML = myObject.fullName();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_invoke_method_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>
<p>Convert string to upper case:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo">Hello World!</p>

<script>
function myFunction() {
  let text = document.getElementById("demo").innerHTML;
  document.getElementById("demo").innerHTML =
  text.toUpperCase();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_toupper by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function imgError() {
  alert('The image could not be loaded.');
}
</script>
</head>
<body>

<img src="image.html" onerror="imgError()">
<p>A function is triggered if an error occurs when loading the image. The function shows an alert box with a text.
In this example we refer to an image that does not exist, therefore the onerror event occurs.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onerror by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>ECMAScript 5 allows property access on strings:</p>

<p id="demo"></p>

<script>
var str = "HELLO WORLD";
document.getElementById("demo").innerHTML = str[0];
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_prop by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
localStorage.setItem("name","John Doe");
document.getElementById("demo").innerHTML = localStorage.getItem("name");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_api_storage_example by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>

<p id="demo"></p>

<script>
function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
}

Person.prototype.name = function() {
  return this.firstName + " " + this.lastName
};

const myFather = new Person("John", "Doe", 50, "blue");
document.getElementById("demo").innerHTML =
"My father is " + myFather.name(); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_prototype6 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrow Function</h2>

<p>This example shows the syntax of an Arrow Function, and how to use it.</p>

<p id="demo"></p>

<script>
let myFunction = (a, b) => a * b;
document.getElementById("demo").innerHTML = myFunction(4, 5);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arrow_function by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function disable() {
  document.getElementById("mySelect").disabled=true;
}
function enable() {
  document.getElementById("mySelect").disabled=false;
}
</script>
</head>
<body>

<form>
<select id="mySelect">
  <option>Apple</option>
  <option>Pear</option>
  <option>Banana</option>
  <option>Orange</option>
</select>
<br><br>
<input type="button" onclick="disable()" value="Disable list">
<input type="button" onclick="enable()" value="Enable list">
</form>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=try_dom_select_disabled by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JSON.stringify() will remove any functions from an object.</h2>
<p>Convert functions into strings to keep them in the JSON object.</p>

<p id="demo"></p>

<script>
const obj = {name: "John", age: function () {return 30;}, city: "New York"};
obj.age = obj.age.toString();
const myJSON = JSON.stringify(obj);
document.getElementById("demo").innerHTML = myJSON;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_stringify_function_tostring by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p id="demo"></p>

<script>
const cars = [];
cars[0]= "Saab";
cars[1]= "Volvo";
cars[2]= "BMW";
document.getElementById("demo").innerHTML = cars;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_add_elements by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript addEventListener()</h2>

<p>This example uses the addEventListener() method on the window object.</p>

<p>Try resizing this browser window to trigger the "resize" event handler.</p>

<p id="demo"></p>

<script>
window.addEventListener("resize", function(){
  document.getElementById("demo").innerHTML = Math.random();
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_dom by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<h3>The ++ Operator</h3>

<p id="demo"></p>

<script>
let x = 5;
x++;
let z = x;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_increment by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.cos()</h2>

<p>Math.cos(x) returns the cosine of x (given in radians):</p>
<p>Angle in radians = (angle in degrees) * PI / 180.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"The cosine value of 0 degrees is " + Math.cos(0 * Math.PI / 180);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_cos by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Variables</h2>

<p>Subtracting a string from a string, does not generate an error but returns NaN (Not a Number):</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = "Hello" - "Dolly";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_best_string_op1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction() {
  document.getElementById("demo").innerHTML = "Paragraph changed.";
}
</script>
</head>
<body>

<h2>Demo JavaScript in Head</h2>

<p id="demo">A Paragraph.</p>

<button type="button" onclick="myFunction()">Try it</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_whereto_head by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:31 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript async / await</h2>

<p id="demo"></p>

<script>
async function getFile() {
  let myPromise = new Promise(function(resolve) {
    let req = new XMLHttpRequest();
    req.open('GET.html', "mycar.html");
    req.onload = function() {
      if (req.status == 200) {
        resolve(req.response);
      } else {
        resolve("File not Found");
      }
    };
    req.send();
  });
  document.getElementById("demo").innerHTML = await myPromise;
}

getFile();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_async2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Request JSON using the script tag</h2>
<p>The PHP file returns a call to a function that will handle the JSON data.</p>
<p id="demo"></p>

<script>
function myFunc(myObj) {
  document.getElementById("demo").innerHTML = myObj.name;
}
</script>

<script src="demo_jsonp.html"></script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_jsonp by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:39 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript async / await</h2>

<h1 id="demo"></h1>

<script>
async function myDisplay() {
  let myPromise = new Promise(function(resolve, reject) {
    resolve("I love You !!");
  });
  document.getElementById("demo").innerHTML = await myPromise;
}

myDisplay();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_async3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
var x = 5; // Initialize x
var y;   // Declare y

elem = document.getElementById("demo"); // Find an element 
elem.innerHTML = x + " " + y;       // Display x and y

y = 7;   // Assign 7 to y

</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_hoisting5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Class Gettter/Setter</h2>

<p>Using an underscore character is common practice when using getters/setters in JavaScript, but not mandatory, you can name them anything you like, but not the same as the property name.</p>

<p id="demo"></p>

<script>
class Car {
  constructor(brand) {
    this._carname = brand;
  }
  get carname() {
    return this._carname;
  }
  set carname(x) {
    this._carname = x;
  }
}

let myCar = new Car("Ford");

document.getElementById("demo").innerHTML = myCar.carname;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_classes_getters2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>My First Web Page</h2>

<p>Activate debugging in your browser (Chrome, IE, Firefox) with F12, and select "Console" in the debugger menu.</p>

<script>
a = 5;
b = 6;
c = a + b;
console.log(c);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_console by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>JavaScript array elements are accesses using numeric indexes (starting from 0).</p>

<p id="demo"></p>

<script>
var fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = fruits[fruits.length-1];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_last by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Validation</h2>

<form action="https://www.w3schools.com/action_page.php" method="post">
  <input type="text" name="fname" required>
  <input type="submit" value="Submit">
</form>

<p>If you click submit, without filling out the text field,
your browser will display an error message.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_validation_html by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>This example calls a function which performs a calculation and returns the result:</p>

<p id="demo"></p>

<script>
var x = myFunction(4, 3);
document.getElementById("demo").innerHTML = x;

function myFunction(a, b) {
  return a * b;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_return by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Assign 5 to x, and display the value of the comparison (x &gt;= 8).</p>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = (x >= 8);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison10 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function printPage() {
  window.print();
}
</script>
</head>
<body>

<input type="button" value="Print this page" onclick="printPage()" />

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_print by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Iterables</h2>
<p>Home Made Iterable:</p>

<p id="demo"></p>

<script>
// Home Made Iterable
function myNumbers() {
  let n = 0;
  return {
    next: function() {
      n += 10;
      return {value:n, done:false};
    }
  };
}

// Create Iterable
const n = myNumbers();
n.next(); // 10
n.next(); // 20
n.next(); // 30

document.getElementById("demo").innerHTML = n.next().value;
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_iterate_homemade by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form id="frm1" accept-charset="ISO-8859-1">
  First name: <input type="text" name="fname" value="Donald"><br>
  Last name: <input type="text" name="lname" value="Duck"><br>
</form>

<p>Click "Try it" to display accept-charset of the form:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("frm1").acceptCharset;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_form_acceptcharset by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>
<p>Sort car objects on age:</p>

<p id="demo"></p>

<script>
const cars = [
  {type:"Volvo", year:2016},
  {type:"Saab", year:2001},
  {type:"BMW", year:2010}
];

displayCars();

cars.sort(function(a, b){return a.year - b.year});
displayCars();

function displayCars() {
  document.getElementById("demo").innerHTML =
  cars[0].type + " " + cars[0].year + "<br>" +
  cars[1].type + " " + cars[1].year + "<br>" +
  cars[2].type + " " + cars[2].year;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort_object1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>3 numbers specify year, month, and day:</p>

<p id="demo"></p>

<script>
const d = new Date(2018, 11, 24);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_numbers3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>What Can JavaScript Do?</h2>

<p>JavaScript can change HTML attribute values.</p>

<p>In this case JavaScript changes the value of the src (source) attribute of an image.</p>

<button onclick="document.getElementById('myImage').src='pic_bulbon.gif'">Turn on the light</button>

<img id="myImage" src="pic_bulboff.gif" style="width:100px">

<button onclick="document.getElementById('myImage').src='pic_bulboff.gif'">Turn off the light</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_intro_lightbulb by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:31 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Errors</h2>

<p>You cannot convert a number to upper case:</p>

<p id="demo"></p>

<script>
let num = 1;
try {
  num.toUpperCase();
}
catch(err) {
  document.getElementById("demo").innerHTML = err.name;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_error_typeerror by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Search</h2>

<p>Check if a string includes "world":</p>

<p id="demo"></p>

<p>The includes() method is not supported in Internet Explorer.</p>

<script>
let text = "Hello world, welcome to the universe.";
document.getElementById("demo").innerHTML = text.includes("world", 12);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_includes2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h1>JavaScript Arrays</h1>
<h2>The flat() Method</h2>

<p id="demo"></p>

<script>
const myArr = [[1,2],[3,4],[5,6]];

const newArr = myArr.flat();
document.getElementById("demo").innerHTML = newArr;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_flat by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.random()</h2>

<p id="demo"></p>

<script>
let text;
if (Math.random() < 0.5) {
  text = "<a href='../index.html'>Visit W3Schools</a>";
} else {
  text = "<a href='https://wwf.org/'>Visit WWF</a>";
}
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_randomlink by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>The result of adding 2 + 3 + "5" is:</p>
<p id="demo"></p>

<script>
let x = 2 + 3 + "5";
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_add_number_string by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1 onmouseover="style.color='red'"
onmouseout="style.color='black'">
Mouse over this text</h1>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_event_onmouse by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Template Literals</h2>

<p>Template literals allows multiline strings:</p>

<p id="demo"></p>

<p>Template literals are not supported in Internet Explorer.</p>

<script>
let text =

`The quick
brown fox
jumps over
the lazy dog`;

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_templates_multiline by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Sets</h2>
<p>Iterating Set values:</p>

<p id="demo"></p>

<script>
// Create a Set
const letters = new Set(["a","b","c"]);

// List all Elements
let text = "";
for (const x of letters.values()) {
  text += x + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_set_iterator by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Number can be written with or without decimals.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 10.50;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_syntax_numbers by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comments</h2>

<p id="demo"></p>

<script>
let x = 5;      // Declare x, give it the value of 5
let y = x + 2;  // Declare y, give it the value of x + 2 

// Write y to demo:
document.getElementById("demo").innerHTML = y;
</script>


</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comments5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>Replace all occurrences of "Microsoft" with "W3Schools" in the paragraph below:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo">Please visit Microsoft and Microsoft!</p>

<script>
function myFunction() {
  let text = document.getElementById("demo").innerHTML; 
  document.getElementById("demo").innerHTML =
  text.replace(/Microsoft/g,"W3Schools");
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace_global by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"The temperature is " + toCelsius(77) + " Celsius";

function toCelsius(fahrenheit) {
  return (5/9) * (fahrenheit-32);
} 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_variable by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>Duplicating a parameter name is not allowed.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
function x(p1, p1) {};   // This will cause an error 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_duplicate by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Assignments</h2>
<h3>The /= Operator</h3>

<p id="demo"></p>

<script>
let x = 10;
x /= 5;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_assign_divequal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML DOM</h2>

<p id="intro">Finding HTML Elements by Id</p>
<p>This example demonstrates the <b>getElementsById</b> method.</p>

<p id="demo"></p>

<script>
const element = document.getElementById("intro");

document.getElementById("demo").innerHTML = 
"The text from the intro paragraph is: " + element.innerHTML;

</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_getelementbyid by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>Check in the 11 first characters of a string ends with "world":</p>

<p id="demo"></p>

<p>The endsWith() method is not supported in Internet Explorer.</p>

<script>
let text = "Hello world, welcome to the universe.";
document.getElementById("demo").innerHTML = text.endsWith("world", 11);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_endswith2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Loops</h2>

<p>A loop with a <b>continue</b> statement.</p>

<p>A loop which will skip the step where i = 3.</p>

<p id="demo"></p>

<script>
let text = "";
for (let i = 0; i < 10; i++) {
  if (i === 3) { continue; }
  text += "The number is " + i + "<br>";
}
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_continue by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>

<script>
function bgChange(bg) {
  document.body.style.background = bg;
}
</script>
</head>
<body>

<h2>Change background color</h2>
<p>Mouse over the squares!</p>

<table style="width:300px;height:100px">
  <tr>
    <td onmouseover="bgChange(this.style.backgroundColor)" 
    onmouseout="bgChange('transparent')"
    style="background-color:Khaki">
    </td>
    <td onmouseover="bgChange(this.style.backgroundColor)" 
    onmouseout="bgChange('transparent')"
    style="background-color:PaleGreen">
    </td>
    <td onmouseover="bgChange(this.style.backgroundColor)" 
    onmouseout="bgChange('transparent')"
    style="background-color:Silver">
    </td>
  </tr>
</table>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_css_bgcolor by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Variables</h2>

<p>A variable can chang its type. In this example x is first a string then a number:</p>

<p id="demo"></p>

<script>
let x = "Hello";
x = 5;
document.getElementById("demo").innerHTML = typeof x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_best_typeof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.every()</h2>
<p>The every() method checks if all array values pass a test.</p>

<p id="demo"></p>

<script>
const numbers = [45, 4, 9, 16, 25];
let allOver18 = numbers.every(myFunction);

document.getElementById("demo").innerHTML = "All over 18 is " + allOver18;

function myFunction(value, index, array) {
  return value > 18;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_every by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Never Create Strings as Objects</h2>
<p>JavaScript objects cannot be compared.</p>

<p id="demo"></p>

<script>
let x = new String("John");  // x is an object
let y = new String("John");  // y is an object
document.getElementById("demo").innerHTML = (x==y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_object3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML DOM</h2>

<p>Hellow World!</p>

<p>Hellow Norway!</p>

<p id="demo"></p>

<script>
const myNodelist = document.querySelectorAll("p");

document.getElementById("demo").innerHTML = "This document contains " + myNodelist.length + " paragraphs.";

</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nodelist_length by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<p>Multiplication has precedence over addition.</p>
<p>But parenthesis has precedence over multiplication.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = (100 + 50) * 3;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arithmetic_precedence2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 2 < "John";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_23 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The indexOf() method accepts a second parameter as the starting position for the search:</p>

<p id="demo"></p>

<script>
let str = "Please locate where 'locate' occurs!";
document.getElementById("demo").innerHTML = str.indexOf("locate",15);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_indexof_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<iframe id="myframe" src="../default.html" height="200" width="250">
<p>Your browser does not support iframes.</p>
</iframe>

<p>Click the button to display the height of the iframe.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("myframe").height;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_iframe_height by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:06 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.log()</h2>

<p>Math.log() returns the natural logarithm of a number:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.log(2);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_log_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Access nested objects:</p>

<p id="demo"></p>

<script>
const myObj = {
  name: "John",
  age: 30,
  cars: {
  car1: "Ford",
  car2: "BMW",
  car3: "Fiat"
  }
}
document.getElementById("demo").innerHTML = myObj["cars"]["car2"];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_nested3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Sets Objects</h2>
<p>The typeof operator returns object:</p>

<p id="demo"></p>

<script>
// Create a new Set
const letters = new Set(["a","b","c"]);

// Display typeof
document.getElementById("demo").innerHTML = typeof letters;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_set_typeof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction() {
  var x = document.getElementById("fname");
  x.value = x.value.toUpperCase();
}
</script>
</head>
<body>

Enter your name: <input type="text" id="fname" onblur="myFunction()">

<p>When you leave the input field, a function is triggered which transforms the input text to upper case.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onblur by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>JavaScript will try to convert strings to numbers when dividing:</p>

<p id="demo"></p>

<script>
let x = "100";
let y = "10";
let z = x / y;   
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_string1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>A function can access variables defined outside the function:</p>

<p id="demo"></p>

<script>
let a = 4;
myFunction();

function myFunction() {
  document.getElementById("demo").innerHTML = a * a;
} 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_scope1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<h3>The window.location object</h3>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"The full URL of this page is:<br>" + window.location.href;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loc_href by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<body>
<canvas id="myChart" style="width:100%;max-width:600px"></canvas>

<script>
var xValues = [50,60,70,80,90,100,110,120,130,140,150];
var yValues = [7,8,8,9,9,9,10,11,14,14,15];

new Chart("myChart", {
  type: "line",
  data: {
    labels: xValues,
    datasets: [{
      fill: false,
      lineTension: 0,
      backgroundColor: "rgba(0,0,255,1)",
      borderColor: "rgba(0,0,0,0)",
      data: yValues
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      yAxes: [{ticks: {min: 6, max:16}}],
    }
  }
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_chartjs_lines_scatter by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:31:40 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getDay()</h2>
<p>The getDay() method returns the weekday as a number:</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.getDay();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_getday by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>Replace "Microsoft" with "W3Schools" in the paragraph below:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo">Please visit Microsoft!</p>

<script>
function myFunction() {
  let text = document.getElementById("demo").innerHTML; 
  document.getElementById("demo").innerHTML =
  text.replace(/MICROSOFT/i,"W3Schools");
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_replace_insensitive by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript switch</h2>

<p id="demo"></p>

<script>
let day;
switch (new Date().getDay()) {
  case 0:
    day = "Sunday";
    break;
  case 1:
    day = "Monday";
    break;
  case 2:
    day = "Tuesday";
    break;
  case 3:
    day = "Wednesday";
    break;
  case 4:
    day = "Thursday";
    break;
  case 5:
    day = "Friday";
    break;
  case  6:
    day = "Saturday";
}
document.getElementById("demo").innerHTML = "Today is " + day;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_switch by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Template Literals</h2>

<p>Template literals allows variables in strings:</p>

<p id="demo"></p>

<p>Template literals are not supported in Internet Explorer.</p>

<script>
let firstName = "John";
let lastName = "Doe";

let text = `Welcome ${firstName}, ${lastName}!`;

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_templates_variables by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript For Of Loop</h2>

<p>The for of statement loops through the values of an iterable object.</p>

<p id="demo"></p>

<script>
let language = "JavaScript";

let text = "";
for (let x of language) {
  text += x + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_for_of2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript setMinutes()</h2>
<p>The setMinutes() method sets the minutes of a date object (0-59):</p>

<p id="demo"></p>

<script>
const d = new Date();
d.setMinutes(30);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_setminutes by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Validation</h2>

<p>Enter a number and click OK:</p>

<input id="id1" type="number" max="100">
<button onclick="myFunction()">OK</button>

<p>If the number is greater than 100 (the input's max attribute), an error message will be displayed.</p>

<p id="demo"></p>

<script>
function myFunction() {
  let text;
  if (document.getElementById("id1").validity.rangeOverflow) {
    text = "Value too large";
  } else {
    text = "Input OK";
  } 
  document.getElementById("demo").innerHTML = text;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_validation_rangeOverflow by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Classes are written in "strict mode"</h2>

<p>In a JavaScript Class you cannot use variable without declaring it.</p>

<p id="demo"></p>

<script>
class Car {
  constructor(name, year) {
    this.name = name;
    this.year = year;

  }
  age() {
   // date = new Date();  // This will not work
   let date = new Date(); // This will work
   return date.getFullYear() - this.year;
  }
}

myCar = new Car("Ford", 2014);
document.getElementById("demo").innerHTML =
"My car is " + myCar.age() + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_class_strict_mode by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Global Variables</h2>

<p>In HTML, global variables defined with <b>let</b>, will not become window variables.</p>

<p id="demo"></p>

<script>
let carName = "Volvo";

// code here can not use window.carName
document.getElementById("demo").innerHTML = "I can not display " + window.carName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_let_global by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The slice() method extract a part of a string
and returns the extracted parts in a new string:</p>

<p id="demo"></p>

<script>
let str = "Apple, Banana, Kiwi";
document.getElementById("demo").innerHTML = str.slice(-12,-6);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_slice_negative by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>
<p>The highest number is <span id="demo"></span>.</p>

<script>
const points = [40, 100, 1, 5, 25, 10];
points.sort(function(a, b){return b-a});
document.getElementById("demo").innerHTML = points[0];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort_high by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Function bind()</h1>

<p>This example will display a person name after 3 seconds:</p>

<p id="demo"></p>

<script>
const person = {
  firstName:"John",
  lastName: "Doe",
  display: function() {
    let x = document.getElementById("demo");
    x.innerHTML = this.firstName + " " + this.lastName;
  }
}

let display = person.display.bind(person);
setTimeout(display, 3000);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_bind2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>A common mistake is to expect this result to be 30:</p>

<p id="demo"></p>

<script>
var x = 10;
var y = 20;
document.getElementById("demo").innerHTML =
"The result is: " + x + y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_add_strings3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Access a JavaScript object</h2>
<p id="demo"></p>

<script>
const myObj = {name:"John", age:30, city:"New York"};
document.getElementById("demo").innerHTML = myObj.name;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_object_access by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:01 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2> 
<h2>unshift()</h2>
<p>The unshift() method adds new elements to the beginning of an array:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = fruits;
fruits.unshift("Lemon");
document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_unshift by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>
<p>Display the first array element, after a string split:</p>

<p id="demo"></p>

<script>
let text = "a,b,c,d,e,f";
const myArray = text.split(",");
document.getElementById("demo").innerHTML = myArray[0];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_split by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Get JSON Data from a PHP Server</h2>
<p>Convert the data into a JavaScript array:</p>
<p id="demo"></p>

<script>
const xmlhttp = new XMLHttpRequest();
xmlhttp.onload = function() {
  const myObj = JSON.parse(this.responseText);
  document.getElementById("demo").innerHTML = myObj[2];
}
xmlhttp.open("GET.html", "demo_file_array.html");
xmlhttp.send();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_php_array by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:36 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Looping an Array</h2>
<p id="demo"></p>

<script>
const myJSON = '{"name":"John", "age":30, "cars":["Ford", "BMW", "Fiat"]}';
const myObj = JSON.parse(myJSON);

let text = "";
for (let i = 0; i < myObj.cars.length; i++) {
  text += myObj.cars[i] + ", ";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_array_loop by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Methods</h2>

<p>Object data can be accessed using a getter.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  get fullName() {
    return this.firstName + " " + this.lastName;
  }
};
// Display data from the object using a getter:
document.getElementById("demo").innerHTML = person.fullName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_accessors_method_get by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript switch</h2>

<p id="demo"></p>

<script>
let x = "0";

switch (x) {
  case 0:
    text = "Off";
    break;
  case 1:
    text = "On";
    break;
  default:
    text = "No value found";
}
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_switch5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Display the Boolean value of NaN:</p>

<p id="demo"></p>

<script>
let x = 10 / "Hello";
document.getElementById("demo").innerHTML = Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_boolean_nan by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Bitwise NOT</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = ~ 5;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_bitwise_not by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>In strict comparison, data type does matter. This if statement returns false:</p>

<p id="demo"></p>

<script>
let x = 10;
let y = "10";
document.getElementById("demo").innerHTML = Boolean(x === y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_loose_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Delete JavaScript Object Properties</h2>

<p id="demo"></p>

<script>
let x = "";
let myObj = {
  "name":"John",
  "age":30,
  "cars": {
  "car1":"Ford",
  "car2":"BMW",
  "car3":"Fiat"
  }
}
delete myObj.cars.car2;

for (let i in myObj.cars) {
  x += myObj.cars[i] + "<br>";
}

document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_object_delete by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting true to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = true;
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_true by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="p1">
This is a text.
This is a text.
This is a text.
</p>

<input type="button" value="Hide text" 
onclick="document.getElementById('p1').style.visibility='hidden'">

<input type="button" value="Show text"
onclick="document.getElementById('p1').style.visibility='visible'">

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_visibility by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.indexOf()</h2>

<p id="demo"></p>

<script>
const fruits = ["Apple", "Orange", "Apple", "Mango"];
let position = fruits.indexOf("Apple") + 1;

document.getElementById("demo").innerHTML = "Apple is found in position " + position;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_indexof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Statements</h2>

<p>JavaScript code blocks are written between { and }</p>

<button type="button" onclick="myFunction()">Click Me!</button>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
function myFunction() {
  document.getElementById("demo1").innerHTML = "Hello Dolly!";
  document.getElementById("demo2").innerHTML = "How are you?";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_statements_blocks by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.isArray()</h2>

<p>Click the button to check if "fruits" is an array.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var fruits = ["Banana", "Orange", "Apple", "Mango"];
  var x = document.getElementById("demo");
  x.innerHTML = Array.isArray(fruits);
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_is by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function scrollWindow() {
  window.scrollBy(0, 10);
}
</script>
</head>
<body>


<input type="button" onclick="scrollWindow()" value="Scroll" />

<h2>Reserved Words</h2>
<hr>
<p>You cannot use reserved words as variables, labels, or function names:</p>
<hr>
<br>
abstract<br><br>
arguments<br><br>
boolean<br><br>
break<br><br>
byte<br><br>
case<br><br>
catch<br><br>
char<br><br>
class<br><br>
const<br><br>
continue<br><br>
debugger<br><br>
default<br><br>
delete<br><br>
do<br><br>
double<br><br>
else<br><br>
enum<br><br>
eval<br><br>
export<br><br>
extends<br><br>
false<br><br>
final<br><br>
finally<br><br>
float<br><br>
for<br><br>
function<br><br>
goto<br><br>
if<br><br>
implements<br><br>
import<br><br>
in<br><br>
instanceof<br><br>
int<br><br>
interface<br><br>
let<br><br>
long<br><br>
native<br><br>
new<br><br>
null<br><br>
package<br><br>
private<br><br>
protected<br><br>
public<br><br>
return<br><br>
short<br><br>
static<br><br>
super<br><br>
switch<br><br>
synchronized<br><br>
this<br><br>
throw<br><br>
throws<br><br>
transient<br><br>
true<br><br>
try<br><br>
typeof<br><br>
var<br><br>
void<br><br>
volatile<br><br>
while<br><br>
with<br><br>
yield<br><br>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_window_scrollby by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>The typeof NaN is number:</p>

<p id="demo"></p>

<script>
let x = NaN;
document.getElementById("demo").innerHTML = typeof x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_nan_typeof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>You can use quotes inside a string, as long as they don't match the quotes surrounding the string.</p>

<p id="demo"></p>

<script>
let answer1 = "It's alright";
let answer2 = "He is called 'Johnny'";
let answer3 = 'He is called "Johnny"'; 

document.getElementById("demo").innerHTML =
answer1 + "<br>" + answer2 + "<br>" + answer3; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_quotes_mixed by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript ISO Dates</h2>

<p id="demo"></p>

<script>
const d = new Date("2015-03"); 
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_string_iso2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function getEventType(event) { 
  document.getElementById("demo").innerHTML = event.type;
}
</script>
</head>
<body>

<p onmousedown="getEventType(event)">
Click on this paragraph. A message will tell what type of event was triggered.</p>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_event_type by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<canvas id="myCanvas" width="400" height="400" style="border:1px solid grey"></canvas>

<script>
const canvas = document.getElementById("myCanvas");
const ctx = canvas.getContext("2d");
canvas.height = canvas.width;
ctx.transform(1, 0, 0, -1, 0, canvas.height)

const xArray = [50,60,70,80,90,100,110,120,130,140,150];
const yArray = [7,8,8,9,9,9,10,11,14,14,15];

ctx.fillStyle = "red";
for (let i = 0; i < xArray.length-1; i++) {
  let x = xArray[i]*400/150;
  let y = yArray[i]*400/15;
  ctx.beginPath();
  ctx.ellipse(x, y, 3, 3, 0, 0, Math.PI * 2);
  ctx.fill();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_canvas_scatter by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>

<p id="demo"></p>

<script>
const d = new Date("Jan 25 2015");
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_string_5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Setting a default value to a function parameter (y=2).</p>
<p id="demo"></p>

<script>
function myFunction(x, y = 2) {
  return x * y;
}
document.getElementById("demo").innerHTML = myFunction(4);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_default by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.find()</h2>
<p id="demo"></p>

<script>
const numbers = [4, 9, 16, 25, 29];
let first = numbers.find(myFunction);

document.getElementById("demo").innerHTML = "First number over 18 is " + first;

function myFunction(value, index, array) {
  return value > 18;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_find by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrow Functions</h2>

<p>Arrow functions are not supported in IE11 or earlier.</p>

<p id="demo"></p>

<script>
const x = (x, y) =&gt; { return x * y };
document.getElementById("demo").innerHTML = x(5, 5);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_arrow_safe by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function getOptions() {
  var x = document.getElementById("mySelect");
  var txt = "";
  var i;
  for (i = 0; i < x.length; i++) {
    txt = txt + " " + x.options[i].text;
  }
  document.getElementById("demo").innerHTML = txt;
}
</script>
</head>
<body>

<form>
Select your favorite fruit:
<select id="mySelect">
  <option>Apple</option>
  <option>Orange</option>
  <option>Pineapple</option>
  <option>Banana</option>
</select>
<br><br>
<input type="button" onclick="getOptions()" value="Output all options">
</form>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=try_dom_select_options by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Validation</h2>

<p>Please input a number between 1 and 10:</p>

<input id="numb">

<button type="button" onclick="myFunction()">Submit</button>

<p id="demo"></p>

<script>
function myFunction() {
  // Get the value of the input field with id="numb"
  let x = document.getElementById("numb").value;
  // If x is Not a Number or less than one or greater than 10
  let text;
  if (isNaN(x) || x < 1 || x > 10) {
    text = "Input not valid";
  } else {
    text = "Input OK";
  }
  document.getElementById("demo").innerHTML = text;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_validation_number by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2>
<h2>splice()</h2>
<p>The splice() methods can be used to remove array elements:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = fruits;
fruits.splice(0, 1);
document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_remove by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Activate Debugging</h2>

<p>F12 on your keyboard will activate debugging.</p>
<p>Then select "Console" in the debugger menu.</p>
<p>Then click Run again.</p>

<script>
console.log(5 + 6);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_output_console by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"Available screen height is " + screen.availHeight;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_screen_availheight by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Global Variables</h2>
<p>If you assign a value to a variable that has not been declared, it will automatically become a GLOBAL variable:</p>

<p id="demo"></p>

<script>
myFunction();
// code here can use carName as a global variable
document.getElementById("demo").innerHTML = "I can display " + carName;

function myFunction() {
  carName = "Volvo";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_local_global by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript typeof</h2>
<p>The typeof operator returns the type of a variable or an expression.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
typeof "john" + "<br>" + 
typeof 3.14 + "<br>" +
typeof true + "<br>" +
typeof false + "<br>" +
typeof x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_typeof_primitive by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Creating a JavaScript Object:</p>

<p id="demo"></p>

<script>
const person = {};
person.firstName = "John";
person.lastName = "Doe";
person.age = 50;
person.eyeColor = "blue"; 

document.getElementById("demo").innerHTML =
person.firstName + " is " + person.age + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_create_empty by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>Avoid using new Array(). Use [] instead.</p>

<p id="demo"></p>

<script>
//const points = new Array(40, 100, 1, 5, 25, 10);
const points = [40, 100, 1, 5, 25, 10];
document.getElementById("demo").innerHTML = points[0];  
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_literal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Variables</h1>

<p>Create a variable, assign a value to it, and display it:</p>

<p id="demo"></p>

<script>
let carName = "Volvo";
document.getElementById("demo").innerHTML = carName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_variables_create by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Statements</h2>

<p>
The best place to break a code line is after an operator or a comma.
</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"Hello Dolly!";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_statements_linebreak by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function changeBorder(id) {
  document.getElementById(id).style.border = "5px solid";
}
</script>
</head>
<body>

<table style="border:1px solid black" id="myTable">
  <tr>
    <td>100</td>
    <td>200</td>
  </tr>
  <tr>
    <td>300</td>
    <td>400</td>
  </tr>
</table>

<p>
<input type="button" onclick="changeBorder('myTable')" value="Change Border">
</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_table_border by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.log()</h2>

<p>Math.log() returns the natural logarithm of a number:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.log(1);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_log by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2> 
<h2>slice()</h2>
<p>This  example slices out a part of an array starting from array element 3 ("Apple")</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
const citrus = fruits.slice(3);
document.getElementById("demo").innerHTML = fruits + "<br><br>" + citrus;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_slice3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Methods</h2>

<p>The isSafeInteger() method returns true if the argument is a safe integer.</p>
<p>Otherwise it returns false.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
Number.isSafeInteger(10) + "<br>" + Number.isSafeInteger(12345678901234567890);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_issafeinteger by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Methods</h2>

<p>Object data can be accessed using property stored as a function.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  fullName: function() {
    return this.firstName + " " + this.lastName;
  }
};

// Display data from the object using a method:
document.getElementById("demo").innerHTML = person.fullName();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_accessors_method by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Do a multiline search for "is" at the beginning of each line in a string:</p>

<p id="demo"></p>

<script>
let text = "\nIs th\nis it?";
let result = text.match(/^is/m);
document.getElementById("demo").innerHTML = "Result is: " + result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_m by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>

<h2>Remove an HTML Element</h2>
<p id="id01">Hello World!</p>
<p id="id02">Hello Sweden!</p>

<script>
$(document).ready(function() {
  $("#id02").remove();
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_remove_element by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>JavaScript has an built-in function constructor.</p>
<p id="demo"></p>

<script>
const myFunction = new Function("a", "b", "return a * b");
document.getElementById("demo").innerHTML = myFunction(4, 3);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_constructor by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>This example calls the fullName method of person, using it on person1:
</p>

<p id="demo"></p>

<script>
const person = {
  fullName: function(city, country) {
    return this.firstName + " " + this.lastName + "," + city + "," + country;
  }
}

const person1 = {
  firstName:"John",
  lastName: "Doe"
}

const person2 = {
  firstName:"Mary",
  lastName: "Doe"
}

document.getElementById("demo").innerHTML = person.fullName.call(person1, "Oslo", "Norway"); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_call_arguments by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>

<p>If you want to test if an object is not null, you must test if it not undefined first.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = typeof myObj !== "undefined" && myObj !== null;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_object_null by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<p id="demo">Fetch a file to change this text.</p>

<script>
getText("fetch_info.txt");

async function getText(file) {
  let x = await fetch(file);
  let y = await x.text();
  document.getElementById("demo").innerHTML = y;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_api_fetch_await by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:55 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Global Methods</h2>

<p>The Number() method converts variables to numbers:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
  Number(true) + "<br>" +
  Number(false) + "<br>" +
  Number("10") + "<br>" + 
  Number("  10") + "<br>" +
  Number("10  ") + "<br>" +
  Number(" 10  ") + "<br>" +
  Number("10.33") + "<br>" + 
  Number("10,33") + "<br>" +
  Number("10 33") + "<br>" +
  Number("John");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_global_number by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>All programming languages, including JavaScript, have difficulties with precise floating point values.</p>
<p>To solve the problem, it helps to multiply and divide:</p>

<p id="demo"></p>

<script>
let x = 0.1;
let y = 0.2;
let z = (x * 10 + y *10) / 10;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_floats_ok by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.max()</h2>
<p>This example returns the highest number in a list of number arguments:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.max(1,2,3); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_call_math by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Booleans and Boolean objects cannot be safely compared:</p>

<p id="demo"></p>

<script>
let x = false;         // x is a boolean
let y = new Boolean(false);  // y is an object
document.getElementById("demo").innerHTML = (x==y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_booleans_object1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>My First Web Page</h2>
<p>My first paragraph.</p>

<p>Never call document.write after the document has finished loading.
It will overwrite the whole document.</p>

<script>
document.write(5 + 6);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_output_write by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
var myWindow;
function openWin() {
  myWindow=window.open("", "", "width=400, height=200");
}
function moveWin() {
  myWindow.moveBy(250, 250)
}
</script>
</head>
<body>

<input type="button" value="Open myWindow" onclick="openWin()" />
<br><br>
<input type="button" value="Move myWindow" onclick="moveWin()" />

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_win_moveby by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img src="planets.gif" width="145" height="126" usemap="#planetmap">

<map name="planetmap">
  <area id="venus" shape="circle" coords="124,58,8" alt="Venus" href="venus.html">
</map>

<p>Click the button to display the coordinates for the "venus" area.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("venus").coords;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_area_coords by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:04 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Properties</h2>

<p>MAX_VALUE returns the largest possible number in JavaScript.</p>

<p id="demo"></p>

<script>
let x = Number.MAX_VALUE;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_max by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>

<head>
<title>W3Schools Demo</title>
</head>

<body>

<h2>JavaScript HTMLDOM</h2>
<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
document.head;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_head by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Convert a string into a date object.</h2>

<p id="demo"></p>

<script>
const text = '{"name":"John", "birth":"1986-12-14", "city":"New York"}';
const obj = JSON.parse(text, function (key, value) {
  if (key == "birth") {
    return new Date(value);
  } else {
    return value;
  }
});
document.getElementById("demo").innerHTML = obj.name + ", " + obj.birth; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_parse_reviver by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Redeclaring a Variable Using var</h2>

<p id="demo"></p>

<script>
var  x = 10;
// Here x is 10

{  
var x = 2;
// Here x is 2
}

// Here x is 2
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_var by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>

<p id="demo"></p>

<script>
// Create an object:
const person = {firstName:"John", lastName:"Doe", age:50, eyeColor:"blue"};

// Display some data from the object:
document.getElementById("demo").innerHTML =
person.firstName + " is " + person.age + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_objects_create_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.reduceRight()</h2>
<p>This example finds the sum of all numbers in an array:</p>

<p id="demo"></p>

<script>
const numbers = [45, 4, 9, 16, 25];
let sum = numbers.reduceRight(myFunction);

document.getElementById("demo").innerHTML = "The sum is " + sum;

function myFunction(total, value, index, array) {
  return total + value;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_reduce_right by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>

<p>Click the buttons to sort the array alphabetically or numerically.</p>

<button onclick="myFunction1()">Sort Alphabetically</button>
<button onclick="myFunction2()">Sort Numerically</button>

<p id="demo"></p>

<script>
const points = [40, 100, 1, 5, 25, 10];
document.getElementById("demo").innerHTML = points;  

function myFunction1() {
  points.sort();
  document.getElementById("demo").innerHTML = points;
}
function myFunction2() {
  points.sort(function(a, b){return a - b});
  document.getElementById("demo").innerHTML = points;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort_alpha by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Bitwise XOR</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 5 ^ 1;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_bitwise_xor by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The *= Operator</h2>

<p id="demo"></p>

<script>
var x = 10;
x *= 5;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_multequal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Objects</h2>
<p>Never create strings as objects.</p>
<p>JavaScript cannot compare objects.</p>

<p id="demo"></p>

<script>
let x = new String("John"); 
let y = new String("John");
document.getElementById("demo").innerHTML = (x == y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_best_object_string2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>Adding a number as a number produces a different result from adding a number as a string:</p>

<p id="demo"></p>

<script>
let y = 10
y += "5";
document.getElementById("demo").innerHTML = y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_add_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Remove an HTML Element</h2>
<p id="id01">Hello World!</p>
<p id="id02">Hello Sweden!</p>

<script>
document.getElementById("id02").remove();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_dom_remove_element by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
var w;
function openwindow() {
  w = window.open('','', 'width=100,height=100');
  w.focus();
}

function myFunction() {
  w.resizeBy(50, 50);
  w.focus();
}

</script>
</head>
<body>

<button onclick="openwindow()">Create window</button>
<button onclick="myFunction()">Resize window</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_window_resizeby by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>Check if a string ends with "Doe":</p>

<p id="demo"></p>

<p>The endsWith() method is not supported in Internet Explorer.</p>

<script>
let text = "John Doe";
document.getElementById("demo").innerHTML = text.endsWith("Doe");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_endswith by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Methods</h2>

<p>The toString() method converts a number to a string.</p>

<p id="demo"></p>

<script>
let x = 123;
document.getElementById("demo").innerHTML =
  x.toString() + "<br>" +
   (123).toString() + "<br>" +
   (100 + 23).toString();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_tostring by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>Array.forEach() calls a function for each array element.</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];

let text = "<ul>";
fruits.forEach(myFunction);
text += "</ul>";
document.getElementById("demo").innerHTML = text;

function myFunction(value) {
  text += "<li>" + value + "</li>";
} 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_loop_foreach by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Literal Constructors</h2>
<p id="demo"></p>

<script>
let x1 = "";
let x2 = 0;
let x3 = false;
const x4 = {};
const x5 = [];
const x6 = /()/;
const x7 = function(){};

document.getElementById("demo").innerHTML =
"x1: " + typeof x1 + "<br>" +
"x2: " + typeof x2 + "<br>" +
"x3: " + typeof x3 + "<br>" +
"x4: " + typeof x4 + "<br>" +
"x5: " + typeof x5 + "<br>" +
"x6: " + typeof x6 + "<br>" +
"x7: " + typeof x7 + "<br>";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_best_constructors by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>The escape sequence \\ inserts a backslash in a string.</p>

<p id="demo"></p>

<script>
let text = "The character \\ is called backslash.";
document.getElementById("demo").innerHTML = text; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_escape_backslash by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>
<p>Creating a Map from an Array:</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

document.getElementById("demo").innerHTML = fruits.get("apples");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_create_array by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.filter()</h2>
<p>Creates a new array with all array elements that passes a test.</p>

<p id="demo"></p>

<script>
const numbers = [45, 4, 9, 16, 25];
const over18 = numbers.filter(myFunction);

document.getElementById("demo").innerHTML = over18;

function myFunction(value) {
  return value > 18;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_filter_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML Events</h2>
<p>Click "Try it" to execute the displayDate() function.</p>

<button id="myBtn">Try it</button>

<p id="demo"></p>

<script>
document.getElementById("myBtn").onclick = displayDate;

function displayDate() {
  document.getElementById("demo").innerHTML = Date();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<body>

<canvas id="myChart" style="width:100%;max-width:600px"></canvas>

<script>
var xValues = ["Italy", "France", "Spain", "USA", "Argentina"];
var yValues = [55, 49, 44, 24, 15];
var barColors = ["blue"];

new Chart("myChart", {
  type: "bar",
  data: {
    labels: xValues,
    datasets: [{
      backgroundColor: barColors,
      data: yValues
    }]
  },
  options: {
    legend: {display: false},
    scales: {
      yAxes: [{
        ticks: {
          beginAtZero: true
        }
      }],
    }
  }
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_chartjs_bars_color by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:31:40 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Variables</h2>

<p>Remove the comment (at the beginning of the lines) to test each case:</p>

<p id="demo"></p>

<script>
let x = 5;
//x = 5 + 7;    // x.valueOf() is 12, typeof x is a number
//x = 5 + "7";  // x.valueOf() is 57, typeof x is a string
//x = "5" + 7;  // x.valueOf() is 57, typeof x is a string
//x = 5 - 7;    // x.valueOf() is -2, typeof x is a number
//x = 5 - "7";  // x.valueOf() is -2, typeof x is a number
//x = "5" - 7;  // x.valueOf() is -2, typeof x is a number
//x = 5 - "x";  // x.valueOf() is NaN, typeof x is a number

document.getElementById("demo").innerHTML = x.valueOf() + " " + typeof x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_best_valueof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function changeSize() {
  document.getElementById("mySelect").size = 4;
}
</script>
</head>
<body>

<form>
<select id="mySelect">
  <option>Apple</option>
  <option>Banana</option>
  <option>Orange</option>
  <option>Melon</option>
</select>
<input type="button" onclick="changeSize()" value="Change size">
</form>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=try_dom_select_size by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Assign 5 to x, and display the value of the comparison (x !== 5):</p>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = (x !== 5);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison7 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<style>
table,th,td {
  border : 1px solid black;
  border-collapse: collapse;
}
th,td {
  padding: 5px;
}
</style>
<body>

<h2>The XMLHttpRequest Object</h2>

<button type="button" onclick="loadDoc()">Get my CD collection</button>
<br><br>
<table id="demo"></table>

<script>
function loadDoc() {
  const xhttp = new XMLHttpRequest();
  xhttp.onload = function() {
    myFunction(this);
  }
  xhttp.open("GET.html", "cd_catalog.xml");
  xhttp.send();
}
function myFunction(xml) {
  const xmlDoc = xml.responseXML;
  const x = xmlDoc.getElementsByTagName("CD");
  let table="<tr><th>Artist</th><th>Title</th></tr>";
  for (let i = 0; i <x.length; i++) { 
    table += "<tr><td>" +
    x[i].getElementsByTagName("ARTIST")[0].childNodes[0].nodeValue +
    "</td><td>" +
    x[i].getElementsByTagName("TITLE")[0].childNodes[0].nodeValue +
    "</td></tr>";
  }
  document.getElementById("demo").innerHTML = table;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_xml2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:00 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>Check if a string starts with "Hello":</p>

<p id="demo"></p>

<p>The startsWith() method is not supported in Internet Explorer.</p>

<script>
let text = "Hello world, welcome to the universe.";
document.getElementById("demo").innerHTML = text.startsWith("Hello");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_startswith by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Get JSON Data from a PHP Server</h2>
<p id="demo"></p>

<script>
const xmlhttp = new XMLHttpRequest();

xmlhttp.onload = function() {
  const myObj = JSON.parse(this.responseText);
  document.getElementById("demo").innerHTML = myObj.name;
}
xmlhttp.open("GET.html", "demo_file.html");
xmlhttp.send();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_php_simple by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:35 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Properties</h2>
<p>Deleting object properties.</p>

<p id="demo"></p>

<script>
const person = {
  firstname: "John",
  lastname: "Doe",
  age: 50,
  eyecolor: "blue"
};

delete person.age;

document.getElementById("demo").innerHTML =
person.firstname + " is " + person.age + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_properties4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Constructors</h2>

<p id="demo"></p>

<script>
// Constructor function for Person objects
function Person(firstName,lastName,age,eyeColor) {
  this.firstName = firstName;
  this.lastName = lastName;
  this.age = age;
  this.eyeColor = eyeColor;
  this.changeName = function (name) {
    this.lastName = name;
  }
}
// Create a Person object
const myMother = new Person("Sally","Rally",48,"green");

// Change last name
myMother.changeName("Doe");

// Display last name
document.getElementById("demo").innerHTML =
"My mother's last name is " + myMother.lastName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_constructor7 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>Strings are written inside quotes.</p>
<p>You can use single or double quotes:</p>

<p id="demo"></p>

<script>
var carName1 = "Volvo XC60";
var carName2 = 'Volvo XC60';

document.getElementById("demo").innerHTML =
carName1 + " " + carName2; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strings by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTML Events</h2>
Enter your name: <input type="text" id="fname" onchange="upperCase()">
<p>When you leave the input field, a function is triggered which transforms the input text to upper case.</p>

<script>
function upperCase() {
  const x = document.getElementById("fname");
  x.value = x.value.toUpperCase();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onchange by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>My Web Page</h2>

<p>The best place to break a code line is after an operator or a comma.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"Hello Dolly.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_line_break by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Properties</h2>
<p>Add a new property to an existing object:</p>

<p id="demo"></p>

<script>
const person = {
  firstname: "John",
  lastname: "Doe",
  age: 50,
  eyecolor: "blue"
};

person.nationality = "English";
document.getElementById("demo").innerHTML =
person.firstname + " is " + person.nationality + ".";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_properties3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Fetch a JSON file with XMLHttpRequest</h2>
<p>Content written as an JSON array will be converted into a JavaScript array.</p>
<p id="demo"></p>

<script>
const xmlhttp = new XMLHttpRequest();
xmlhttp.onload = function() {
  const myArr = JSON.parse(this.responseText);
  document.getElementById("demo").innerHTML = myArr[0];
}
xmlhttp.open("GET.html", "json_demo_array.txt", true);
xmlhttp.send();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_ajax_array by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.every()</h2>
<p>The every() method checks if all array values pass a test.</p>

<p id="demo"></p>

<script>
const numbers = [45, 4, 9, 16, 25];
let allOver18 = numbers.every(myFunction);

document.getElementById("demo").innerHTML = "All over 18 is " + allOver18;

function myFunction(value) {
  return value > 18;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_every_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Access a JavaScript object</h2>
<p id="demo"></p>

<script>
const myObj = {name:"John", age:30, city:"New York"};
document.getElementById("demo").innerHTML = myObj["name"];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_object_access2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:01 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The substr() method extract a part of a string
and returns the extracted parts in a new string:</p>

<p id="demo"></p>

<script>
let str = "Apple, Banana, Kiwi";
document.getElementById("demo").innerHTML = str.substr(-4);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_substr2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Timing</h2>

<p>A script on this page starts this clock:</p>

<p id="demo"></p>

<script>
setInterval(myTimer, 1000);

function myTimer() {
  const d = new Date();
  document.getElementById("demo").innerHTML = d.toLocaleTimeString();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_setinterval2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>This document was last modified <span id="demo"></span>.</p>

<script>
document.getElementById("demo").innerHTML = document.lastModified;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_lastmodified by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript defineProperty()</h2>

<p id="demo"></p>

<script>
// Create an Object:
var person = {
  firstName: "John",
  lastName : "Doe",
  language : "NO"
};
// Change a Property:
Object.defineProperty(person, "language", {
  get : function() { return language },
  set : function(value) { language = value.toUpperCase()}
});
// Change language
person.language = "en";
// Display language
document.getElementById("demo").innerHTML = person.language;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_defineproperty3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>JavaScript objects cannot be compared:</p>

<p id="demo"></p>

<script>
// x is an object
let x = new Number(500);

// y is an object
let y = new Number(500);

document.getElementById("demo").innerHTML = (x===y);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_object4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>

<p>To test if an object does not exist, test if the type is undefined:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = typeof myObj === "undefined";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_object_undefined by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>
<p>Using Map.entries():</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

let text = "";
for (const x of fruits.entries()) {
  text += x + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_entries by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<button id="btn1" type="button">HTML</button>

<p>Click the "Try it" button to return the type of the "HTML" button:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("btn1").type;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_button_type by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Fetch a JSON file with XMLHttpRequest</h2>
<p id="demo"></p>

<script>
const xmlhttp = new XMLHttpRequest();
xmlhttp.onload = function() {
  const myObj = JSON.parse(this.responseText);
  document.getElementById("demo").innerHTML = myObj.name;
}
xmlhttp.open("GET.html", "json_demo.txt");
xmlhttp.send();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_ajax by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>The Array.from() method returns an Array object from any object with a length property or any iterable object.</p>

<p id="demo"></p>

<script>
const myArr = Array.from("ABCDEFG");
document.getElementById("demo").innerHTML = myArr;
</script>

<p>The Array.from() method is not supported in Internet Explorer.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_from by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"Screen color depth is " + screen.colorDepth;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_screen_colorDepth by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function createCaption(id) {
  document.getElementById(id).createCaption().innerHTML = "My new caption";
}
</script>
</head>
<body>

<table id="myTable" style="border: 1px solid black">
  <tr>
    <td>Row1 cell1</td>
    <td>Row1 cell2</td>
  </tr>
  <tr>
    <td>Row2 cell1</td>
    <td>Row2 cell2</td>
  </tr>
</table>

<p>
<input type="button" onclick="createCaption('myTable')" value="Create caption">
</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_table_createcaption by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>

<p id="demo"></p>

<script>
const d = new Date("January 25 2015");
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_string_4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function changeText() {
  x = document.getElementById("mySelect");
  x.options[x.selectedIndex].text = "Melon";
}
</script>
</head>
<body>

<form>
Select your favorite fruit:
<select id="mySelect">
  <option>Apple</option>
  <option>Orange</option>
  <option>Pineapple</option>
  <option>Banana</option>
</select>
<br><br>
<input type="button" onclick="changeText()" value="Set text of selected option">
</form>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=try_dom_option_settext by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p id="demo"></p>

<script>
const myFunction = function (a, b) {return a * b}
document.getElementById("demo").innerHTML = myFunction(4, 3);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_constructor2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img src="planets.gif" width="145" height="126" usemap="#planetmap">

<map name="planetmap">
  <area id="venus" shape="circle" coords="124,58,8" alt="Venus" href="venus.html#description">
</map>

<p>Click the button to display the anchor part of the href attribute for the "venus" area.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("venus").hash;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_area_hash by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:05 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>
<p>Map typeof:</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

document.getElementById("demo").innerHTML = typeof fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_typeof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The Navigator Object</h2>

<p>The language property returns the browser's language:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"navigator.language is " + navigator.language;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_nav_language by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<p id="demo">Fetch a file to change this text.</p>

<script>
getText("fetch_info.txt");

async function getText(file) {
  let myObject = await fetch(file);
  let myText = await myObject.text();
  document.getElementById("demo").innerHTML = myText;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_api_fetch_easy by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:55 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Map Objects</h2>
<p>Using Map.values():</p>

<p id="demo"></p>

<script>
// Create a Map
const fruits = new Map([
  ["apples", 500],
  ["bananas", 300],
  ["oranges", 200]
]);

let text = "";
for (const x of fruits.values()) {
  text += x + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_map_values by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Expressions</h2>

<p>Expressions compute to values.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = "John" + " "  + "Doe";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_syntax_expressions_strings by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Make a table based on JSON data.</h2>

<p id="demo"></p>

<script>
const dbParam = JSON.stringify({table:"customers",limit:20});
const xmlhttp = new XMLHttpRequest();
xmlhttp.onload = function() {
  const myObj = JSON.parse(this.responseText);
  let text = "<table border='1'>"
  for (let x in myObj) {
    text += "<tr><td>" + myObj[x].name + "</td></tr>";
  }
  text += "</table>"    
  document.getElementById("demo").innerHTML = text;
}
xmlhttp.open("POST.html", "json_demo_html_table.json");
xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
xmlhttp.send("x=" + dbParam);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_html_table by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:38 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>JavaScript array elements are accesses using numeric indexes (starting from 0).</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = fruits[0];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_first by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript defineProperty()</h2>

<p id="demo"></p>

<script>
// Create an Object:
var person = {
  firstName: "John",
  lastName : "Doe",
  language : "NO", 
};
// Change a Property:
Object.defineProperty(person, "language", {
  value: "EN",
  writable : true,
  enumerable : false,
  configurable : true
});
// Enumerate Properties
txt = "";
for (var x in person) {
  txt += person[x] + "<br>";
}
document.getElementById("demo").innerHTML = txt;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_defineproperty2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrow Function</h2>

<p>This example shows an Arrow Function without the brackets or the return keyword.</p>

<p id="demo"></p>

<script>
var hello;

hello = () => "Hello World!";

document.getElementById("demo").innerHTML = hello();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arrow_function3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo">Change the style of an HTML element.</p>

<script>
document.getElementById("demo").style.fontSize = "35px";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_style_css by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>JavaScript will NOT convert strings to numbers when adding:</p>

<p id="demo"></p>

<script>
let x = "100";
let y = "10";
let z = x + y;   
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_string4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting -Infinity to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = -Infinity;
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_infinity_minus by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<head>
</head>
<body>

<form>
<select id="mySelect">
  <option>Apple</option>
  <option>Pear</option>
  <option>Banana</option>
  <option>Orange</option>
</select>
</form>

<p>There are <span id="demo">0</span> options in the list.</p>

<script>
document.getElementById("demo").innerHTML =
document.getElementById("mySelect").length;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=try_dom_select_length by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>Octal numeric literals are not allowed.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
let x = 010;   // This will cause an error 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_octal by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Date.toJSON()</h2>

<p id="demo"></p>

<script>
d = new Date();
document.getElementById("demo").innerHTML = d.toJSON();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_date_tojson by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>Arrays use numbers to access its elements.</p>

<p id="demo"></p>

<script>
const person = ["John", "Doe", 46];
document.getElementById("demo").innerHTML = person[0];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_array by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction(elmnt, clr) {
  elmnt.style.color = clr;
}
</script>
</head>
<body>

<p onmousedown="myFunction(this,'red')" onmouseup="myFunction(this,'green')">
Click the text to change the color. A function, with parameters, is triggered when the mouse button is pressed down, and again, with other parameters, when the mouse button is released.
</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_onmousedown by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Iterables</h2>
<p>Iterate over a String:</p>

<p id="demo"></p>

<script>
// Create a String
const name = "W3Schools";

// List all Elements
let text = ""
for (const x of name) {
  text += x + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>
</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_iterate_string by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting a function to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
const x = function(){};
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_function by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>The full URL of this document is: <br><span id="demo"></span>.</p>

<script>
document.getElementById("demo").innerHTML = document.URL
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_url by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple"];
document.getElementById("demo").innerHTML = Array.isArray(fruits);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_isarray_method by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript async / await</h2>

<h1 id="demo"></h1>

<script>
async function myDisplay() {
  let myPromise = new Promise(function(resolve) {
    resolve("I love You !!");
  });
  document.getElementById("demo").innerHTML = await myPromise;
}

myDisplay();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_async5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>
<p>A Date object can be created with a specified date and time:</p>

<p id="demo"></p>

<script>
const d = new Date("October 13, 2014 11:13:00");
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_string by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p id="demo"></p>

<script>
const cars = ["Saab", "Volvo", "BMW"];
document.getElementById("demo").innerHTML = cars;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_full by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>JSON.stringify will not stringify functions:</p>

<p id="demo"></p>

<script>
const person = {
  name: "John",
  age: function () {return 30;}
};

document.getElementById("demo").innerHTML = JSON.stringify(person);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_display_stringify_function by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>

<p>Using new Date(7 numbers), creates a new date object with the specified date and time:</p>

<p id="demo"></p>

<script>
const d = new Date(2018, 11, 24, 10, 33, 30, 0);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_all by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Create Object from JSON String</h2>

<p id="demo"></p>

<script>
let text = '{"employees":[' +
'{"firstName":"John","lastName":"Doe" },' +
'{"firstName":"Anna","lastName":"Smith" },' +
'{"firstName":"Peter","lastName":"Jones" }]}';

const obj = JSON.parse(text);
document.getElementById("demo").innerHTML =
obj.employees[1].firstName + " " + obj.employees[1].lastName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_json_parse by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:24:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Assign 5 to x, and display the value of the comparison (x != 8).</p>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = (x != 8);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Displaying a JavaScript object will output [object Object]:</p>

<p id="demo"></p>

<script>
const person = {
  name: "John",
  age: 30,
  city: "New York"
};

document.getElementById("demo").innerHTML = person;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_display by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p id="demo"></p>

<script>
x = 5; // Assign 5 to x

elem = document.getElementById("demo"); // Find an element 
elem.innerHTML = x;           // Display x in the element

var x; // Declare x
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_hoisting1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form>
<input type="button" id="btn01" value="OK">
</form>

<p>Click the "Disable" button to disable the "OK" button:</p>

<button onclick="disableElement()">Disable</button>

<script>
function disableElement() {
  document.getElementById("btn01").disabled = true;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_button_disabled by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Callback</h2>

<p>Wait 3 seconds (3000 milliseconds) for this page to change.</p>

<h1 id="demo"></h1>

<script>
setTimeout(myFunction, 3000);

function myFunction() {
  document.getElementById("demo").innerHTML = "I love You !!";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_callback5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>The toString() method returns the function as a string:</p>

<p id="demo"></p>

<script>
function myFunction(a, b) {
  return a * b;
}
document.getElementById("demo").innerHTML = myFunction.toString();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_tostring by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript toISOString()</h2>
<p>The toISOString() method converts a date to a date string, using the ISO standard format:</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.toISOString();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_toisostring by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1 id="id01">My First Page</h1>
<p id="id02"></p>

<script>
document.getElementById("id02").innerHTML = document.getElementById("id01").innerHTML;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_dom_nav_innerhtml1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Class Method</h2>

<p>Pass a parameter into the "age()" method.</p>

<p id="demo"></p>

<script>
class Car {
  constructor(name, year) {
    this.name = name;
    this.year = year;
  }
  age(x) {
    return x - this.year;
  }
}

let date = new Date();
let year = date.getFullYear();

let myCar = new Car("Ford", 2014);
document.getElementById("demo").innerHTML=
"My car is " + myCar.age(year) + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_class_method2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript getMilliseconds()</h2>
<p>The getMilliseconds() method returns the milliseconds of a date as a number (0-999):</p>

<p id="demo"></p>

<script>
const d = new Date();
document.getElementById("demo").innerHTML = d.getMilliseconds();
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_getmilliseconds by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The padStart() method pads a string with another string:</p>

<p id="demo"></p>

<script>
let text = "5";
document.getElementById("demo").innerHTML = text.padStart(4,"x");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_padding4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>The length property provides an easy way to append new elements to an array without using the push() method.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple"];
document.getElementById("demo").innerHTML = fruits;

function myFunction() {
  fruits[fruits.length] = "Lemon";
  document.getElementById("demo").innerHTML = fruits;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_add by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>
<p>The lowest number is <span id="demo"></span>.</p>

<script>
const points = [40, 100, 1, 5, 25, 10];
points.sort(function(a, b){return a-b});
document.getElementById("demo").innerHTML = points[0];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort_low by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function displayDate() {
  document.getElementById("demo").innerHTML = Date();
}
</script>
</head>
<body>

<h2>My First JavaScript</h2>
<p id="demo">This is a paragraph.</p>

<button type="button" onclick="displayDate()">Display Date</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:10 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Create a JSON string from a JavaScript object.</h2>
<p id="demo"></p>

<script>
const obj = {name: "John", age: 30, city: "New York"};
const myJSON = JSON.stringify(obj);
document.getElementById("demo").innerHTML = myJSON;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_stringify by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The charCodeAt() method returns the unicode of the character at a given position in a string:</p>

<p id="demo"></p>

<script>
let text = "HELLO WORLD";
document.getElementById("demo").innerHTML = text.charCodeAt(0);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_charcodeat by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2>
<p>Array elements are accessed using their index number:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo1").innerHTML = fruits;
fruits[0] = "Kiwi";
document.getElementById("demo2").innerHTML = fruits;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_change by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Methods</h2>

<p>The isFinite() method returns false if the argument is Infinity or NaN.</p>
<p>Otherwise it returns true.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
isFinite(10 / 0) + "<br>" + isFinite(10 / 1);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_isfinite by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Global Methods</h2>

<p>The Number() method can convert a date to a number:</p>

<p id="demo"></p>

<script>
let x = new Date("1970-01-02");
document.getElementById("demo").innerHTML = Number(x); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_global_number_date_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Strings</h2>

<p>Strings can be written with double or single quotes.</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 'John Doe';
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_syntax_strings by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Methods</h2>
<p>Deleting elements leaves undefined holes in an array:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];

document.getElementById("demo1").innerHTML =
"The first fruit is: " + fruits[0];

delete fruits[0];

document.getElementById("demo2").innerHTML =
"The first fruit is: " + fruits[0];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_delete by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>The Array.keys() method returns an Array Iterator object with the keys of the array.</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
const keys = fruits.keys();

let text = "";
for (let x of keys) {
  text += x + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

<p>Array.keys() is not supported in Internet Explorer.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_keys by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function myFunction() {
  document.getElementById("demo").innerHTML = "Hello World";
}
</script>
</head>
<body>

<p ondblclick="myFunction()">Doubleclick this paragraph to trigger a function.</p>

<p id="demo"></p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_events_ondblclick by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:10 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The XMLHttpRequest Object</h2>

<p id="demo">Let AJAX change this text.</p>

<button type="button" onclick="loadDoc()">Change Content</button>

<script>
function loadDoc() {
  var xhttp = new XMLHttpRequest();
  xhttp.open("GET.html", "ajax_info.txt", false);
  xhttp.send();
  document.getElementById("demo").innerHTML = xhttp.responseText;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_asyncfalse by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:00 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Class Static Methods</h2>

<p>To use the "myCar" object inside the static method, you can send it as parameter.</p>

<p id="demo"></p>

<script>
class Car {
  constructor(name) {
    this.name = name;
  }
  static hello(x) {
    return "Hello " + x.name;
  }
}

let myCar = new Car("Ford");
document.getElementById("demo").innerHTML = Car.hello(myCar);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_class_static2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<h3>The % Operator</h3>

<p id="demo"></p>

<script>
let x = 5;
let y = 2;
let z = x % y;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_mod by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<h3>The + Operator</h3>

<p id="demo"></p>

<script>
let x = 5;
let y = 2;
let z = x + y;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_add by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<form id="frm1" action="https://www.w3schools.com/action_page.php">
<button id="btn1" name="subject" type="submit" value="fav_HTML">HTML</button>
<button id="btn2" name="subject" type="submit" value="fav_CSS">CSS</button>
</form>

<p>Click the "Try it" button to return the value of the "HTML" button:</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("btn1").value;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_button_value by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Do a global search for the numbers 1 to 4 in a string:</p>

<p id="demo"></p>

<script>
let text = "123456789";
let result = text.match(/[1-4]/g);
document.getElementById("demo").innerHTML = result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_0-9 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrow Function</h2>

<p>This example shows that if you have only one parameter in an Arrow Function, you can skip the parentheses.</p>

<p id="demo"></p>

<script>
var hello;

hello = val => "Hello " + val;

document.getElementById("demo").innerHTML = hello("Universe!");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arrow_function5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript setInterval()</h2>

<p>Using setInterval() to display the time every second (1000 milliseconds).</p>

<h1 id="demo"></h1>

<script>
setInterval(myFunction, 1000);

function myFunction() {
  let d = new Date();
  document.getElementById("demo").innerHTML=
  d.getHours() + ":" +
  d.getMinutes() + ":" +
  d.getSeconds();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_callback6 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Arrays</h1>
<h2>The entries() method</h2>

<p>entries() returns an Array Iterator object with key/value pairs:</p>

<p id="demo"></p>

<script>
const fruits = ["Banana", "Orange", "Apple", "Mango"];
const f = fruits.entries();

for (let x of f) {
  document.getElementById("demo").innerHTML += x + "<br>";
}
</script>

<p>The entries() method is not supported in Internet Explorer 11 (or earlier).</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_entries by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.reduceRight()</h2>
<p>This example finds the sum of all numbers in an array:</p>

<p id="demo"></p>

<script>
const numbers = [45, 4, 9, 16, 25];
let sum = numbers.reduceRight(myFunction);

document.getElementById("demo").innerHTML = "The sum is " + sum;

function myFunction(total, value) {
  return total + value;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_reduce_right_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>Create an Array with one element.</p>

<p id="demo"></p>

<script>
var points = [40];
document.getElementById("demo").innerHTML = points;  
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_one by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Sets</h2>
<p>entries() Returns an Iterator with [value,value] pairs from a Set:</p>

<p id="demo"></p>

<script>
// Create a Set
const letters = new Set(["a","b","c"]);

// List all entries
const iterator = letters.entries();
let text = "";
for (const entry of iterator) {
  text += entry + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_set_entries by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Getters and Setters</h2>

<p>Getters and setters allow you to get and set properties via methods.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  language: "en",
  get lang() {
    return this.language.toUpperCase();
  }
};
// Display data from the object using a getter:
document.getElementById("demo").innerHTML = person.lang;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_accessors_get2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
var myWindow;
function openWin() {
  myWindow = window.open("", "", "width=400, height=200");
  myWindow.blur();
}
function blurWin() {
  myWindow.blur();
}
function focusWin() {
  myWindow.focus();
}
</script>
</head>
<body>

<input type="button" value="Open new window" onclick="openWin()">
<input type="button" value="Blur new window" onclick="blurWin()">
<input type="button" value="Focus new window" onclick="focusWin()">

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_win_blur by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math Constants</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 
"<p><b>Math.E:</b> " + Math.E + "</p>" +
"<p><b>Math.PI:</b> " + Math.PI + "</p>" +
"<p><b>Math.SQRT2:</b> " + Math.SQRT2 + "</p>" +
"<p><b>Math.SQRT1_2:</b> " + Math.SQRT1_2 + "</p>" +
"<p><b>Math.LN2:</b> " + Math.LN2 + "</p>" +
"<p><b>Math.LN10:</b> " + Math.LN10 + "</p>" +
"<p><b>Math.LOG2E:</b> " + Math.LOG2E + "</p>" +
"<p><b>Math.Log10E:</b> " + Math.LOG10E + "</p>";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_constants by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The JavaScript typeof Operator</h2>

<p>The typeof operator returns the type of a variable or expression:</p>

<p id="demo"></p>

<script>
let y = "5";
let x = + y;
document.getElementById("demo").innerHTML = typeof y + "<br>" + typeof x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_typeof3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img src="planets.gif" width="145" height="126" usemap="#planetmap">

<map name="planetmap">
  <area id="venus" shape="circle" coords="124,58,8" alt="A beautiful planet" href="venus.html">
</map>

<p>Click the button to display the alternate text for the "venus" area.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("venus").alt;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_area_alt by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:04 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.reduce()</h2>
<p>This example finds the sum of all numbers in an array:</p>

<p id="demo"></p>

<script>
const numbers = [45, 4, 9, 16, 25];
let sum = numbers.reduce(myFunction);

document.getElementById("demo").innerHTML = "The sum is " + sum;

function myFunction(total, value, index, array) {
  return total + value;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_reduce by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img id="myImg" src="compman.gif" alt="Crazy computerman" width="107" height="98">

<p>Click the button to display the alternate text of the image.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("myImg").alt;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_img_alt by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:07 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>

<p>Outside myFunction() carName is undefined.</p>

<p id="demo1"></p>

<p id="demo2"></p>

<script>
myFunction();

function myFunction() {
  let carName = "Volvo";
  document.getElementById("demo1").innerHTML =
  typeof carName + " " + carName;
}

document.getElementById("demo2").innerHTML =
typeof carName;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_scope by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img id="myImg" src="compman.gif" width="107" height="98">

<p>Click the button to display the height of the image.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("myImg").height;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_img_height by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:07 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript For Loop</h2>

<p id="demo"></p>

<script>
const cars = ["BMW", "Volvo", "Saab", "Ford"];

let i = 0;
let len = cars.length;
let text = "";

for (; i < len; ) {
  text += cars[i] + "<br>";
  i++;
}
document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loop_for_om3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<h3>The ** Operator</h3>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = x ** 2;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arithmetric_exponent1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Do a global search for whitespace characters in a string:</p>

<p id="demo"></p>

<script>
let text = "Is this all there is?";
let result = text.match(/\s/g);
document.getElementById("demo").innerHTML = result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_s by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Validation</h2>

<p>Enter a number and click OK:</p>

<input id="id1" type="number" min="100">
<button onclick="myFunction()">OK</button>

<p>If the number is less than 100 (the input's min attribute), an error message will be displayed.</p>

<p id="demo"></p>

<script>
function myFunction() {
  let text;
  if (document.getElementById("id1").validity.rangeUnderflow) {
    text = "Value too small";
  } else {
    text = "Input OK";
  } 
  document.getElementById("demo").innerHTML = text;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_validation_rangeUnderflow by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>


END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript addEventListener()</h2>

<p>This example uses the addEventListener() method to add many events on the same button.</p>

<button id="myBtn">Try it</button>

<p id="demo"></p>

<script>
var x = document.getElementById("myBtn");
x.addEventListener("mouseover", myFunction);
x.addEventListener("click", mySecondFunction);
x.addEventListener("mouseout", myThirdFunction);

function myFunction() {
  document.getElementById("demo").innerHTML += "Moused over!<br>";
}

function mySecondFunction() {
  document.getElementById("demo").innerHTML += "Clicked!<br>";
}

function myThirdFunction() {
  document.getElementById("demo").innerHTML += "Moused out!<br>";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_add_many2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Timing</h2>

<p>Click "Try it". Wait 3 seconds, and the page will alert "Hello".</p>

<button onclick="setTimeout(myFunction, 3000);">Try it</button>

<script>
function myFunction() {
  alert('Hello');
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_timing1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Do a global search for the hexadecimal number 0057 (W) in a string:</p>

<p id="demo"></p>

<script>
let text = "Visit W3Schools. Hello World!"; 
let result = text.match(/\u0057/g);
document.getElementById("demo").innerHTML = result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_ux by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p id="demo"></p>

<script>
let x = 5;
if (x == 19);
{
document.getElementById("demo").innerHTML = "Hello";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_semicolon by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Validation</h2>

<p>Enter a number and click OK:</p>

<input id="id1" type="number" min="100" max="300" required>
<button onclick="myFunction()">OK</button>

<p>If the number is less than 100 or greater than 300, an error message will be displayed.</p>

<p id="demo"></p>

<script>
function myFunction() {
  const inpObj = document.getElementById("id1");
  if (!inpObj.checkValidity()) {
    document.getElementById("demo").innerHTML = inpObj.validationMessage;
  } else {
    document.getElementById("demo").innerHTML = "Input OK";
  } 
} 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_validation_check by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
tm by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 15:43:21 GMT -->
<head>
<script>
function breakout() {
  if (window.top != window.self) {
    window.top.location = "tryjs_breakout.html";
  }
}
</script>
</head>
<body>

<input type="button" onclick="breakout()" value="Break out of frame!">

</body>

<!-- Mirrored from www.w3schools.com/js/tryjs_breakout.htm by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 15:43:21 GMT -->
</html
END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The substr() method extract a part of a string
and returns the extracted parts in a new string:</p>

<p id="demo"></p>

<script>
let str = "Apple, Banana, Kiwi";
document.getElementById("demo").innerHTML = str.substr(7);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_substr1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>JavaScript Objects</h1>

<p>Using an object constructor:</p>

<p id="demo"></p>

<script>
function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
  this.nationality = "English";
}

const myFather = new Person("John", "Doe", 50, "blue");
const myMother = new Person("Sally", "Rally", 48, "green");

document.getElementById("demo").innerHTML =
"The nationality of my father is " + myFather.nationality + ". The nationality of my mother is " + myMother.nationality;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_prototype4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>This example will return a correct result:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = myFunction(55);
function myFunction(a) {
  let power = 10
  return a * power
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_return_1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>ES5 (2009) allows property acces on strings. But read only:</p>

<p id="demo"></p>

<script>
let text = "HELLO WORLD";

text[0] = "A";  // Does not work

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_prop2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Search</h2>

<p>Search a string for "ain":</p>

<p id="demo"></p>

<script>
let text = "The rain in SPAIN stays mainly in the plain"; 
document.getElementById("demo").innerHTML = text.match(/ain/g);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_match_regexp by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Operators</h2>

<p>x = 5, y = 2, calculate z = x + y, and display z:</p>

<p id="demo"></p>

<script>
let x = 5;
let y = 2;
let z = x + y;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Number Properties</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Number.NaN;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_number_nan by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Booleans and Boolean objects cannot be safely compared:</p>

<p id="demo"></p>

<script>
// x is a boolean
let x = false;

// y is an object
let y = new Boolean(false);

document.getElementById("demo").innerHTML = typeof x + "<br>" + typeof y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_booleans_object by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img id="planets" src="planets.gif" width="145" height="126" usemap="#planetmap">

<map name="planetmap">
  <area id="venus" shape="circle" coords="124,58,8" alt="The planet venus" href="venus.html">
</map>

<p>Click the button to display the value of the usemap attribute of the image.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("planets").useMap;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_img_usemap by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:08 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Common JavaScript Mistakes</h2>

<p>This example will return a correct result:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = myFunction(55);
function myFunction(a) {
  let
  power = 10;
  return a * power;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_mistakes_return_3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p>Assign 5 to x, and display the value of the comparison (x &lt;= 8).</p>

<p id="demo"></p>

<script>
let x = 5;
document.getElementById("demo").innerHTML = (x <= 8);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison11 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The XMLHttpRequest Object</h2>
<button type="button" onclick="loadDoc()">Request data</button>

<p id="demo"></p>
 
<script>
function loadDoc() {
  const xhttp = new XMLHttpRequest();
  xhttp.onload = function() {
    document.getElementById("demo").innerHTML = this.responseText;
  }
  xhttp.open("POST.html", "demo_post.html");
  xhttp.send();
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_post by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:59 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleans</h2>
<p>Display the Boolean value of  -0:</p>

<p id="demo"></p>

<script>
let x = -0;
document.getElementById("demo").innerHTML = Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_boolean_minus by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>With "use strict":</h2>
<h3>The with statement is not allowed.</h3>

<p>Activate debugging in your browser (F12) to see the error report.</p>

<script>
"use strict";
with (Math){x = cos(2)};   // This will cause an error 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_strict_width by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.some()</h2>

<p>The some() method checks if some array values pass a test.</p>

<p id="demo"></p>

<script>
var numbers = [45, 4, 9, 16, 25];
var allOver18 = numbers.some(myFunction);

document.getElementById("demo").innerHTML = "Some over 18 is " + allOver18;

function myFunction(value) {
  return value > 18;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_array_some by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Regular Expressions</h2>

<p>Do a global search for at least one "o" in a string:</p>

<p id="demo"></p>

<script>
let text = "Hellooo World! Hello W3Schools!"; 
let result = text.match(/o+/g);
document.getElementById("demo").innerHTML = result;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_regexp_n1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Date Object</h2>
<p>This "home made" isDate() function returns true when used on an date:</p>

<p id="demo"></p>

<script>
const myDate = new Date();
document.getElementById("demo").innerHTML = isDate(myDate);

function isDate(myDate) {
  return myDate.constructor === Date;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_isdate by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Properties</h2>
<p>Access a property with .property:</p>

<p id="demo"></p>

<script>
const person = {
  firstname: "John",
  lastname: "Doe",
  age: 50,
  eyecolor: "blue"
};

document.getElementById("demo").innerHTML = person.firstname + " is " + person.age + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_properties1 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<h3>The / Operator</h3>

<p id="demo"></p>

<script>
let x = 5;
let y = 2;
let z = x / y;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_oper_div by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arithmetic</h2>
<p>A typical arithmetic operation takes two numbers (or variables) and produces a new number.</p>

<p id="demo"></p>

<script>
let a = 100;
let b = 50;
let x = a + b;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_arithmetic_variables by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:45 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Object.values() converts an object to an array.</p>

<p id="demo"></p>

<script>
const person = {
  name: "John",
  age: 30,
  city: "New York"
};

document.getElementById("demo").innerHTML = Object.values(person);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_display_values by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.sqrt()</h2>

<p>Math.sqrt(x) returns the square root of x:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.sqrt(64);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_sqrt by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function validateForm() {
  let x = document.forms["myForm"]["fname"].value;
  if (x == "") {
    alert("Name must be filled out");
    return false;
  }
}
</script>
</head>
<body>

<h2>JavaScript Validation</h2>

<form name="myForm" action="https://www.w3schools.com/action_page.php" onsubmit="return validateForm()" method="post">
  Name: <input type="text" name="fname">
  <input type="submit" value="Submit">
</form>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_validation_js by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:52 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.forEach()</h2>
<p>Calls a function once for each array element.</p>

<p id="demo"></p>

<script>
const numbers = [45, 4, 9, 16, 25];

let txt = "";
numbers.forEach(myFunction);
document.getElementById("demo").innerHTML = txt;

function myFunction(value, index, array) {
  txt += value + "<br>"; 
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_foreach by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Finding HTML Elements by Query Selector</h2>
<p class="intro">Hello World!</p>
<p class="intro">Hello Sweden!</p>
<p class="intro">Hello Japan!</p>

<p id="demo"></p>

<script>
const myElements = document.querySelectorAll("p.intro");
document.getElementById("demo").innerHTML = 
"The first paragraph with class='intro' is: " + myElements[0].innerHTML;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_jquery_dom_queryselectorall by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object Constructors</h2>

<p id="demo"></p>

<script>

// Constructor function for Person objects
function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
  this.nationality = "English";
}

// Create 2 Person objects
const myFather = new Person("John", "Doe", 50, "blue");
const myMother = new Person("Sally", "Rally", 48, "green");

// Display nationality
document.getElementById("demo").innerHTML =
"My father is " + myFather.nationality + ". My mother is " + myMother.nationality; 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_constructor5 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript addEventListener()</h2>

<p>This example demonstrates how to pass parameter values when using the addEventListener() method.</p>

<p>Click the button to perform a calculation.</p>

<button id="myBtn">Try it</button>

<p id="demo"></p>

<script>
let p1 = 5;
let p2 = 7;
document.getElementById("myBtn").addEventListener("click", function() {
  myFunction(p1, p2);
});

function myFunction(a, b) {
  document.getElementById("demo").innerHTML = a * b;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_addeventlistener_parameters by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<img src="planets.gif" width="145" height="126" usemap="#planetmap">

<map name="planetmap">
  <area id="venus" shape="circle" coords="124,58,8" alt="Venus" href="venus.html">
</map>

<p>Click the button to display the hostname of the href attribute for the "venus" area.</p>

<button onclick="myFunction()">Try it</button>

<p id="demo"></p>

<script>
function myFunction() {
  var x = document.getElementById("venus").hostname;
  document.getElementById("demo").innerHTML = x;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_area_hostname by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:04 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Comparison</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 2 > "John";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_comparison_24 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p id="demo"></p>

<script>
const person = {
  firstName: "John",
  lastName: "Doe",
  id: 5566,
};
person.name = function() {
  return this.firstName + " " + this.lastName;
};

document.getElementById("demo").innerHTML =
"My father is " + person.name(); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_method_add by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>My Heading</h2>

<p>Play around with the code and click on the "Run" button to view the result.</p>

<p id="demo"></p>

<script>
let x = 5;
let y = 6;
let z = x + y;
document.getElementById("demo").innerHTML = "The value of z is: " + z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_editor by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:13 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Function Closures</h2>
<p>Counting with a local variable.</p>

<p id="demo"></p>

<script>
// Initiate counter
let counter = 0;

// Function to increment counter
function add() {
  let counter = 0; 
  counter += 1;
}

// Call add() 3 times
add();
add();
add();

// The result is not 3 because you mix up the globaland local counter
document.getElementById("demo").innerHTML = "The counter is: " + counter;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_closures2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Math.trunc()</h2>

<p>Math.trunc(x) returns the integer part of x:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = Math.trunc(4.7);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_math_trunc by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<iframe id="myframe" src="../default.html"></iframe>

<p>Click the button to change the src attribute in the iframe.</p>

<button onclick="myFunction()">Try it</button>

<script>
function myFunction() {
  document.getElementById("myframe").src = "http://www.cnn.com/";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_iframe_src2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:06 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>The Navigator Object</h2>

<p>The cookieEnabled property returns true if cookies are enabled:</p>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"navigator.cookieEnabled is " + navigator.cookieEnabled;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_nav_cookieenabled by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript HTMLDOM</h2>
<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"Number of embeds: " + document.embeds.length;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_doc_embeds by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>Declaring a Variable Using const</h2>

<p id="demo"></p>

<script>
var  x = 10;
// Here x is 10
{  
  const x = 2;
  // Here x is 2
}
// Here x is 10
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es6_const by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>If you add two numbers, the result will be a number:</p>

<p id="demo"></p>

<script>
let x = 10;
let y = 20;
let z = x + y;
document.getElementById("demo").innerHTML = z;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_add by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h1>The JavaScript <i>this</i> Keyword</h1>

<p>In this example, <b>this</b> refers to the window object:</p>
<p id="demo"></p>

<script>
"use strict";
let x = this;
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_this_alone by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  age: 50,
  eyeColor: "blue"
};

// Display some data from the object:
document.getElementById("demo").innerHTML =
person.firstName + " is " + person.age + " years old.";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_objects_create_2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
var myWindow;
function openWin() {
  myWindow = window.open("", "", "width=400, height=200");
}

function closeWin() {
  myWindow.close();
}
</script>
</head>
<body>

<input type="button" value="Open 'myWindow'" onclick="openWin()" />
<input type="button" value="Close 'myWindow'" onclick="closeWin()" />

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_win_close by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:12 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Global Methods</h2>

<p>The Number() method can convert a date to a number:</p>

<p id="demo"></p>

<script>
let x = new Date("2017-09-30");
document.getElementById("demo").innerHTML = Number(x); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_global_number_date by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Functions</h2>
<p>Functions can be treated as values:</p>
<p>x = myFunction(4,3) or x = 12</p>
<p>In both cases, x becomes a number with the value of 12.</p>
<p id="demo"></p>

<script>
function myFunction(a, b) {
  return a * b;
}
let x = myFunction(4, 3);
document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function_value by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:49 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<head>
<script>
function goForward() {
  window.history.forward()
}
</script>
</head>
<body>

<button onclick="goForward()">Go Forward</button>

<p>Clicking on the Forward button here will not result in any action, because there is no next URL in the history list.</p>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_history_forward by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:13 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>What Can JavaScript Do?</h2>

<p id="demo">JavaScript can change the style of an HTML element.</p>

<button type="button" onclick="document.getElementById('demo').style.fontSize='35px'">Click Me!</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_intro_style by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:31 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<style>
table,th,td {
  border : 1px solid black;
  border-collapse: collapse;
}
th,td {
  padding: 5px;
}
</style>
<body>

<button type="button" onclick="loadXMLDoc()">Get my CD collection</button>
<br><br>
<table id="demo"></table>

<script>
function loadXMLDoc() {
  const xhttp = new XMLHttpRequest();
  xhttp.onload = function() {
    const xmlDoc = xhttp.responseXML;
    const cd = xmlDoc.getElementsByTagName("CD");
    myFunction(cd)
  }
  xhttp.open("GET.html", "cd_catalog.xml");
  xhttp.send();
}

function myFunction(cd) {
  let table="<tr><th>Artist</th><th>Title</th></tr>";
  for (let i = 0; i < cd.length; i++) { 
    table += "<tr><td>" +
    cd[i].getElementsByTagName("ARTIST")[0].childNodes[0].nodeValue +
    "</td><td>" +
    cd[i].getElementsByTagName("TITLE")[0].childNodes[0].nodeValue +
    "</td></tr>";
  }
  document.getElementById("demo").innerHTML = table;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_display_table by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:00 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.every()</h2>

<p>The every() method checks if all array values pass a test.</p>

<p id="demo"></p>

<script>
var numbers = [45, 4, 9, 16, 25];
var allOver18 = numbers.every(myFunction);

document.getElementById("demo").innerHTML = "All over 18 is " + allOver18;

function myFunction(value, index, array) {
  return value > 18;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_array_every by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Window</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"Browser inner window width: " + window.innerWidth + "px<br>" +
"Browser inner window height: " + window.innerHeight + "px";
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_win_inner by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:54 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<body>

<canvas id="myChart" style="width:100%;max-width:600px"></canvas>

<script>
var xValues = ["Italy", "France", "Spain", "USA", "Argentina"];
var yValues = [55, 49, 44, 24, 15];
var barColors = [
  "#b91d47",
  "#00aba9",
  "#2b5797",
  "#e8c3b9",
  "#1e7145"
];

new Chart("myChart", {
  type: "doughnut",
  data: {
    labels: xValues,
    datasets: [{
      backgroundColor: barColors,
      data: yValues
    }]
  },
  options: {
    title: {
      display: true,
      text: "World Wide Wine Production 2018"
    }
  }
});
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_chartjs_doughnut by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:31:40 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Callbacks</h2>

<p id="demo"></p>

<script>
function myDisplayer(some) {
  document.getElementById("demo").innerHTML = some;
}

function getFile(myCallback) {
  let req = new XMLHttpRequest();
  req.open('GET.html', "mycar.html");
  req.onload = function() {
    if (req.status == 200) {
      myCallback(this.responseText);
    } else {
      myCallback("Error: " + req.status);
    }
  }
  req.send();
}

getFile(myDisplayer); 
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_callback7 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:50 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>
<canvas id="myCanvas" width="400" height="400" style="border:1px solid grey"></canvas>

<script>
const canvas = document.getElementById("myCanvas");
const ctx = canvas.getContext("2d");
ctx.fillStyle = "#FF0000";
canvas.height = canvas.width;
ctx.transform(1, 0, 0, -1, 0, canvas.height)

let xMax = canvas.height;
let slope = 1.2;
let intercept = 70;

ctx.moveTo(0, intercept);
ctx.lineTo(xMax, f(xMax));
ctx.strokeStyle = "black";
ctx.stroke();

function f(x) {
  return x * slope + intercept;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryai_canvas_line by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:47:02 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array.filter()</h2>
<p>Creates a new array with all array elements that passes a test.</p>

<p id="demo"></p>

<script>
const numbers = [45, 4, 9, 16, 25];
const over18 = numbers.filter(myFunction);

document.getElementById("demo").innerHTML = over18;

function myFunction(value, index, array) {
  return value > 18;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_filter by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Getters and Setters</h2>

<p>Getters and setters allow you to get and set properties via methods.</p>

<p>This example has a modified setter to secure upper case uppdates of language.</p>

<p id="demo"></p>

<script>
// Create an object:
var person = {
  firstName: "John",
  lastName : "Doe",
  language : "",
  set lang(value) {
     this.language = value.toUpperCase();
  }
};
// Set an object property using a setter:
person.lang = "en";
// Display data from the object:
document.getElementById("demo").innerHTML = person.language;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_es5_setter2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript For Loop</h2>

<p id="demo"></p>

<script>
const cars = ["BMW", "Volvo", "Saab", "Ford"];
let i = 2;
let len = cars.length;
let text = "";

for (; i < len; i++) {
  text += cars[i] + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_loop_for_om2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Click "Try it" to call a function with arguments</p>

<button onclick="myFunction('Harry Potter','Wizard')">Try it</button>

<p id="demo"></p>

<script>
function myFunction(name,job) {
  document.getElementById("demo").innerHTML = "Welcome " + name + ", the " + job + ".";
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_function2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript</h2>

<p>Objects can be emptied by setting the value to <b>null</b>.</p>

<p id="demo"></p>

<script>
let person = {firstName:"John", lastName:"Doe", age:50, eyeColor:"blue"};
person = null;
document.getElementById("demo").innerHTML = typeof person;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_datatypes_null by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<p>Delete array properties:</p>
<p id="demo"></p>

<script>
let x = "";
const myObj = {
  "name":"John",
  "age":30,
  "cars": ["Ford","BMW","Fiat"]
}

delete myObj.cars[1];

for (let i in myObj.cars) {
  x += myObj.cars[i] + "<br>";
}

document.getElementById("demo").innerHTML = x;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_array_delete by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Access nested objects:</p>

<p id="demo"></p>

<script>
const myObj = {
  name: "John",
  age: 30,
  cars: {
  car1: "Ford",
  car2: "BMW",
  car3: "Fiat"
  }
}

let p1 = "cars";
let p2 = "car2";
document.getElementById("demo").innerHTML = myObj[p1][p2];
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_object_nested4 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Template Literals</h2>

<p>Template literals allows variables in strings:</p>

<p id="demo"></p>

<p>Template literals are not supported in Internet Explorer.</p>

<script>
let price = 10;
let VAT = 0.25;
let total = `Total: ${(price * (1 + VAT)).toFixed(2)}`;

document.getElementById("demo").innerHTML = total;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_templates_expressions by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JSON.stringify() will remove any functions from an object.</h2>
<p id="demo"></p>

<script>
const obj = {name: "John", age: function () {return 30;}, city: "New York"};
const myJSON = JSON.stringify(obj);
document.getElementById("demo").innerHTML = myJSON;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjson_stringify_function by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:34 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Type Conversions</h2>

<p>Converting a numeric string to other types:</p>

<p id="demo" style="font-family:courier"></p>

<script>
let x = "20";
document.getElementById("demo").innerHTML =
"Number : " + Number(x) + "<br>" +
"String : " + String(x) + "<br>" +
"Boolean: " + Boolean(x);
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_type_convert_string_number by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:47 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript new Date()</h2>

<p>JavaScript counts months from 0 to 11.</p>
<p>Specifying a day higher than max, will not result in an error but add the overflow to the next month:</p>

<p id="demo"></p>

<script>
const d = new Date(2018, 05, 35, 10, 33, 30, 0);
document.getElementById("demo").innerHTML = d;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_date_new_day_35 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:46 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>What Can JavaScript Do?</h2>

<p id="demo">JavaScript can hide HTML elements.</p>

<button type="button" onclick="document.getElementById('demo').style.display='none'">Click Me!</button>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_intro_hide by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:31 GMT -->
</html> 

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>
<p>Click the buttons to sort car objects on type.</p>

<button onclick="myFunction()">Sort</button>
<p id="demo"></p>

<script>
const cars = [
  {type:"Volvo", year:2016},
  {type:"Saab", year:2001},
  {type:"BMW", year:2010}
];

displayCars();

function myFunction() {
  cars.sort(function(a, b){
    let x = a.type.toLowerCase();
    let y = b.type.toLowerCase();
    if (x < y) {return -1;}
    if (x > y) {return 1;}
    return 0;
  });
  displayCars();
}

function displayCars() {
  document.getElementById("demo").innerHTML =
  cars[0].type + " " + cars[0].year + "<br>" +
  cars[1].type + " " + cars[1].year + "<br>" +
  cars[2].type + " " + cars[2].year;
}
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_array_sort_object2 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:33 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>The indexOf() method returns the position of the first occurrence of a specified text:</p>

<p id="demo"></p>

<script>
let str = "Please locate where 'locate' occurs!";
document.getElementById("demo").innerHTML = str.indexOf("locate");
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_string_indexof by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>

END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>Floating point arithmetic is not always 100% accurate:</p>
<p id="demo1"></p>

<p>But it helps to multiply and divide:</p>

<p id="demo2"></p>

<script>
let x = 0.2 + 0.1;
document.getElementById("demo1").innerHTML = "0.2 + 0.1 = " + x;
let y = (0.2*10 + 0.1*10) / 10;
document.getElementById("demo2").innerHTML = "0.2 + 0.1 = " + y;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_numbers_inaccurate3 by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:29:32 GMT -->
</html>



END_OF_CODE
<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Class</h2>

<p>How to use a JavaScript Class.</p>

<p id="demo"></p>

<script>
class Car {
  constructor(name, year) {
    this.name = name;
    this.year = year;
  }
}

const myCar = new Car("Ford", 2014);
document.getElementById("demo").innerHTML =
myCar.name + " " + myCar.year;
</script>

</body>

<!-- Mirrored from www.w3schools.com/js/tryit.asp?filename=tryjs_class_init by HTTrack Website Copier/3.x [XR&CO'2014], Mon, 05 Sep 2022 14:46:48 GMT -->
</html>

END_OF_CODE
